

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Aug 12 10:21:48 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1,inline
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	text76,global,reloc=2,class=CODE,delta=1
    89                           	psect	text77,global,reloc=2,class=CODE,delta=1
    90                           	psect	text78,global,reloc=2,class=CODE,delta=1
    91                           	psect	text79,global,reloc=2,class=CODE,delta=1
    92                           	psect	text80,global,reloc=2,class=CODE,delta=1
    93                           	psect	text81,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	text82,global,reloc=2,class=CODE,delta=1
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    99                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   100  0000                     
   101                           ; Version 2.20
   102                           ; Generated 05/05/2020 GMT
   103                           ; 
   104                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F46K20 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     
   136                           	psect	smallconst
   137  001000                     __psmallconst:
   138                           	callstack 0
   139  001000  00                 	db	0
   140  001001                     _fsmStateTable:
   141                           	callstack 0
   142  001001  9E                 	db	low _I2C_DO_IDLE
   143  001002  24                 	db	high _I2C_DO_IDLE
   144  001003  76                 	db	low _I2C_DO_SEND_ADR_READ
   145  001004  24                 	db	high _I2C_DO_SEND_ADR_READ
   146  001005  66                 	db	low _I2C_DO_SEND_ADR_WRITE
   147  001006  24                 	db	high _I2C_DO_SEND_ADR_WRITE
   148  001007  4A                 	db	low _I2C_DO_TX
   149  001008  19                 	db	high _I2C_DO_TX
   150  001009  CA                 	db	low _I2C_DO_RX
   151  00100A  1A                 	db	high _I2C_DO_RX
   152  00100B  92                 	db	low _I2C_DO_RCEN
   153  00100C  24                 	db	high _I2C_DO_RCEN
   154  00100D  1A                 	db	low _I2C_DO_TX_EMPTY
   155  00100E  1D                 	db	high _I2C_DO_TX_EMPTY
   156  00100F  28                 	db	low _I2C_DO_SEND_RESTART_READ
   157  001010  25                 	db	high _I2C_DO_SEND_RESTART_READ
   158  001011  20                 	db	low _I2C_DO_SEND_RESTART_WRITE
   159  001012  25                 	db	high _I2C_DO_SEND_RESTART_WRITE
   160  001013  18                 	db	low _I2C_DO_SEND_RESTART
   161  001014  25                 	db	high _I2C_DO_SEND_RESTART
   162  001015  10                 	db	low _I2C_DO_SEND_STOP
   163  001016  25                 	db	high _I2C_DO_SEND_STOP
   164  001017  08                 	db	low _I2C_DO_RX_ACK
   165  001018  25                 	db	high _I2C_DO_RX_ACK
   166  001019  00                 	db	low _I2C_DO_RX_NACK_STOP
   167  00101A  25                 	db	high _I2C_DO_RX_NACK_STOP
   168  00101B  F8                 	db	low _I2C_DO_RX_NACK_RESTART
   169  00101C  24                 	db	high _I2C_DO_RX_NACK_RESTART
   170  00101D  86                 	db	low _I2C_DO_RESET
   171  00101E  24                 	db	high _I2C_DO_RESET
   172  00101F  64                 	db	low _I2C_DO_ADDRESS_NACK
   173  001020  1F                 	db	high _I2C_DO_ADDRESS_NACK
   174  001021                     __end_of_fsmStateTable:
   175                           	callstack 0
   176  001021                     STR_2:
   177                           
   178                           ; BSR set to: 0
   179  001021  25                 	db	37
   180  001022  64                 	db	100	;'d'
   181  001023  B0                 	db	-80
   182  001024  43                 	db	67	;'C'
   183  001025  0D                 	db	13
   184  001026  0A                 	db	10
   185  001027  00                 	db	0
   186  001028                     STR_1:
   187                           
   188                           ; BSR set to: 0
   189  001028  2D                 	db	45
   190  001029  00                 	db	0
   191  00102A  00                 	db	0	; dummy byte at the end
   192  0000                     
   193                           	psect	nvBANK0
   194  0000DD                     __pnvBANK0:
   195                           	callstack 0
   196  0000DD                     _EUSART_ErrorHandler:
   197                           	callstack 0
   198  0000DD                     	ds	2
   199  0000DF                     _EUSART_OverrunErrorHandler:
   200                           	callstack 0
   201  0000DF                     	ds	2
   202  0000E1                     _EUSART_FramingErrorHandler:
   203                           	callstack 0
   204  0000E1                     	ds	2
   205  0000E3                     _EUSART_RxDefaultInterruptHandler:
   206                           	callstack 0
   207  0000E3                     	ds	2
   208  0000E5                     _EUSART_TxDefaultInterruptHandler:
   209                           	callstack 0
   210  0000E5                     	ds	2
   211  0000E7                     _eusartTxBufferRemaining:
   212                           	callstack 0
   213  0000E7                     	ds	1
   214  0000                     _RCONbits	set	4048
   215  0000                     _RCREG	set	4014
   216  0000                     _RCSTAbits	set	4011
   217  0000                     _TXREG	set	4013
   218  0000                     _TXSTAbits	set	4012
   219  0000                     _SPBRGH	set	4016
   220  0000                     _SPBRG	set	4015
   221  0000                     _TXSTA	set	4012
   222  0000                     _RCSTA	set	4011
   223  0000                     _BAUDCON	set	4024
   224  0000                     _INTCONbits	set	4082
   225  0000                     _INTCON2bits	set	4081
   226  0000                     _WPUB	set	3964
   227  0000                     _ANSELH	set	3967
   228  0000                     _ANSEL	set	3966
   229  0000                     _TRISD	set	3989
   230  0000                     _TRISC	set	3988
   231  0000                     _TRISB	set	3987
   232  0000                     _TRISA	set	3986
   233  0000                     _TRISE	set	3990
   234  0000                     _LATC	set	3979
   235  0000                     _LATB	set	3978
   236  0000                     _LATA	set	3977
   237  0000                     _LATD	set	3980
   238  0000                     _LATE	set	3981
   239  0000                     _OSCTUNE	set	3995
   240  0000                     _OSCCON	set	4051
   241  0000                     _PIR1bits	set	3998
   242  0000                     _PIE1bits	set	3997
   243  0000                     _SSPSTATbits	set	4039
   244  0000                     _PIR2bits	set	4001
   245  0000                     _SSPCON2bits	set	4037
   246  0000                     _SSPBUF	set	4041
   247  0000                     _SSPCON1bits	set	4038
   248  0000                     _SSPADD	set	4040
   249  0000                     _SSPCON2	set	4037
   250  0000                     _SSPCON1	set	4038
   251  0000                     _SSPSTAT	set	4039
   252                           
   253                           ; #config settings
   254                           
   255                           	psect	cinit
   256  0023AC                     __pcinit:
   257                           	callstack 0
   258  0023AC                     start_initialization:
   259                           	callstack 0
   260  0023AC                     __initialization:
   261                           	callstack 0
   262                           
   263                           ; Clear objects allocated to BANK0 (102 bytes)
   264  0023AC  EE00  F060         	lfsr	0,__pbssBANK0
   265  0023B0  0E66               	movlw	102
   266  0023B2                     clear_0:
   267  0023B2  6AEE               	clrf	postinc0,c
   268  0023B4  06E8               	decf	wreg,f,c
   269  0023B6  E1FD               	bnz	clear_0
   270                           
   271                           ; Clear objects allocated to COMRAM (4 bytes)
   272  0023B8  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   273  0023BA  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   274  0023BC  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   275  0023BE  6A56               	clrf	__pbssCOMRAM& (0+255),c
   276  0023C0                     end_of_initialization:
   277                           	callstack 0
   278  0023C0                     __end_of__initialization:
   279                           	callstack 0
   280  0023C0  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   281  0023C2  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   282  0023C4  0100               	movlb	0
   283  0023C6  EFDC  F00B         	goto	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMRAM
   286  000056                     __pbssCOMRAM:
   287                           	callstack 0
   288  000056                     _eusartRxTail:
   289                           	callstack 0
   290  000056                     	ds	1
   291  000057                     _eusartRxHead:
   292                           	callstack 0
   293  000057                     	ds	1
   294  000058                     _eusartTxTail:
   295                           	callstack 0
   296  000058                     	ds	1
   297  000059                     _eusartTxHead:
   298                           	callstack 0
   299  000059                     	ds	1
   300                           
   301                           	psect	bssBANK0
   302  000060                     __pbssBANK0:
   303                           	callstack 0
   304  000060                     _I2C_Status:
   305                           	callstack 0
   306  000060                     	ds	36
   307  000084                     _eusartRxStatusBuffer:
   308                           	callstack 0
   309  000084                     	ds	8
   310  00008C                     _eusartRxBuffer:
   311                           	callstack 0
   312  00008C                     	ds	8
   313  000094                     _eusartTxBuffer:
   314                           	callstack 0
   315  000094                     	ds	8
   316  00009C                     _nout:
   317                           	callstack 0
   318  00009C                     	ds	2
   319  00009E                     _width:
   320                           	callstack 0
   321  00009E                     	ds	2
   322  0000A0                     _prec:
   323                           	callstack 0
   324  0000A0                     	ds	2
   325  0000A2                     _flags:
   326                           	callstack 0
   327  0000A2                     	ds	2
   328  0000A4                     _eusartRxLastError:
   329                           	callstack 0
   330  0000A4                     	ds	1
   331  0000A5                     _eusartRxCount:
   332                           	callstack 0
   333  0000A5                     	ds	1
   334  0000A6                     _dbuf:
   335                           	callstack 0
   336  0000A6                     	ds	32
   337                           
   338                           	psect	cstackBANK0
   339  0000C6                     __pcstackBANK0:
   340                           	callstack 0
   341  0000C6                     ?_vfprintf:
   342                           	callstack 0
   343  0000C6                     vfprintf@fp:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x0
   347  0000C6                     	ds	2
   348  0000C8                     vfprintf@fmt:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x2
   352  0000C8                     	ds	2
   353  0000CA                     vfprintf@ap:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x4
   357  0000CA                     	ds	2
   358  0000CC                     vfprintf@cfmt:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x6
   362  0000CC                     	ds	2
   363  0000CE                     ?_printf:
   364                           	callstack 0
   365  0000CE                     printf@fmt:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x8
   369  0000CE                     	ds	6
   370  0000D4                     printf@ap:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xE
   374  0000D4                     	ds	2
   375  0000D6                     ??_main:
   376                           
   377                           ; 1 bytes @ 0x10
   378  0000D6                     	ds	3
   379  0000D9                     main@tempData:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x13
   383  0000D9                     	ds	2
   384  0000DB                     main@tempDataAnz:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x15
   388  0000DB                     	ds	2
   389                           
   390                           	psect	cstackCOMRAM
   391  000001                     __pcstackCOMRAM:
   392                           	callstack 0
   393  000001                     ??_INTERRUPT_InterruptManager:
   394  000001                     
   395                           ; 1 bytes @ 0x0
   396  000001                     	ds	4
   397  000005                     ?_strlen:
   398                           	callstack 0
   399  000005                     ?___aodiv:
   400                           	callstack 0
   401  000005                     ?___aomod:
   402                           	callstack 0
   403  000005                     I2C_Open@address:
   404                           	callstack 0
   405  000005                     I2C_Close@returnValue:
   406                           	callstack 0
   407  000005                     I2C_MasterSendTxData@data:
   408                           	callstack 0
   409  000005                     EUSART_Write@txData:
   410                           	callstack 0
   411  000005                     I2C_SetBuffer@buffer:
   412                           	callstack 0
   413  000005                     I2C_SetCallback@cb:
   414                           	callstack 0
   415  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   416                           	callstack 0
   417  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   418                           	callstack 0
   419  000005                     EUSART_SetErrorHandler@interruptHandler:
   420                           	callstack 0
   421  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   422                           	callstack 0
   423  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   424                           	callstack 0
   425  000005                     strlen@s:
   426                           	callstack 0
   427  000005                     ___aodiv@dividend:
   428                           	callstack 0
   429  000005                     ___aomod@dividend:
   430                           	callstack 0
   431                           
   432                           ; 8 bytes @ 0x4
   433  000005                     	ds	1
   434  000006                     I2C_Open@returnValue:
   435                           	callstack 0
   436  000006                     putch@txData:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x5
   440  000006                     	ds	1
   441  000007                     I2C_SetBuffer@bufferSize:
   442                           	callstack 0
   443  000007                     I2C_SetCallback@ptr:
   444                           	callstack 0
   445  000007                     fputc@c:
   446                           	callstack 0
   447  000007                     strlen@a:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x6
   451  000007                     	ds	2
   452  000009                     I2C_SetCallback@idx:
   453                           	callstack 0
   454  000009                     fputc@fp:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x8
   458  000009                     	ds	1
   459  00000A                     I2C_SetDataCompleteCallback@cb:
   460                           	callstack 0
   461  00000A                     I2C_SetAddressNackCallback@cb:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x9
   465  00000A                     	ds	1
   466  00000B                     ??_fputc:
   467                           
   468                           ; 1 bytes @ 0xA
   469  00000B                     	ds	1
   470  00000C                     I2C_SetDataCompleteCallback@ptr:
   471                           	callstack 0
   472  00000C                     I2C_SetAddressNackCallback@ptr:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xB
   476  00000C                     	ds	1
   477  00000D                     ___aodiv@divisor:
   478                           	callstack 0
   479  00000D                     ___aomod@divisor:
   480                           	callstack 0
   481                           
   482                           ; 8 bytes @ 0xC
   483  00000D                     	ds	1
   484  00000E                     rd1RegCompleteHandler@ptr:
   485                           	callstack 0
   486  00000E                     rd2RegCompleteHandler@ptr:
   487                           	callstack 0
   488  00000E                     wr1RegCompleteHandler@ptr:
   489                           	callstack 0
   490  00000E                     wr2RegCompleteHandler@ptr:
   491                           	callstack 0
   492  00000E                     rdBlkRegCompleteHandler@ptr:
   493                           	callstack 0
   494  00000E                     I2C_CallbackReturnReset@funPtr:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0xD
   498  00000E                     	ds	2
   499  000010                     ??_I2C_DO_TX:
   500  000010                     ??_I2C_DO_RX:
   501  000010                     ??_I2C_DO_TX_EMPTY:
   502  000010                     ??_I2C_DO_ADDRESS_NACK:
   503  000010                     fputs@s:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0xF
   507  000010                     	ds	2
   508  000012                     ??_I2C_MasterFsm:
   509  000012                     fputs@fp:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x11
   513  000012                     	ds	2
   514  000014                     I2C_MasterOperation@read:
   515                           	callstack 0
   516  000014                     fputs@c:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x13
   520  000014                     	ds	1
   521  000015                     I2C_MasterOperation@returnValue:
   522                           	callstack 0
   523  000015                     ___aodiv@counter:
   524                           	callstack 0
   525  000015                     ___aomod@counter:
   526                           	callstack 0
   527  000015                     fputs@i:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x14
   531  000015                     	ds	1
   532  000016                     ?_I2C_Read2ByteRegister:
   533                           	callstack 0
   534  000016                     I2C_Read2ByteRegister@reg:
   535                           	callstack 0
   536  000016                     I2C_Write2ByteRegister@reg:
   537                           	callstack 0
   538  000016                     ___aodiv@sign:
   539                           	callstack 0
   540  000016                     ___aomod@sign:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x15
   544  000016                     	ds	1
   545  000017                     ?_abs:
   546                           	callstack 0
   547  000017                     ?_pad:
   548                           	callstack 0
   549  000017                     I2C_Write2ByteRegister@data:
   550                           	callstack 0
   551  000017                     pad@fp:
   552                           	callstack 0
   553  000017                     abs@a:
   554                           	callstack 0
   555  000017                     ___aodiv@quotient:
   556                           	callstack 0
   557                           
   558                           ; 8 bytes @ 0x16
   559  000017                     	ds	1
   560  000018                     ??_I2C_Read2ByteRegister:
   561                           
   562                           ; 1 bytes @ 0x17
   563  000018                     	ds	1
   564  000019                     ??_abs:
   565  000019                     I2C_Write2ByteRegister@address:
   566                           	callstack 0
   567  000019                     pad@buf:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x18
   571  000019                     	ds	2
   572  00001B                     I2C_Read2ByteRegister@address:
   573                           	callstack 0
   574  00001B                     pad@p:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x1A
   578  00001B                     	ds	1
   579  00001C                     I2C_Read2ByteRegister@returnValue:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x1B
   583  00001C                     	ds	1
   584  00001D                     ??_pad:
   585                           
   586                           ; 1 bytes @ 0x1C
   587  00001D                     	ds	1
   588  00001E                     pad@i:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x1D
   592  00001E                     	ds	2
   593  000020                     pad@w:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x1F
   597  000020                     	ds	2
   598  000022                     ?_dtoa:
   599                           	callstack 0
   600  000022                     dtoa@fp:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x21
   604  000022                     	ds	2
   605  000024                     dtoa@d:
   606                           	callstack 0
   607                           
   608                           ; 8 bytes @ 0x23
   609  000024                     	ds	8
   610  00002C                     ??_dtoa:
   611                           
   612                           ; 1 bytes @ 0x2B
   613  00002C                     	ds	8
   614  000034                     _dtoa$2024:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x33
   618  000034                     	ds	2
   619  000036                     dtoa@p:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x35
   623  000036                     	ds	2
   624  000038                     dtoa@w:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x37
   628  000038                     	ds	2
   629  00003A                     dtoa@s:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x39
   633  00003A                     	ds	2
   634  00003C                     dtoa@n:
   635                           	callstack 0
   636                           
   637                           ; 8 bytes @ 0x3B
   638  00003C                     	ds	8
   639  000044                     dtoa@i:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x43
   643  000044                     	ds	2
   644  000046                     ?_vfpfcnvrt:
   645                           	callstack 0
   646  000046                     vfpfcnvrt@fp:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x45
   650  000046                     	ds	2
   651  000048                     vfpfcnvrt@fmt:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x47
   655  000048                     	ds	2
   656  00004A                     vfpfcnvrt@ap:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x49
   660  00004A                     	ds	2
   661  00004C                     ??_vfpfcnvrt:
   662                           
   663                           ; 1 bytes @ 0x4B
   664  00004C                     	ds	2
   665  00004E                     vfpfcnvrt@ll:
   666                           	callstack 0
   667                           
   668                           ; 8 bytes @ 0x4D
   669  00004E                     	ds	8
   670  000056                     
   671                           ; 1 bytes @ 0x55
   672 ;;
   673 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   674 ;;
   675 ;; *************** function _main *****************
   676 ;; Defined at:
   677 ;;		line 50 in file "main.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  tempDataAnz     2   21[BANK0 ] unsigned short 
   682 ;;  tempData        2   19[BANK0 ] unsigned short 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;Total ram usage:        7 bytes
   697 ;; Hardware stack levels required when called:   13
   698 ;; This function calls:
   699 ;;		_I2C_Read2ByteRegister
   700 ;;		_I2C_Write2ByteRegister
   701 ;;		_SYSTEM_Initialize
   702 ;;		_printf
   703 ;; This function is called by:
   704 ;;		Startup code after reset
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text0
   709  0017B8                     __ptext0:
   710                           	callstack 0
   711  0017B8                     _main:
   712                           	callstack 18
   713  0017B8                     
   714                           ;main.c: 52:     SYSTEM_Initialize();
   715  0017B8  EC0C  F012         	call	_SYSTEM_Initialize	;wreg free
   716  0017BC                     
   717                           ;main.c: 59:     (INTCONbits.GIE = 1);
   718  0017BC  8EF2               	bsf	242,7,c	;volatile
   719  0017BE                     
   720                           ;main.c: 65:     (INTCONbits.PEIE = 1);
   721  0017BE  8CF2               	bsf	242,6,c	;volatile
   722  0017C0                     
   723                           ;main.c: 77:     uint16_t tempData;;main.c: 78:     uint16_t tempDataAnz;;main.c: 79:   
      +                            I2C_Write2ByteRegister(0x18,0x01,0x0000);
   724  0017C0  0E01               	movlw	1
   725  0017C2  6E16               	movwf	I2C_Write2ByteRegister@reg^0,c
   726  0017C4  0E00               	movlw	0
   727  0017C6  6E18               	movwf	(I2C_Write2ByteRegister@data+1)^0,c
   728  0017C8  0E00               	movlw	0
   729  0017CA  6E17               	movwf	I2C_Write2ByteRegister@data^0,c
   730  0017CC  0E18               	movlw	24
   731  0017CE  EC7B  F00F         	call	_I2C_Write2ByteRegister
   732  0017D2  0E05               	movlw	5
   733  0017D4  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
   734  0017D6  0E18               	movlw	24
   735  0017D8  EC4A  F00E         	call	_I2C_Read2ByteRegister
   736  0017DC                     l3882:
   737                           
   738                           ;main.c: 83:         I2C_Write2ByteRegister(0x18,0x01,0x0000);
   739  0017DC  0E01               	movlw	1
   740  0017DE  6E16               	movwf	I2C_Write2ByteRegister@reg^0,c
   741  0017E0  0E00               	movlw	0
   742  0017E2  6E18               	movwf	(I2C_Write2ByteRegister@data+1)^0,c
   743  0017E4  0E00               	movlw	0
   744  0017E6  6E17               	movwf	I2C_Write2ByteRegister@data^0,c
   745  0017E8  0E18               	movlw	24
   746  0017EA  EC7B  F00F         	call	_I2C_Write2ByteRegister
   747  0017EE                     
   748                           ;main.c: 84:         tempData = I2C_Read2ByteRegister(0x18,0x05);
   749  0017EE  0E05               	movlw	5
   750  0017F0  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
   751  0017F2  0E18               	movlw	24
   752  0017F4  EC4A  F00E         	call	_I2C_Read2ByteRegister
   753  0017F8  C016  F0D9         	movff	?_I2C_Read2ByteRegister,main@tempData
   754  0017FC  C017  F0DA         	movff	?_I2C_Read2ByteRegister+1,main@tempData+1
   755  001800                     
   756                           ;main.c: 85:         tempDataAnz = (tempData & 0x0fff) >> 4;
   757  001800  C0D9  F0D6         	movff	main@tempData,??_main
   758  001804  C0DA  F0D7         	movff	main@tempData+1,??_main+1
   759  001808  0E04               	movlw	4
   760  00180A  0100               	movlb	0	; () banked
   761  00180C  6FD8               	movwf	(??_main+2)& (0+255),b
   762  00180E                     u2545:
   763  00180E  90D8               	bcf	status,0,c
   764  001810  33D7               	rrcf	(??_main+1)& (0+255),f,b
   765  001812  33D6               	rrcf	??_main& (0+255),f,b
   766  001814  2FD8               	decfsz	(??_main+2)& (0+255),f,b
   767  001816  EF07  F00C         	goto	u2545
   768  00181A  51D6               	movf	??_main& (0+255),w,b
   769  00181C  6FDB               	movwf	main@tempDataAnz& (0+255),b
   770  00181E  6BDC               	clrf	(main@tempDataAnz+1)& (0+255),b
   771  001820                     
   772                           ; BSR set to: 0
   773                           ;main.c: 86:         if((tempData & 0x1000) == 0x1000){
   774  001820  A9DA               	btfss	(main@tempData+1)& (0+255),4,b
   775  001822  EF15  F00C         	goto	u2551
   776  001826  EF17  F00C         	goto	u2550
   777  00182A                     u2551:
   778  00182A  EF25  F00C         	goto	l3894
   779  00182E                     u2550:
   780  00182E                     
   781                           ; BSR set to: 0
   782                           ;main.c: 87:             tempDataAnz = 256 - tempDataAnz;
   783  00182E  51DB               	movf	main@tempDataAnz& (0+255),w,b
   784  001830  0800               	sublw	0
   785  001832  6FDB               	movwf	main@tempDataAnz& (0+255),b
   786  001834  51DC               	movf	(main@tempDataAnz+1)& (0+255),w,b
   787  001836  A0D8               	btfss	status,0,c
   788  001838  2AE8               	incf	wreg,f,c
   789  00183A  0801               	sublw	1
   790  00183C  6FDC               	movwf	(main@tempDataAnz+1)& (0+255),b
   791  00183E                     
   792                           ; BSR set to: 0
   793                           ;main.c: 88:             printf("-");
   794  00183E  0E28               	movlw	low STR_1
   795  001840  6FCE               	movwf	printf@fmt& (0+255),b
   796  001842  0E10               	movlw	high STR_1
   797  001844  6FCF               	movwf	(printf@fmt+1)& (0+255),b
   798  001846  EC9F  F011         	call	_printf	;wreg free
   799  00184A                     l3894:
   800                           
   801                           ;main.c: 90:         printf("%d°C\r\n",tempDataAnz);
   802  00184A  0E21               	movlw	low STR_2
   803  00184C  0100               	movlb	0	; () banked
   804  00184E  6FCE               	movwf	printf@fmt& (0+255),b
   805  001850  0E10               	movlw	high STR_2
   806  001852  6FCF               	movwf	(printf@fmt+1)& (0+255),b
   807  001854  C0DB  F0D0         	movff	main@tempDataAnz,?_printf+2
   808  001858  C0DC  F0D1         	movff	main@tempDataAnz+1,?_printf+3
   809  00185C  EC9F  F011         	call	_printf	;wreg free
   810  001860                     
   811                           ;main.c: 91:         _delay((unsigned long)((500)*(8000000/4000.0)));
   812  001860  0E06               	movlw	6
   813  001862  0100               	movlb	0	; () banked
   814  001864  6FD7               	movwf	(??_main+1)& (0+255),b
   815  001866  0E13               	movlw	19
   816  001868  6FD6               	movwf	??_main& (0+255),b
   817  00186A  0EAD               	movlw	173
   818  00186C                     u2567:
   819  00186C  2EE8               	decfsz	wreg,f,c
   820  00186E  D7FE               	bra	u2567
   821  001870  2FD6               	decfsz	??_main& (0+255),f,b
   822  001872  D7FC               	bra	u2567
   823  001874  2FD7               	decfsz	(??_main+1)& (0+255),f,b
   824  001876  D7FA               	bra	u2567
   825  001878  F000 F000          	nop2	
   826  00187C  EFEE  F00B         	goto	l3882
   827  001880  EF58  F000         	goto	start
   828  001884                     __end_of_main:
   829                           	callstack 0
   830                           
   831 ;; *************** function _printf *****************
   832 ;; Defined at:
   833 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   836 ;;		 -> STR_2(7), STR_1(2), 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  ap              2   14[BANK0 ] PTR void [1]
   839 ;;		 -> ?_printf(2), 
   840 ;;  ret             2    0        int 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  2    8[BANK0 ] int 
   843 ;; Registers used:
   844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   850 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;Total ram usage:        8 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; Hardware stack levels required when called:   12
   857 ;; This function calls:
   858 ;;		_vfprintf
   859 ;; This function is called by:
   860 ;;		_main
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text1
   865  00233E                     __ptext1:
   866                           	callstack 0
   867  00233E                     _printf:
   868                           	callstack 18
   869  00233E  0ED0               	movlw	low (?_printf+2)
   870  002340  0100               	movlb	0	; () banked
   871  002342  6FD4               	movwf	printf@ap& (0+255),b
   872  002344  0E00               	movlw	high (?_printf+2)
   873  002346  6FD5               	movwf	(printf@ap+1)& (0+255),b
   874  002348                     
   875                           ; BSR set to: 0
   876  002348  0E00               	movlw	0
   877  00234A  6FC6               	movwf	vfprintf@fp& (0+255),b
   878  00234C  0E00               	movlw	0
   879  00234E  6FC7               	movwf	(vfprintf@fp+1)& (0+255),b
   880  002350  C0CE  F0C8         	movff	printf@fmt,vfprintf@fmt
   881  002354  C0CF  F0C9         	movff	printf@fmt+1,vfprintf@fmt+1
   882  002358  0ED4               	movlw	low printf@ap
   883  00235A  6FCA               	movwf	vfprintf@ap& (0+255),b
   884  00235C  0E00               	movlw	high printf@ap
   885  00235E  6FCB               	movwf	(vfprintf@ap+1)& (0+255),b
   886  002360  ECE5  F00F         	call	_vfprintf	;wreg free
   887  002364  0012               	return		;funcret
   888  002366                     __end_of_printf:
   889                           	callstack 0
   890                           
   891 ;; *************** function _vfprintf *****************
   892 ;; Defined at:
   893 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   896 ;;		 -> NULL(0), 
   897 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   898 ;;		 -> STR_2(7), STR_1(2), 
   899 ;;  ap              2    4[BANK0 ] PTR PTR void 
   900 ;;		 -> printf@ap(2), 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
   903 ;;		 -> STR_2(7), STR_1(2), 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  2    0[BANK0 ] int 
   906 ;; Registers used:
   907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   913 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;Total ram usage:        8 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; Hardware stack levels required when called:   11
   920 ;; This function calls:
   921 ;;		_vfpfcnvrt
   922 ;; This function is called by:
   923 ;;		_printf
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text2
   928  001FCA                     __ptext2:
   929                           	callstack 0
   930  001FCA                     _vfprintf:
   931                           	callstack 18
   932  001FCA                     
   933                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
   934  001FCA  C0C8  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
   935  001FCE  C0C9  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   936  001FD2                     
   937                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
   938  001FD2  0E00               	movlw	0
   939  001FD4  0100               	movlb	0	; () banked
   940  001FD6  6F9D               	movwf	(_nout+1)& (0+255),b
   941  001FD8  0E00               	movlw	0
   942  001FDA  6F9C               	movwf	_nout& (0+255),b
   943                           
   944                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
   945  001FDC  EF03  F010         	goto	l3864
   946  001FE0                     l3862:
   947                           
   948                           ; BSR set to: 0
   949                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   950  001FE0  C0C6  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
   951  001FE4  C0C7  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   952  001FE8  0ECC               	movlw	low vfprintf@cfmt
   953  001FEA  6E48               	movwf	vfpfcnvrt@fmt^0,c
   954  001FEC  0E00               	movlw	high vfprintf@cfmt
   955  001FEE  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
   956  001FF0  C0CA  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
   957  001FF4  C0CB  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   958  001FF8  EC87  F009         	call	_vfpfcnvrt	;wreg free
   959  001FFC  5046               	movf	?_vfpfcnvrt^0,w,c
   960  001FFE  0100               	movlb	0	; () banked
   961  002000  279C               	addwf	_nout& (0+255),f,b
   962  002002  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
   963  002004  239D               	addwfc	(_nout+1)& (0+255),f,b
   964  002006                     l3864:
   965                           
   966                           ; BSR set to: 0
   967                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
   968  002006  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
   969  00200A  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   970  00200E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   971  00200E  6AF8               	clrf	tblptru,c
   972  002010                     	endif
   973  002010                     	if	0	;tblptru may be non-zero
   974  002010                     	endif
   975  002010  0008               	tblrd		*
   976  002012  50F5               	movf	tablat,w,c
   977  002014  0900               	iorlw	0
   978  002016  A4D8               	btfss	status,2,c
   979  002018  EF10  F010         	goto	u2531
   980  00201C  EF12  F010         	goto	u2530
   981  002020                     u2531:
   982  002020  EFF0  F00F         	goto	l3862
   983  002024                     u2530:
   984  002024                     
   985                           ; BSR set to: 0
   986                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
   987  002024  C09C  F0C6         	movff	_nout,?_vfprintf
   988  002028  C09D  F0C7         	movff	_nout+1,?_vfprintf+1
   989  00202C                     
   990                           ; BSR set to: 0
   991  00202C  0012               	return		;funcret
   992  00202E                     __end_of_vfprintf:
   993                           	callstack 0
   994                           
   995 ;; *************** function _vfpfcnvrt *****************
   996 ;; Defined at:
   997 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  1000 ;;		 -> NULL(0), 
  1001 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  1002 ;;		 -> vfprintf@cfmt(2), 
  1003 ;;  ap              2   73[COMRAM] PTR PTR void 
  1004 ;;		 -> printf@ap(2), 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  ll              8   77[COMRAM] long long 
  1007 ;;  llu             8    0        unsigned long long 
  1008 ;;  f               4    0        unsigned long long 
  1009 ;;  vp              3    0        PTR void 
  1010 ;;  ct              3    0        unsigned char [3]
  1011 ;;  cp              3    0        PTR unsigned char 
  1012 ;;  i               2    0        int 
  1013 ;;  done            2    0        int 
  1014 ;;  c               1    0        unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  2   69[COMRAM] int 
  1017 ;; Registers used:
  1018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1024 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;Total ram usage:       16 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:   10
  1031 ;; This function calls:
  1032 ;;		_dtoa
  1033 ;;		_fputc
  1034 ;; This function is called by:
  1035 ;;		_vfprintf
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text3
  1040  00130E                     __ptext3:
  1041                           	callstack 0
  1042  00130E                     _vfpfcnvrt:
  1043                           	callstack 18
  1044  00130E                     
  1045                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1046  00130E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1047  001312  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1048  001316  CFDE FFF6          	movff	postinc2,tblptrl
  1049  00131A  CFDD FFF7          	movff	postdec2,tblptrh
  1050  00131E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1051  00131E  6AF8               	clrf	tblptru,c
  1052  001320                     	endif
  1053  001320                     	if	0	;tblptru may be non-zero
  1054  001320                     	endif
  1055  001320  0008               	tblrd		*
  1056  001322  50F5               	movf	tablat,w,c
  1057  001324  0A25               	xorlw	37
  1058  001326  A4D8               	btfss	status,2,c
  1059  001328  EF98  F009         	goto	u2491
  1060  00132C  EF9A  F009         	goto	u2490
  1061  001330                     u2491:
  1062  001330  EF49  F00A         	goto	l3850
  1063  001334                     u2490:
  1064  001334                     
  1065                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1066  001334  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1067  001338  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1068  00133C  2ADE               	incf	postinc2,f,c
  1069  00133E  0E00               	movlw	0
  1070  001340  22DD               	addwfc	postdec2,f,c
  1071  001342                     
  1072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1073  001342  0E00               	movlw	0
  1074  001344  0100               	movlb	0	; () banked
  1075  001346  6F9F               	movwf	(_width+1)& (0+255),b
  1076  001348  0E00               	movlw	0
  1077  00134A  6F9E               	movwf	_width& (0+255),b
  1078  00134C  C09E  F0A2         	movff	_width,_flags
  1079  001350  C09F  F0A3         	movff	_width+1,_flags+1
  1080  001354                     
  1081                           ; BSR set to: 0
  1082                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1083  001354  69A0               	setf	_prec& (0+255),b
  1084  001356  69A1               	setf	(_prec+1)& (0+255),b
  1085  001358                     
  1086                           ; BSR set to: 0
  1087                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1088  001358  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1089  00135C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1090  001360  CFDE FFF6          	movff	postinc2,tblptrl
  1091  001364  CFDD FFF7          	movff	postdec2,tblptrh
  1092  001368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1093  001368  6AF8               	clrf	tblptru,c
  1094  00136A                     	endif
  1095  00136A                     	if	0	;tblptru may be non-zero
  1096  00136A                     	endif
  1097  00136A  0008               	tblrd		*
  1098  00136C  50F5               	movf	tablat,w,c
  1099  00136E  0A64               	xorlw	100
  1100  001370  B4D8               	btfsc	status,2,c
  1101  001372  EFBD  F009         	goto	u2501
  1102  001376  EFBF  F009         	goto	u2500
  1103  00137A                     u2501:
  1104  00137A  EFD2  F009         	goto	l3828
  1105  00137E                     u2500:
  1106  00137E                     
  1107                           ; BSR set to: 0
  1108  00137E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1109  001382  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1110  001386  CFDE FFF6          	movff	postinc2,tblptrl
  1111  00138A  CFDD FFF7          	movff	postdec2,tblptrh
  1112  00138E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1113  00138E  6AF8               	clrf	tblptru,c
  1114  001390                     	endif
  1115  001390                     	if	0	;tblptru may be non-zero
  1116  001390                     	endif
  1117  001390  0008               	tblrd		*
  1118  001392  50F5               	movf	tablat,w,c
  1119  001394  0A69               	xorlw	105
  1120  001396  A4D8               	btfss	status,2,c
  1121  001398  EFD0  F009         	goto	u2511
  1122  00139C  EFD2  F009         	goto	u2510
  1123  0013A0                     u2511:
  1124  0013A0  EF12  F00A         	goto	l3834
  1125  0013A4                     u2510:
  1126  0013A4                     l3828:
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  1130  0013A4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1131  0013A8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1132  0013AC  2ADE               	incf	postinc2,f,c
  1133  0013AE  0E00               	movlw	0
  1134  0013B0  22DD               	addwfc	postdec2,f,c
  1135                           
  1136                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1137  0013B2  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1138  0013B6  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1139  0013BA  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  1140  0013BE  0E02               	movlw	2
  1141  0013C0  26DE               	addwf	postinc2,f,c
  1142  0013C2  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  1143  0013C6  0E00               	movlw	0
  1144  0013C8  22DD               	addwfc	postdec2,f,c
  1145  0013CA  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1146  0013CE  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1147  0013D2  CFDE F04E          	movff	postinc2,vfpfcnvrt@ll
  1148  0013D6  CFDD F04F          	movff	postdec2,vfpfcnvrt@ll+1
  1149  0013DA  0E00               	movlw	0
  1150  0013DC  BE4F               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1151  0013DE  0EFF               	movlw	-1
  1152  0013E0  6E50               	movwf	(vfpfcnvrt@ll+2)^0,c
  1153  0013E2  6E51               	movwf	(vfpfcnvrt@ll+3)^0,c
  1154  0013E4  6E52               	movwf	(vfpfcnvrt@ll+4)^0,c
  1155  0013E6  6E53               	movwf	(vfpfcnvrt@ll+5)^0,c
  1156  0013E8  6E54               	movwf	(vfpfcnvrt@ll+6)^0,c
  1157  0013EA  6E55               	movwf	(vfpfcnvrt@ll+7)^0,c
  1158  0013EC                     
  1159                           ; BSR set to: 0
  1160                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  1161  0013EC  C046  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  1162  0013F0  C047  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1163  0013F4  C04E  F024         	movff	vfpfcnvrt@ll,dtoa@d
  1164  0013F8  C04F  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1165  0013FC  C050  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1166  001400  C051  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1167  001404  C052  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1168  001408  C053  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1169  00140C  C054  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1170  001410  C055  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1171  001414  EC16  F008         	call	_dtoa	;wreg free
  1172  001418  C022  F046         	movff	?_dtoa,?_vfpfcnvrt
  1173  00141C  C023  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1174  001420  EF65  F00A         	goto	l1438
  1175  001424                     l3834:
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  1179  001424  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1180  001428  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1181  00142C  CFDE FFF6          	movff	postinc2,tblptrl
  1182  001430  CFDD FFF7          	movff	postdec2,tblptrh
  1183  001434                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1184  001434  6AF8               	clrf	tblptru,c
  1185  001436                     	endif
  1186  001436                     	if	0	;tblptru may be non-zero
  1187  001436                     	endif
  1188  001436  0008               	tblrd		*
  1189  001438  50F5               	movf	tablat,w,c
  1190  00143A  0A25               	xorlw	37
  1191  00143C  A4D8               	btfss	status,2,c
  1192  00143E  EF23  F00A         	goto	u2521
  1193  001442  EF25  F00A         	goto	u2520
  1194  001446                     u2521:
  1195  001446  EF3C  F00A         	goto	l3844
  1196  00144A                     u2520:
  1197  00144A                     
  1198                           ; BSR set to: 0
  1199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  1200  00144A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1201  00144E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1202  001452  2ADE               	incf	postinc2,f,c
  1203  001454  0E00               	movlw	0
  1204  001456  22DD               	addwfc	postdec2,f,c
  1205  001458                     
  1206                           ; BSR set to: 0
  1207                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  1208  001458  0E00               	movlw	0
  1209  00145A  6E08               	movwf	(fputc@c+1)^0,c
  1210  00145C  0E25               	movlw	37
  1211  00145E  6E07               	movwf	fputc@c^0,c
  1212  001460  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1213  001464  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1214  001468  ECB8  F00D         	call	_fputc	;wreg free
  1215  00146C                     l3840:
  1216                           
  1217                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  1218  00146C  0E00               	movlw	0
  1219  00146E  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  1220  001470  0E01               	movlw	1
  1221  001472  6E46               	movwf	?_vfpfcnvrt^0,c
  1222  001474  EF65  F00A         	goto	l1438
  1223  001478                     l3844:
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  1227  001478  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1228  00147C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1229  001480  2ADE               	incf	postinc2,f,c
  1230  001482  0E00               	movlw	0
  1231  001484  22DD               	addwfc	postdec2,f,c
  1232  001486                     
  1233                           ; BSR set to: 0
  1234                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  1235  001486  0E00               	movlw	0
  1236  001488  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  1237  00148A  0E00               	movlw	0
  1238  00148C  6E46               	movwf	?_vfpfcnvrt^0,c
  1239  00148E  EF65  F00A         	goto	l1438
  1240  001492                     l3850:
  1241                           
  1242                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  1243  001492  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1244  001496  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1245  00149A  CFDE FFF6          	movff	postinc2,tblptrl
  1246  00149E  CFDD FFF7          	movff	postdec2,tblptrh
  1247  0014A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1248  0014A2  6AF8               	clrf	tblptru,c
  1249  0014A4                     	endif
  1250  0014A4                     	if	0	;tblptru may be non-zero
  1251  0014A4                     	endif
  1252  0014A4  0008               	tblrd		*
  1253  0014A6  50F5               	movf	tablat,w,c
  1254  0014A8  6E07               	movwf	fputc@c^0,c
  1255  0014AA  6A08               	clrf	(fputc@c+1)^0,c
  1256  0014AC  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1257  0014B0  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1258  0014B4  ECB8  F00D         	call	_fputc	;wreg free
  1259  0014B8                     
  1260                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  1261  0014B8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1262  0014BC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1263  0014C0  2ADE               	incf	postinc2,f,c
  1264  0014C2  0E00               	movlw	0
  1265  0014C4  22DD               	addwfc	postdec2,f,c
  1266  0014C6  EF36  F00A         	goto	l3840
  1267  0014CA                     l1438:
  1268  0014CA  0012               	return		;funcret
  1269  0014CC                     __end_of_vfpfcnvrt:
  1270                           	callstack 0
  1271                           
  1272 ;; *************** function _dtoa *****************
  1273 ;; Defined at:
  1274 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  1277 ;;		 -> NULL(0), 
  1278 ;;  d               8   35[COMRAM] long long 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  n               8   59[COMRAM] long long 
  1281 ;;  i               2   67[COMRAM] int 
  1282 ;;  s               2   57[COMRAM] int 
  1283 ;;  w               2   55[COMRAM] int 
  1284 ;;  p               2   53[COMRAM] int 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  2   33[COMRAM] int 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1294 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;Total ram usage:       36 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    9
  1301 ;; This function calls:
  1302 ;;		___aodiv
  1303 ;;		___aomod
  1304 ;;		_abs
  1305 ;;		_pad
  1306 ;; This function is called by:
  1307 ;;		_vfpfcnvrt
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text4
  1312  00102C                     __ptext4:
  1313                           	callstack 0
  1314  00102C                     _dtoa:
  1315                           	callstack 18
  1316  00102C                     
  1317                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  1318  00102C  C024  F03C         	movff	dtoa@d,dtoa@n
  1319  001030  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  1320  001034  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  1321  001038  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  1322  00103C  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  1323  001040  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  1324  001044  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  1325  001048  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  1326  00104C                     
  1327                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  1328  00104C  BE43               	btfsc	(dtoa@n+7)^0,7,c
  1329  00104E  EF2B  F008         	goto	u2341
  1330  001052  EF2E  F008         	goto	u2340
  1331  001056                     u2341:
  1332  001056  0E01               	movlw	1
  1333  001058  EF2F  F008         	goto	u2350
  1334  00105C                     u2340:
  1335  00105C  0E00               	movlw	0
  1336  00105E                     u2350:
  1337  00105E  6E3A               	movwf	dtoa@s^0,c
  1338  001060  6A3B               	clrf	(dtoa@s+1)^0,c
  1339                           
  1340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  1341  001062  503A               	movf	dtoa@s^0,w,c
  1342  001064  103B               	iorwf	(dtoa@s+1)^0,w,c
  1343  001066  B4D8               	btfsc	status,2,c
  1344  001068  EF38  F008         	goto	u2361
  1345  00106C  EF3A  F008         	goto	u2360
  1346  001070                     u2361:
  1347  001070  EF4A  F008         	goto	l3760
  1348  001074                     u2360:
  1349  001074                     
  1350                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  1351  001074  1E43               	comf	(dtoa@n+7)^0,f,c
  1352  001076  1E42               	comf	(dtoa@n+6)^0,f,c
  1353  001078  1E41               	comf	(dtoa@n+5)^0,f,c
  1354  00107A  1E40               	comf	(dtoa@n+4)^0,f,c
  1355  00107C  1E3F               	comf	(dtoa@n+3)^0,f,c
  1356  00107E  1E3E               	comf	(dtoa@n+2)^0,f,c
  1357  001080  1E3D               	comf	(dtoa@n+1)^0,f,c
  1358  001082  6C3C               	negf	dtoa@n^0,c
  1359  001084  0E00               	movlw	0
  1360  001086  223D               	addwfc	(dtoa@n+1)^0,f,c
  1361  001088  223E               	addwfc	(dtoa@n+2)^0,f,c
  1362  00108A  223F               	addwfc	(dtoa@n+3)^0,f,c
  1363  00108C  2240               	addwfc	(dtoa@n+4)^0,f,c
  1364  00108E  2241               	addwfc	(dtoa@n+5)^0,f,c
  1365  001090  2242               	addwfc	(dtoa@n+6)^0,f,c
  1366  001092  2243               	addwfc	(dtoa@n+7)^0,f,c
  1367  001094                     l3760:
  1368                           
  1369                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  1370  001094  0100               	movlb	0	; () banked
  1371  001096  BFA1               	btfsc	(_prec+1)& (0+255),7,b
  1372  001098  EF50  F008         	goto	u2371
  1373  00109C  EF52  F008         	goto	u2370
  1374  0010A0                     u2371:
  1375  0010A0  EF53  F008         	goto	l3764
  1376  0010A4                     u2370:
  1377  0010A4                     
  1378                           ; BSR set to: 0
  1379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  1380  0010A4  93A2               	bcf	_flags& (0+255),1,b
  1381  0010A6                     l3764:
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  1385  0010A6  BFA1               	btfsc	(_prec+1)& (0+255),7,b
  1386  0010A8  EF60  F008         	goto	u2380
  1387  0010AC  51A1               	movf	(_prec+1)& (0+255),w,b
  1388  0010AE  E106               	bnz	u2381
  1389  0010B0  05A0               	decf	_prec& (0+255),w,b
  1390  0010B2  B0D8               	btfsc	status,0,c
  1391  0010B4  EF5E  F008         	goto	u2381
  1392  0010B8  EF60  F008         	goto	u2380
  1393  0010BC                     u2381:
  1394  0010BC  EF66  F008         	goto	l1411
  1395  0010C0                     u2380:
  1396  0010C0                     
  1397                           ; BSR set to: 0
  1398  0010C0  0E00               	movlw	0
  1399  0010C2  6E37               	movwf	(dtoa@p+1)^0,c
  1400  0010C4  0E01               	movlw	1
  1401  0010C6  6E36               	movwf	dtoa@p^0,c
  1402  0010C8  EF6A  F008         	goto	l1413
  1403  0010CC                     l1411:
  1404                           
  1405                           ; BSR set to: 0
  1406  0010CC  C0A0  F036         	movff	_prec,dtoa@p
  1407  0010D0  C0A1  F037         	movff	_prec+1,dtoa@p+1
  1408  0010D4                     l1413:
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  1412  0010D4  C09E  F038         	movff	_width,dtoa@w
  1413  0010D8  C09F  F039         	movff	_width+1,dtoa@w+1
  1414  0010DC                     
  1415                           ; BSR set to: 0
  1416                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  1417  0010DC  503A               	movf	dtoa@s^0,w,c
  1418  0010DE  103B               	iorwf	(dtoa@s+1)^0,w,c
  1419  0010E0  A4D8               	btfss	status,2,c
  1420  0010E2  EF75  F008         	goto	u2391
  1421  0010E6  EF77  F008         	goto	u2390
  1422  0010EA                     u2391:
  1423  0010EA  EF7E  F008         	goto	l3772
  1424  0010EE                     u2390:
  1425  0010EE                     
  1426                           ; BSR set to: 0
  1427  0010EE  A5A2               	btfss	_flags& (0+255),2,b
  1428  0010F0  EF7C  F008         	goto	u2401
  1429  0010F4  EF7E  F008         	goto	u2400
  1430  0010F8                     u2401:
  1431  0010F8  EF81  F008         	goto	l3774
  1432  0010FC                     u2400:
  1433  0010FC                     l3772:
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  1437  0010FC  0638               	decf	dtoa@w^0,f,c
  1438  0010FE  A0D8               	btfss	status,0,c
  1439  001100  0639               	decf	(dtoa@w+1)^0,f,c
  1440  001102                     l3774:
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  1444  001102  0E00               	movlw	0
  1445  001104  6E45               	movwf	(dtoa@i+1)^0,c
  1446  001106  0E1F               	movlw	31
  1447  001108  6E44               	movwf	dtoa@i^0,c
  1448  00110A                     
  1449                           ; BSR set to: 0
  1450                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  1451  00110A  0E00               	movlw	0
  1452  00110C  6FC5               	movwf	(_dbuf+31)& (0+255),b
  1453                           
  1454                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1455  00110E  EF05  F009         	goto	l3788
  1456  001112                     l3778:
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  1459  001112  0644               	decf	dtoa@i^0,f,c
  1460  001114  A0D8               	btfss	status,0,c
  1461  001116  0645               	decf	(dtoa@i+1)^0,f,c
  1462  001118                     
  1463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  1464  001118  0EA6               	movlw	low _dbuf
  1465  00111A  2444               	addwf	dtoa@i^0,w,c
  1466  00111C  6ED9               	movwf	fsr2l,c
  1467  00111E  0E00               	movlw	high _dbuf
  1468  001120  2045               	addwfc	(dtoa@i+1)^0,w,c
  1469  001122  6EDA               	movwf	fsr2h,c
  1470  001124  C03C  F005         	movff	dtoa@n,___aomod@dividend
  1471  001128  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1472  00112C  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1473  001130  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1474  001134  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1475  001138  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1476  00113C  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1477  001140  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1478  001144  0E0A               	movlw	10
  1479  001146  6E0D               	movwf	___aomod@divisor^0,c
  1480  001148  0E00               	movlw	0
  1481  00114A  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1482  00114C  0E00               	movlw	0
  1483  00114E  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1484  001150  0E00               	movlw	0
  1485  001152  6E10               	movwf	(___aomod@divisor+3)^0,c
  1486  001154  0E00               	movlw	0
  1487  001156  6E11               	movwf	(___aomod@divisor+4)^0,c
  1488  001158  0E00               	movlw	0
  1489  00115A  6E12               	movwf	(___aomod@divisor+5)^0,c
  1490  00115C  0E00               	movlw	0
  1491  00115E  6E13               	movwf	(___aomod@divisor+6)^0,c
  1492  001160  0E00               	movlw	0
  1493  001162  6E14               	movwf	(___aomod@divisor+7)^0,c
  1494  001164  EC2A  F00B         	call	___aomod	;wreg free
  1495  001168  C005  F02C         	movff	?___aomod,??_dtoa
  1496  00116C  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  1497  001170  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  1498  001174  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  1499  001178  C009  F030         	movff	?___aomod+4,??_dtoa+4
  1500  00117C  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  1501  001180  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  1502  001184  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  1503  001188  C02C  F017         	movff	??_dtoa,abs@a
  1504  00118C  C02E  F018         	movff	??_dtoa+2,abs@a+1
  1505  001190  ECA8  F010         	call	_abs	;wreg free
  1506  001194  5017               	movf	?_abs^0,w,c
  1507  001196  0F30               	addlw	48
  1508  001198  6EDF               	movwf	indf2,c
  1509  00119A                     
  1510                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  1511  00119A  0636               	decf	dtoa@p^0,f,c
  1512  00119C  A0D8               	btfss	status,0,c
  1513  00119E  0637               	decf	(dtoa@p+1)^0,f,c
  1514  0011A0                     
  1515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  1516  0011A0  0638               	decf	dtoa@w^0,f,c
  1517  0011A2  A0D8               	btfss	status,0,c
  1518  0011A4  0639               	decf	(dtoa@w+1)^0,f,c
  1519  0011A6                     
  1520                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  1521  0011A6  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  1522  0011AA  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1523  0011AE  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1524  0011B2  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1525  0011B6  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1526  0011BA  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1527  0011BE  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1528  0011C2  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1529  0011C6  0E0A               	movlw	10
  1530  0011C8  6E0D               	movwf	___aodiv@divisor^0,c
  1531  0011CA  0E00               	movlw	0
  1532  0011CC  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1533  0011CE  0E00               	movlw	0
  1534  0011D0  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1535  0011D2  0E00               	movlw	0
  1536  0011D4  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1537  0011D6  0E00               	movlw	0
  1538  0011D8  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1539  0011DA  0E00               	movlw	0
  1540  0011DC  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1541  0011DE  0E00               	movlw	0
  1542  0011E0  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1543  0011E2  0E00               	movlw	0
  1544  0011E4  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1545  0011E6  EC66  F00A         	call	___aodiv	;wreg free
  1546  0011EA  C005  F03C         	movff	?___aodiv,dtoa@n
  1547  0011EE  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  1548  0011F2  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  1549  0011F6  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  1550  0011FA  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  1551  0011FE  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  1552  001202  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  1553  001206  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  1554  00120A                     l3788:
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1557  00120A  BE45               	btfsc	(dtoa@i+1)^0,7,c
  1558  00120C  EF10  F009         	goto	u2411
  1559  001210  5045               	movf	(dtoa@i+1)^0,w,c
  1560  001212  E108               	bnz	u2410
  1561  001214  0444               	decf	dtoa@i^0,w,c
  1562  001216  A0D8               	btfss	status,0,c
  1563  001218  EF10  F009         	goto	u2411
  1564  00121C  EF12  F009         	goto	u2410
  1565  001220                     u2411:
  1566  001220  EF43  F009         	goto	l3798
  1567  001224                     u2410:
  1568  001224  503C               	movf	dtoa@n^0,w,c
  1569  001226  103D               	iorwf	(dtoa@n+1)^0,w,c
  1570  001228  103E               	iorwf	(dtoa@n+2)^0,w,c
  1571  00122A  103F               	iorwf	(dtoa@n+3)^0,w,c
  1572  00122C  1040               	iorwf	(dtoa@n+4)^0,w,c
  1573  00122E  1041               	iorwf	(dtoa@n+5)^0,w,c
  1574  001230  1042               	iorwf	(dtoa@n+6)^0,w,c
  1575  001232  1043               	iorwf	(dtoa@n+7)^0,w,c
  1576  001234  A4D8               	btfss	status,2,c
  1577  001236  EF1F  F009         	goto	u2421
  1578  00123A  EF21  F009         	goto	u2420
  1579  00123E                     u2421:
  1580  00123E  EF89  F008         	goto	l3778
  1581  001242                     u2420:
  1582  001242  BE37               	btfsc	(dtoa@p+1)^0,7,c
  1583  001244  EF2E  F009         	goto	u2430
  1584  001248  5037               	movf	(dtoa@p+1)^0,w,c
  1585  00124A  E106               	bnz	u2431
  1586  00124C  0436               	decf	dtoa@p^0,w,c
  1587  00124E  B0D8               	btfsc	status,0,c
  1588  001250  EF2C  F009         	goto	u2431
  1589  001254  EF2E  F009         	goto	u2430
  1590  001258                     u2431:
  1591  001258  EF89  F008         	goto	l3778
  1592  00125C                     u2430:
  1593  00125C  BE39               	btfsc	(dtoa@w+1)^0,7,c
  1594  00125E  EF39  F009         	goto	u2441
  1595  001262  5039               	movf	(dtoa@w+1)^0,w,c
  1596  001264  E108               	bnz	u2440
  1597  001266  0438               	decf	dtoa@w^0,w,c
  1598  001268  A0D8               	btfss	status,0,c
  1599  00126A  EF39  F009         	goto	u2441
  1600  00126E  EF3B  F009         	goto	u2440
  1601  001272                     u2441:
  1602  001272  EF43  F009         	goto	l3798
  1603  001276                     u2440:
  1604  001276  0100               	movlb	0	; () banked
  1605  001278  B3A2               	btfsc	_flags& (0+255),1,b
  1606  00127A  EF41  F009         	goto	u2451
  1607  00127E  EF43  F009         	goto	u2450
  1608  001282                     u2451:
  1609  001282  EF89  F008         	goto	l3778
  1610  001286                     u2450:
  1611  001286                     l3798:
  1612                           
  1613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  1614  001286  503A               	movf	dtoa@s^0,w,c
  1615  001288  103B               	iorwf	(dtoa@s+1)^0,w,c
  1616  00128A  A4D8               	btfss	status,2,c
  1617  00128C  EF4A  F009         	goto	u2461
  1618  001290  EF4C  F009         	goto	u2460
  1619  001294                     u2461:
  1620  001294  EF54  F009         	goto	l3802
  1621  001298                     u2460:
  1622  001298  0100               	movlb	0	; () banked
  1623  00129A  A5A2               	btfss	_flags& (0+255),2,b
  1624  00129C  EF52  F009         	goto	u2471
  1625  0012A0  EF54  F009         	goto	u2470
  1626  0012A4                     u2471:
  1627  0012A4  EF72  F009         	goto	l3812
  1628  0012A8                     u2470:
  1629  0012A8                     l3802:
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  1632  0012A8  0644               	decf	dtoa@i^0,f,c
  1633  0012AA  A0D8               	btfss	status,0,c
  1634  0012AC  0645               	decf	(dtoa@i+1)^0,f,c
  1635  0012AE                     
  1636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  1637  0012AE  503A               	movf	dtoa@s^0,w,c
  1638  0012B0  103B               	iorwf	(dtoa@s+1)^0,w,c
  1639  0012B2  A4D8               	btfss	status,2,c
  1640  0012B4  EF5E  F009         	goto	u2481
  1641  0012B8  EF60  F009         	goto	u2480
  1642  0012BC                     u2481:
  1643  0012BC  EF66  F009         	goto	l3808
  1644  0012C0                     u2480:
  1645  0012C0  0E00               	movlw	0
  1646  0012C2  6E35               	movwf	(_dtoa$2024+1)^0,c
  1647  0012C4  0E2B               	movlw	43
  1648  0012C6  6E34               	movwf	_dtoa$2024^0,c
  1649  0012C8  EF6A  F009         	goto	l3810
  1650  0012CC                     l3808:
  1651  0012CC  0E00               	movlw	0
  1652  0012CE  6E35               	movwf	(_dtoa$2024+1)^0,c
  1653  0012D0  0E2D               	movlw	45
  1654  0012D2  6E34               	movwf	_dtoa$2024^0,c
  1655  0012D4                     l3810:
  1656  0012D4  0EA6               	movlw	low _dbuf
  1657  0012D6  2444               	addwf	dtoa@i^0,w,c
  1658  0012D8  6ED9               	movwf	fsr2l,c
  1659  0012DA  0E00               	movlw	high _dbuf
  1660  0012DC  2045               	addwfc	(dtoa@i+1)^0,w,c
  1661  0012DE  6EDA               	movwf	fsr2h,c
  1662  0012E0  C034  FFDF         	movff	_dtoa$2024,indf2
  1663  0012E4                     l3812:
  1664                           
  1665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  1666  0012E4  C022  F017         	movff	dtoa@fp,pad@fp
  1667  0012E8  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  1668  0012EC  0EA6               	movlw	low _dbuf
  1669  0012EE  2444               	addwf	dtoa@i^0,w,c
  1670  0012F0  6E19               	movwf	pad@buf^0,c
  1671  0012F2  0E00               	movlw	high _dbuf
  1672  0012F4  2045               	addwfc	(dtoa@i+1)^0,w,c
  1673  0012F6  6E1A               	movwf	(pad@buf+1)^0,c
  1674  0012F8  C038  F01B         	movff	dtoa@w,pad@p
  1675  0012FC  C039  F01C         	movff	dtoa@w+1,pad@p+1
  1676  001300  EC42  F00C         	call	_pad	;wreg free
  1677  001304  C017  F022         	movff	?_pad,?_dtoa
  1678  001308  C018  F023         	movff	?_pad+1,?_dtoa+1
  1679  00130C  0012               	return		;funcret
  1680  00130E                     __end_of_dtoa:
  1681                           	callstack 0
  1682                           
  1683 ;; *************** function _pad *****************
  1684 ;; Defined at:
  1685 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  1688 ;;		 -> NULL(0), 
  1689 ;;  buf             2   24[COMRAM] PTR unsigned char 
  1690 ;;		 -> dbuf(32), 
  1691 ;;  p               2   26[COMRAM] int 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  w               2   31[COMRAM] int 
  1694 ;;  i               2   29[COMRAM] int 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  2   22[COMRAM] int 
  1697 ;; Registers used:
  1698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1704 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;Total ram usage:       11 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    8
  1711 ;; This function calls:
  1712 ;;		_fputc
  1713 ;;		_fputs
  1714 ;;		_strlen
  1715 ;; This function is called by:
  1716 ;;		_dtoa
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text5
  1721  001884                     __ptext5:
  1722                           	callstack 0
  1723  001884                     _pad:
  1724                           	callstack 18
  1725  001884                     
  1726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1727  001884  0100               	movlb	0	; () banked
  1728  001886  A1A2               	btfss	_flags& (0+255),0,b
  1729  001888  EF48  F00C         	goto	u2291
  1730  00188C  EF4A  F00C         	goto	u2290
  1731  001890                     u2291:
  1732  001890  EF54  F00C         	goto	l3732
  1733  001894                     u2290:
  1734  001894                     
  1735                           ; BSR set to: 0
  1736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1737  001894  C019  F010         	movff	pad@buf,fputs@s
  1738  001898  C01A  F011         	movff	pad@buf+1,fputs@s+1
  1739  00189C  C017  F012         	movff	pad@fp,fputs@fp
  1740  0018A0  C018  F013         	movff	pad@fp+1,fputs@fp+1
  1741  0018A4  EC43  F010         	call	_fputs	;wreg free
  1742  0018A8                     l3732:
  1743                           
  1744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1745  0018A8  BE1C               	btfsc	(pad@p+1)^0,7,c
  1746  0018AA  EF59  F00C         	goto	u2301
  1747  0018AE  EF5B  F00C         	goto	u2300
  1748  0018B2                     u2301:
  1749  0018B2  EF61  F00C         	goto	l3736
  1750  0018B6                     u2300:
  1751  0018B6  C01B  F020         	movff	pad@p,pad@w
  1752  0018BA  C01C  F021         	movff	pad@p+1,pad@w+1
  1753  0018BE  EF65  F00C         	goto	l1400
  1754  0018C2                     l3736:
  1755  0018C2  0E00               	movlw	0
  1756  0018C4  6E21               	movwf	(pad@w+1)^0,c
  1757  0018C6  0E00               	movlw	0
  1758  0018C8  6E20               	movwf	pad@w^0,c
  1759  0018CA                     l1400:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1762  0018CA  0E00               	movlw	0
  1763  0018CC  6E1F               	movwf	(pad@i+1)^0,c
  1764  0018CE  0E00               	movlw	0
  1765  0018D0  6E1E               	movwf	pad@i^0,c
  1766                           
  1767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1768  0018D2  EF77  F00C         	goto	l3742
  1769  0018D6                     l3738:
  1770                           
  1771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1772  0018D6  0E00               	movlw	0
  1773  0018D8  6E08               	movwf	(fputc@c+1)^0,c
  1774  0018DA  0E20               	movlw	32
  1775  0018DC  6E07               	movwf	fputc@c^0,c
  1776  0018DE  C017  F009         	movff	pad@fp,fputc@fp
  1777  0018E2  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  1778  0018E6  ECB8  F00D         	call	_fputc	;wreg free
  1779  0018EA                     
  1780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1781  0018EA  4A1E               	infsnz	pad@i^0,f,c
  1782  0018EC  2A1F               	incf	(pad@i+1)^0,f,c
  1783  0018EE                     l3742:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1786  0018EE  5020               	movf	pad@w^0,w,c
  1787  0018F0  5C1E               	subwf	pad@i^0,w,c
  1788  0018F2  501F               	movf	(pad@i+1)^0,w,c
  1789  0018F4  0A80               	xorlw	128
  1790  0018F6  6E1D               	movwf	??_pad^0,c
  1791  0018F8  5021               	movf	(pad@w+1)^0,w,c
  1792  0018FA  0A80               	xorlw	128
  1793  0018FC  581D               	subwfb	??_pad^0,w,c
  1794  0018FE  A0D8               	btfss	status,0,c
  1795  001900  EF84  F00C         	goto	u2311
  1796  001904  EF86  F00C         	goto	u2310
  1797  001908                     u2311:
  1798  001908  EF6B  F00C         	goto	l3738
  1799  00190C                     u2310:
  1800  00190C                     
  1801                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1802  00190C  0100               	movlb	0	; () banked
  1803  00190E  B1A2               	btfsc	_flags& (0+255),0,b
  1804  001910  EF8C  F00C         	goto	u2321
  1805  001914  EF8E  F00C         	goto	u2320
  1806  001918                     u2321:
  1807  001918  EF98  F00C         	goto	l3746
  1808  00191C                     u2320:
  1809  00191C                     
  1810                           ; BSR set to: 0
  1811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1812  00191C  C019  F010         	movff	pad@buf,fputs@s
  1813  001920  C01A  F011         	movff	pad@buf+1,fputs@s+1
  1814  001924  C017  F012         	movff	pad@fp,fputs@fp
  1815  001928  C018  F013         	movff	pad@fp+1,fputs@fp+1
  1816  00192C  EC43  F010         	call	_fputs	;wreg free
  1817  001930                     l3746:
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  1820  001930  C019  F005         	movff	pad@buf,strlen@s
  1821  001934  C01A  F006         	movff	pad@buf+1,strlen@s+1
  1822  001938  ECE8  F010         	call	_strlen	;wreg free
  1823  00193C  5020               	movf	pad@w^0,w,c
  1824  00193E  2405               	addwf	?_strlen^0,w,c
  1825  001940  6E17               	movwf	?_pad^0,c
  1826  001942  5021               	movf	(pad@w+1)^0,w,c
  1827  001944  2006               	addwfc	(?_strlen+1)^0,w,c
  1828  001946  6E18               	movwf	(?_pad+1)^0,c
  1829  001948  0012               	return		;funcret
  1830  00194A                     __end_of_pad:
  1831                           	callstack 0
  1832                           
  1833 ;; *************** function _strlen *****************
  1834 ;; Defined at:
  1835 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  s               2    4[COMRAM] PTR const unsigned char 
  1838 ;;		 -> dbuf(32), 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  a               2    6[COMRAM] PTR const unsigned char 
  1841 ;;		 -> dbuf(32), 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  2    4[COMRAM] unsigned int 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;Total ram usage:        4 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    4
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_pad
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text6
  1866  0021D0                     __ptext6:
  1867                           	callstack 0
  1868  0021D0                     _strlen:
  1869                           	callstack 21
  1870  0021D0  C005  F007         	movff	strlen@s,strlen@a
  1871  0021D4  C006  F008         	movff	strlen@s+1,strlen@a+1
  1872  0021D8  EFF0  F010         	goto	l3642
  1873  0021DC                     l3640:
  1874  0021DC  4A05               	infsnz	strlen@s^0,f,c
  1875  0021DE  2A06               	incf	(strlen@s+1)^0,f,c
  1876  0021E0                     l3642:
  1877  0021E0  C005  FFD9         	movff	strlen@s,fsr2l
  1878  0021E4  C006  FFDA         	movff	strlen@s+1,fsr2h
  1879  0021E8  50DF               	movf	indf2,w,c
  1880  0021EA  A4D8               	btfss	status,2,c
  1881  0021EC  EFFA  F010         	goto	u2151
  1882  0021F0  EFFC  F010         	goto	u2150
  1883  0021F4                     u2151:
  1884  0021F4  EFEE  F010         	goto	l3640
  1885  0021F8                     u2150:
  1886  0021F8  5007               	movf	strlen@a^0,w,c
  1887  0021FA  5C05               	subwf	strlen@s^0,w,c
  1888  0021FC  6E05               	movwf	?_strlen^0,c
  1889  0021FE  5008               	movf	(strlen@a+1)^0,w,c
  1890  002200  5806               	subwfb	(strlen@s+1)^0,w,c
  1891  002202  6E06               	movwf	(?_strlen+1)^0,c
  1892  002204  0012               	return		;funcret
  1893  002206                     __end_of_strlen:
  1894                           	callstack 0
  1895                           
  1896 ;; *************** function _fputs *****************
  1897 ;; Defined at:
  1898 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  s               2   15[COMRAM] PTR const unsigned char 
  1901 ;;		 -> dbuf(32), 
  1902 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1903 ;;		 -> NULL(0), 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  i               2   20[COMRAM] int 
  1906 ;;  c               1   19[COMRAM] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  2   15[COMRAM] int 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1916 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;Total ram usage:        7 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:    7
  1923 ;; This function calls:
  1924 ;;		_fputc
  1925 ;; This function is called by:
  1926 ;;		_pad
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text7
  1931  002086                     __ptext7:
  1932                           	callstack 0
  1933  002086                     _fputs:
  1934                           	callstack 18
  1935  002086  0E00               	movlw	0
  1936  002088  6E16               	movwf	(fputs@i+1)^0,c
  1937  00208A  0E00               	movlw	0
  1938  00208C  6E15               	movwf	fputs@i^0,c
  1939  00208E  EF54  F010         	goto	l3636
  1940  002092                     l3632:
  1941  002092  C014  F007         	movff	fputs@c,fputc@c
  1942  002096  6A08               	clrf	(fputc@c+1)^0,c
  1943  002098  C012  F009         	movff	fputs@fp,fputc@fp
  1944  00209C  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  1945  0020A0  ECB8  F00D         	call	_fputc	;wreg free
  1946  0020A4  4A15               	infsnz	fputs@i^0,f,c
  1947  0020A6  2A16               	incf	(fputs@i+1)^0,f,c
  1948  0020A8                     l3636:
  1949  0020A8  5015               	movf	fputs@i^0,w,c
  1950  0020AA  2410               	addwf	fputs@s^0,w,c
  1951  0020AC  6ED9               	movwf	fsr2l,c
  1952  0020AE  5016               	movf	(fputs@i+1)^0,w,c
  1953  0020B0  2011               	addwfc	(fputs@s+1)^0,w,c
  1954  0020B2  6EDA               	movwf	fsr2h,c
  1955  0020B4  50DF               	movf	indf2,w,c
  1956  0020B6  6E14               	movwf	fputs@c^0,c
  1957  0020B8  5014               	movf	fputs@c^0,w,c
  1958  0020BA  A4D8               	btfss	status,2,c
  1959  0020BC  EF62  F010         	goto	u2141
  1960  0020C0  EF64  F010         	goto	u2140
  1961  0020C4                     u2141:
  1962  0020C4  EF49  F010         	goto	l3632
  1963  0020C8                     u2140:
  1964  0020C8  0012               	return		;funcret
  1965  0020CA                     __end_of_fputs:
  1966                           	callstack 0
  1967                           
  1968 ;; *************** function _fputc *****************
  1969 ;; Defined at:
  1970 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  c               2    6[COMRAM] int 
  1973 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  1974 ;;		 -> NULL(0), 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  2    6[COMRAM] int 
  1979 ;; Registers used:
  1980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1986 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;Total ram usage:        9 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    6
  1993 ;; This function calls:
  1994 ;;		_putch
  1995 ;; This function is called by:
  1996 ;;		_pad
  1997 ;;		_vfpfcnvrt
  1998 ;;		_fputs
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text8
  2003  001B70                     __ptext8:
  2004                           	callstack 0
  2005  001B70                     _fputc:
  2006                           	callstack 21
  2007  001B70  5009               	movf	fputc@fp^0,w,c
  2008  001B72  100A               	iorwf	(fputc@fp+1)^0,w,c
  2009  001B74  B4D8               	btfsc	status,2,c
  2010  001B76  EFBF  F00D         	goto	u2101
  2011  001B7A  EFC1  F00D         	goto	u2100
  2012  001B7E                     u2101:
  2013  001B7E  EFCA  F00D         	goto	l3620
  2014  001B82                     u2100:
  2015  001B82  5009               	movf	fputc@fp^0,w,c
  2016  001B84  100A               	iorwf	(fputc@fp+1)^0,w,c
  2017  001B86  A4D8               	btfss	status,2,c
  2018  001B88  EFC8  F00D         	goto	u2111
  2019  001B8C  EFCA  F00D         	goto	u2110
  2020  001B90                     u2111:
  2021  001B90  EFCF  F00D         	goto	l3622
  2022  001B94                     u2110:
  2023  001B94                     l3620:
  2024  001B94  5007               	movf	fputc@c^0,w,c
  2025  001B96  EC55  F012         	call	_putch
  2026  001B9A  EF02  F00E         	goto	l1464
  2027  001B9E                     l3622:
  2028  001B9E  EE20 F004          	lfsr	2,4
  2029  001BA2  5009               	movf	fputc@fp^0,w,c
  2030  001BA4  26D9               	addwf	fsr2l,f,c
  2031  001BA6  500A               	movf	(fputc@fp+1)^0,w,c
  2032  001BA8  22DA               	addwfc	fsr2h,f,c
  2033  001BAA  50DE               	movf	postinc2,w,c
  2034  001BAC  10DE               	iorwf	postinc2,w,c
  2035  001BAE  B4D8               	btfsc	status,2,c
  2036  001BB0  EFDC  F00D         	goto	u2121
  2037  001BB4  EFDE  F00D         	goto	u2120
  2038  001BB8                     u2121:
  2039  001BB8  EFF9  F00D         	goto	l3626
  2040  001BBC                     u2120:
  2041  001BBC  EE20 F004          	lfsr	2,4
  2042  001BC0  5009               	movf	fputc@fp^0,w,c
  2043  001BC2  26D9               	addwf	fsr2l,f,c
  2044  001BC4  500A               	movf	(fputc@fp+1)^0,w,c
  2045  001BC6  22DA               	addwfc	fsr2h,f,c
  2046  001BC8  EE10 F002          	lfsr	1,2
  2047  001BCC  5009               	movf	fputc@fp^0,w,c
  2048  001BCE  26E1               	addwf	fsr1l,f,c
  2049  001BD0  500A               	movf	(fputc@fp+1)^0,w,c
  2050  001BD2  22E2               	addwfc	fsr1h,f,c
  2051  001BD4  50DE               	movf	postinc2,w,c
  2052  001BD6  5CE6               	subwf	postinc1,w,c
  2053  001BD8  50E6               	movf	postinc1,w,c
  2054  001BDA  0A80               	xorlw	128
  2055  001BDC  6E0F               	movwf	(??_fputc+4)^0,c
  2056  001BDE  50DE               	movf	postinc2,w,c
  2057  001BE0  0A80               	xorlw	128
  2058  001BE2  580F               	subwfb	(??_fputc+4)^0,w,c
  2059  001BE4  B0D8               	btfsc	status,0,c
  2060  001BE6  EFF7  F00D         	goto	u2131
  2061  001BEA  EFF9  F00D         	goto	u2130
  2062  001BEE                     u2131:
  2063  001BEE  EF02  F00E         	goto	l1464
  2064  001BF2                     u2130:
  2065  001BF2                     l3626:
  2066  001BF2  EE20 F002          	lfsr	2,2
  2067  001BF6  5009               	movf	fputc@fp^0,w,c
  2068  001BF8  26D9               	addwf	fsr2l,f,c
  2069  001BFA  500A               	movf	(fputc@fp+1)^0,w,c
  2070  001BFC  22DA               	addwfc	fsr2h,f,c
  2071  001BFE  2ADE               	incf	postinc2,f,c
  2072  001C00  0E00               	movlw	0
  2073  001C02  22DD               	addwfc	postdec2,f,c
  2074  001C04                     l1464:
  2075  001C04  0012               	return		;funcret
  2076  001C06                     __end_of_fputc:
  2077                           	callstack 0
  2078                           
  2079 ;; *************** function _putch *****************
  2080 ;; Defined at:
  2081 ;;		line 201 in file "mcc_generated_files/eusart.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  txData          1    wreg     unsigned char 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  txData          1    5[COMRAM] unsigned char 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;Total ram usage:        1 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    5
  2102 ;; This function calls:
  2103 ;;		_EUSART_Write
  2104 ;; This function is called by:
  2105 ;;		_fputc
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text9
  2110  0024AA                     __ptext9:
  2111                           	callstack 0
  2112  0024AA                     _putch:
  2113                           	callstack 21
  2114                           
  2115                           ;incstack = 0
  2116                           ;putch@txData stored from wreg
  2117  0024AA  6E06               	movwf	putch@txData^0,c
  2118  0024AC                     
  2119                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  2120  0024AC  5006               	movf	putch@txData^0,w,c
  2121  0024AE  EC17  F010         	call	_EUSART_Write
  2122  0024B2  0012               	return		;funcret
  2123  0024B4                     __end_of_putch:
  2124                           	callstack 0
  2125                           
  2126 ;; *************** function _EUSART_Write *****************
  2127 ;; Defined at:
  2128 ;;		line 173 in file "mcc_generated_files/eusart.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  txData          1    wreg     unsigned char 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  txData          1    4[COMRAM] unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      void 
  2135 ;; Registers used:
  2136 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;Total ram usage:        1 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    4
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_putch
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text10
  2157  00202E                     __ptext10:
  2158                           	callstack 0
  2159  00202E                     _EUSART_Write:
  2160                           	callstack 21
  2161                           
  2162                           ;incstack = 0
  2163                           ;EUSART_Write@txData stored from wreg
  2164  00202E  6E05               	movwf	EUSART_Write@txData^0,c
  2165  002030                     l3598:
  2166                           
  2167                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  2168  002030  0100               	movlb	0	; () banked
  2169  002032  51E7               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  2170  002034  B4D8               	btfsc	status,2,c
  2171  002036  EF1F  F010         	goto	u2071
  2172  00203A  EF21  F010         	goto	u2070
  2173  00203E                     u2071:
  2174  00203E  EF18  F010         	goto	l3598
  2175  002042                     u2070:
  2176  002042                     
  2177                           ; BSR set to: 0
  2178                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  2179  002042  B89D               	btfsc	157,4,c	;volatile
  2180  002044  EF26  F010         	goto	u2081
  2181  002048  EF28  F010         	goto	u2080
  2182  00204C                     u2081:
  2183  00204C  EF2C  F010         	goto	l595
  2184  002050                     u2080:
  2185  002050                     
  2186                           ; BSR set to: 0
  2187                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  2188  002050  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  2189                           
  2190                           ;mcc_generated_files/eusart.c: 182:     }
  2191  002054  EF41  F010         	goto	l3612
  2192  002058                     l595:
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  2196  002058  989D               	bcf	157,4,c	;volatile
  2197  00205A                     
  2198                           ; BSR set to: 0
  2199                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  2200  00205A  0E94               	movlw	low _eusartTxBuffer
  2201  00205C  2459               	addwf	_eusartTxHead^0,w,c	;volatile
  2202  00205E  6ED9               	movwf	fsr2l,c
  2203  002060  6ADA               	clrf	fsr2h,c
  2204  002062  0E00               	movlw	high _eusartTxBuffer
  2205  002064  22DA               	addwfc	fsr2h,f,c
  2206  002066  C005  FFDF         	movff	EUSART_Write@txData,indf2
  2207  00206A                     
  2208                           ; BSR set to: 0
  2209  00206A  2A59               	incf	_eusartTxHead^0,f,c	;volatile
  2210  00206C                     
  2211                           ; BSR set to: 0
  2212                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  2213  00206C  0E07               	movlw	7
  2214  00206E  6459               	cpfsgt	_eusartTxHead^0,c	;volatile
  2215  002070  EF3C  F010         	goto	u2091
  2216  002074  EF3E  F010         	goto	u2090
  2217  002078                     u2091:
  2218  002078  EF40  F010         	goto	l3610
  2219  00207C                     u2090:
  2220  00207C                     
  2221                           ; BSR set to: 0
  2222                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  2223  00207C  0E00               	movlw	0
  2224  00207E  6E59               	movwf	_eusartTxHead^0,c	;volatile
  2225  002080                     l3610:
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  2229  002080  07E7               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  2230  002082                     l3612:
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  2234  002082  889D               	bsf	157,4,c	;volatile
  2235  002084                     
  2236                           ; BSR set to: 0
  2237  002084  0012               	return		;funcret
  2238  002086                     __end_of_EUSART_Write:
  2239                           	callstack 0
  2240                           
  2241 ;; *************** function _abs *****************
  2242 ;; Defined at:
  2243 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  a               2   22[COMRAM] int 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  2   22[COMRAM] int 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;Total ram usage:        4 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    4
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_dtoa
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text11
  2272  002150                     __ptext11:
  2273                           	callstack 0
  2274  002150                     _abs:
  2275                           	callstack 22
  2276  002150  BE18               	btfsc	(abs@a+1)^0,7,c
  2277  002152  EFB5  F010         	goto	u2330
  2278  002156  5018               	movf	(abs@a+1)^0,w,c
  2279  002158  E106               	bnz	u2331
  2280  00215A  0417               	decf	abs@a^0,w,c
  2281  00215C  B0D8               	btfsc	status,0,c
  2282  00215E  EFB3  F010         	goto	u2331
  2283  002162  EFB5  F010         	goto	u2330
  2284  002166                     u2331:
  2285  002166  EFC3  F010         	goto	l1449
  2286  00216A                     u2330:
  2287  00216A  C017  F019         	movff	abs@a,??_abs
  2288  00216E  C018  F01A         	movff	abs@a+1,??_abs+1
  2289  002172  1E19               	comf	??_abs^0,f,c
  2290  002174  1E1A               	comf	(??_abs+1)^0,f,c
  2291  002176  4A19               	infsnz	??_abs^0,f,c
  2292  002178  2A1A               	incf	(??_abs+1)^0,f,c
  2293  00217A  C019  F017         	movff	??_abs,?_abs
  2294  00217E  C01A  F018         	movff	??_abs+1,?_abs+1
  2295  002182  EFC7  F010         	goto	l1452
  2296  002186                     l1449:
  2297  002186  C017  F017         	movff	abs@a,?_abs
  2298  00218A  C018  F018         	movff	abs@a+1,?_abs+1
  2299  00218E                     l1452:
  2300  00218E  0012               	return		;funcret
  2301  002190                     __end_of_abs:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function ___aomod *****************
  2305 ;; Defined at:
  2306 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  dividend        8    4[COMRAM] long long 
  2309 ;;  divisor         8   12[COMRAM] long long 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  sign            1   21[COMRAM] unsigned char 
  2312 ;;  counter         1   20[COMRAM] unsigned char 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  8    4[COMRAM] long long 
  2315 ;; Registers used:
  2316 ;;		wreg, status,2, status,0
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2322 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2323 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;Total ram usage:       18 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:    4
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_dtoa
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text12
  2337  001654                     __ptext12:
  2338                           	callstack 0
  2339  001654                     ___aomod:
  2340                           	callstack 22
  2341  001654  0E00               	movlw	0
  2342  001656  6E16               	movwf	___aomod@sign^0,c
  2343  001658  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2344  00165A  EF33  F00B         	goto	u2230
  2345  00165E  EF31  F00B         	goto	u2231
  2346  001662                     u2231:
  2347  001662  EF45  F00B         	goto	l3700
  2348  001666                     u2230:
  2349  001666  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2350  001668  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2351  00166A  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2352  00166C  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2353  00166E  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2354  001670  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2355  001672  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2356  001674  6C05               	negf	___aomod@dividend^0,c
  2357  001676  0E00               	movlw	0
  2358  001678  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2359  00167A  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2360  00167C  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2361  00167E  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2362  001680  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2363  001682  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2364  001684  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2365  001686  0E01               	movlw	1
  2366  001688  6E16               	movwf	___aomod@sign^0,c
  2367  00168A                     l3700:
  2368  00168A  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2369  00168C  EF4C  F00B         	goto	u2240
  2370  001690  EF4A  F00B         	goto	u2241
  2371  001694                     u2241:
  2372  001694  EF5C  F00B         	goto	l3704
  2373  001698                     u2240:
  2374  001698  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2375  00169A  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2376  00169C  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2377  00169E  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2378  0016A0  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2379  0016A2  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2380  0016A4  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2381  0016A6  6C0D               	negf	___aomod@divisor^0,c
  2382  0016A8  0E00               	movlw	0
  2383  0016AA  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2384  0016AC  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2385  0016AE  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2386  0016B0  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2387  0016B2  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2388  0016B4  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2389  0016B6  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2390  0016B8                     l3704:
  2391  0016B8  500D               	movf	___aomod@divisor^0,w,c
  2392  0016BA  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2393  0016BC  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2394  0016BE  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2395  0016C0  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2396  0016C2  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2397  0016C4  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2398  0016C6  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2399  0016C8  B4D8               	btfsc	status,2,c
  2400  0016CA  EF69  F00B         	goto	u2251
  2401  0016CE  EF6B  F00B         	goto	u2250
  2402  0016D2                     u2251:
  2403  0016D2  EFB3  F00B         	goto	l3720
  2404  0016D6                     u2250:
  2405  0016D6  0E01               	movlw	1
  2406  0016D8  6E15               	movwf	___aomod@counter^0,c
  2407  0016DA  EF79  F00B         	goto	l3710
  2408  0016DE                     l3708:
  2409  0016DE  90D8               	bcf	status,0,c
  2410  0016E0  360D               	rlcf	___aomod@divisor^0,f,c
  2411  0016E2  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2412  0016E4  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2413  0016E6  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2414  0016E8  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2415  0016EA  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2416  0016EC  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2417  0016EE  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2418  0016F0  2A15               	incf	___aomod@counter^0,f,c
  2419  0016F2                     l3710:
  2420  0016F2  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2421  0016F4  EF7E  F00B         	goto	u2261
  2422  0016F8  EF80  F00B         	goto	u2260
  2423  0016FC                     u2261:
  2424  0016FC  EF6F  F00B         	goto	l3708
  2425  001700                     u2260:
  2426  001700                     l3712:
  2427  001700  500D               	movf	___aomod@divisor^0,w,c
  2428  001702  5C05               	subwf	___aomod@dividend^0,w,c
  2429  001704  500E               	movf	(___aomod@divisor+1)^0,w,c
  2430  001706  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2431  001708  500F               	movf	(___aomod@divisor+2)^0,w,c
  2432  00170A  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2433  00170C  5010               	movf	(___aomod@divisor+3)^0,w,c
  2434  00170E  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2435  001710  5011               	movf	(___aomod@divisor+4)^0,w,c
  2436  001712  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2437  001714  5012               	movf	(___aomod@divisor+5)^0,w,c
  2438  001716  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2439  001718  5013               	movf	(___aomod@divisor+6)^0,w,c
  2440  00171A  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2441  00171C  5014               	movf	(___aomod@divisor+7)^0,w,c
  2442  00171E  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2443  001720  A0D8               	btfss	status,0,c
  2444  001722  EF95  F00B         	goto	u2271
  2445  001726  EF97  F00B         	goto	u2270
  2446  00172A                     u2271:
  2447  00172A  EFA7  F00B         	goto	l3716
  2448  00172E                     u2270:
  2449  00172E  500D               	movf	___aomod@divisor^0,w,c
  2450  001730  5E05               	subwf	___aomod@dividend^0,f,c
  2451  001732  500E               	movf	(___aomod@divisor+1)^0,w,c
  2452  001734  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2453  001736  500F               	movf	(___aomod@divisor+2)^0,w,c
  2454  001738  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2455  00173A  5010               	movf	(___aomod@divisor+3)^0,w,c
  2456  00173C  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2457  00173E  5011               	movf	(___aomod@divisor+4)^0,w,c
  2458  001740  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2459  001742  5012               	movf	(___aomod@divisor+5)^0,w,c
  2460  001744  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2461  001746  5013               	movf	(___aomod@divisor+6)^0,w,c
  2462  001748  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2463  00174A  5014               	movf	(___aomod@divisor+7)^0,w,c
  2464  00174C  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2465  00174E                     l3716:
  2466  00174E  90D8               	bcf	status,0,c
  2467  001750  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2468  001752  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2469  001754  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2470  001756  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2471  001758  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2472  00175A  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2473  00175C  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2474  00175E  320D               	rrcf	___aomod@divisor^0,f,c
  2475  001760  2E15               	decfsz	___aomod@counter^0,f,c
  2476  001762  EF80  F00B         	goto	l3712
  2477  001766                     l3720:
  2478  001766  5016               	movf	___aomod@sign^0,w,c
  2479  001768  B4D8               	btfsc	status,2,c
  2480  00176A  EFB9  F00B         	goto	u2281
  2481  00176E  EFBB  F00B         	goto	u2280
  2482  001772                     u2281:
  2483  001772  EFCB  F00B         	goto	l3724
  2484  001776                     u2280:
  2485  001776  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2486  001778  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2487  00177A  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2488  00177C  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2489  00177E  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2490  001780  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2491  001782  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2492  001784  6C05               	negf	___aomod@dividend^0,c
  2493  001786  0E00               	movlw	0
  2494  001788  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2495  00178A  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2496  00178C  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2497  00178E  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2498  001790  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2499  001792  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2500  001794  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2501  001796                     l3724:
  2502  001796  C005  F005         	movff	___aomod@dividend,?___aomod
  2503  00179A  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2504  00179E  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2505  0017A2  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2506  0017A6  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2507  0017AA  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2508  0017AE  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2509  0017B2  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2510  0017B6  0012               	return		;funcret
  2511  0017B8                     __end_of___aomod:
  2512                           	callstack 0
  2513                           
  2514 ;; *************** function ___aodiv *****************
  2515 ;; Defined at:
  2516 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  dividend        8    4[COMRAM] long long 
  2519 ;;  divisor         8   12[COMRAM] long long 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  quotient        8   22[COMRAM] long long 
  2522 ;;  sign            1   21[COMRAM] unsigned char 
  2523 ;;  counter         1   20[COMRAM] unsigned char 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  8    4[COMRAM] long long 
  2526 ;; Registers used:
  2527 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2533 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;Total ram usage:       26 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    4
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_dtoa
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text13
  2548  0014CC                     __ptext13:
  2549                           	callstack 0
  2550  0014CC                     ___aodiv:
  2551                           	callstack 22
  2552  0014CC  0E00               	movlw	0
  2553  0014CE  6E16               	movwf	___aodiv@sign^0,c
  2554  0014D0  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2555  0014D2  EF6F  F00A         	goto	u2160
  2556  0014D6  EF6D  F00A         	goto	u2161
  2557  0014DA                     u2161:
  2558  0014DA  EF81  F00A         	goto	l3656
  2559  0014DE                     u2160:
  2560  0014DE  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2561  0014E0  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2562  0014E2  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2563  0014E4  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2564  0014E6  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2565  0014E8  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2566  0014EA  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2567  0014EC  6C0D               	negf	___aodiv@divisor^0,c
  2568  0014EE  0E00               	movlw	0
  2569  0014F0  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2570  0014F2  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2571  0014F4  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2572  0014F6  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2573  0014F8  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2574  0014FA  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2575  0014FC  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2576  0014FE  0E01               	movlw	1
  2577  001500  6E16               	movwf	___aodiv@sign^0,c
  2578  001502                     l3656:
  2579  001502  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2580  001504  EF88  F00A         	goto	u2170
  2581  001508  EF86  F00A         	goto	u2171
  2582  00150C                     u2171:
  2583  00150C  EF9A  F00A         	goto	l3662
  2584  001510                     u2170:
  2585  001510  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2586  001512  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2587  001514  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2588  001516  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2589  001518  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2590  00151A  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2591  00151C  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2592  00151E  6C05               	negf	___aodiv@dividend^0,c
  2593  001520  0E00               	movlw	0
  2594  001522  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2595  001524  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2596  001526  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2597  001528  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2598  00152A  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2599  00152C  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2600  00152E  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2601  001530  0E01               	movlw	1
  2602  001532  1A16               	xorwf	___aodiv@sign^0,f,c
  2603  001534                     l3662:
  2604  001534  EE20  F017         	lfsr	2,___aodiv@quotient
  2605  001538  0E07               	movlw	7
  2606  00153A                     u2181:
  2607  00153A  6ADE               	clrf	postinc2,c
  2608  00153C  06E8               	decf	wreg,f,c
  2609  00153E  E2FD               	bc	u2181
  2610  001540  500D               	movf	___aodiv@divisor^0,w,c
  2611  001542  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2612  001544  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2613  001546  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2614  001548  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2615  00154A  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2616  00154C  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2617  00154E  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2618  001550  B4D8               	btfsc	status,2,c
  2619  001552  EFAD  F00A         	goto	u2191
  2620  001556  EFAF  F00A         	goto	u2190
  2621  00155A                     u2191:
  2622  00155A  EF01  F00B         	goto	l3684
  2623  00155E                     u2190:
  2624  00155E  0E01               	movlw	1
  2625  001560  6E15               	movwf	___aodiv@counter^0,c
  2626  001562  EFBD  F00A         	goto	l3670
  2627  001566                     l3668:
  2628  001566  90D8               	bcf	status,0,c
  2629  001568  360D               	rlcf	___aodiv@divisor^0,f,c
  2630  00156A  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2631  00156C  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2632  00156E  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2633  001570  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2634  001572  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2635  001574  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2636  001576  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2637  001578  2A15               	incf	___aodiv@counter^0,f,c
  2638  00157A                     l3670:
  2639  00157A  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2640  00157C  EFC2  F00A         	goto	u2201
  2641  001580  EFC4  F00A         	goto	u2200
  2642  001584                     u2201:
  2643  001584  EFB3  F00A         	goto	l3668
  2644  001588                     u2200:
  2645  001588                     l3672:
  2646  001588  90D8               	bcf	status,0,c
  2647  00158A  3617               	rlcf	___aodiv@quotient^0,f,c
  2648  00158C  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2649  00158E  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2650  001590  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2651  001592  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2652  001594  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2653  001596  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2654  001598  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2655  00159A  500D               	movf	___aodiv@divisor^0,w,c
  2656  00159C  5C05               	subwf	___aodiv@dividend^0,w,c
  2657  00159E  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2658  0015A0  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2659  0015A2  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2660  0015A4  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2661  0015A6  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2662  0015A8  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2663  0015AA  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2664  0015AC  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2665  0015AE  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2666  0015B0  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2667  0015B2  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2668  0015B4  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2669  0015B6  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2670  0015B8  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2671  0015BA  A0D8               	btfss	status,0,c
  2672  0015BC  EFE2  F00A         	goto	u2211
  2673  0015C0  EFE4  F00A         	goto	u2210
  2674  0015C4                     u2211:
  2675  0015C4  EFF5  F00A         	goto	l3680
  2676  0015C8                     u2210:
  2677  0015C8  500D               	movf	___aodiv@divisor^0,w,c
  2678  0015CA  5E05               	subwf	___aodiv@dividend^0,f,c
  2679  0015CC  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2680  0015CE  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2681  0015D0  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2682  0015D2  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2683  0015D4  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2684  0015D6  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2685  0015D8  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2686  0015DA  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2687  0015DC  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2688  0015DE  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2689  0015E0  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2690  0015E2  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2691  0015E4  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2692  0015E6  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2693  0015E8  8017               	bsf	___aodiv@quotient^0,0,c
  2694  0015EA                     l3680:
  2695  0015EA  90D8               	bcf	status,0,c
  2696  0015EC  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2697  0015EE  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2698  0015F0  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2699  0015F2  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2700  0015F4  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2701  0015F6  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2702  0015F8  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2703  0015FA  320D               	rrcf	___aodiv@divisor^0,f,c
  2704  0015FC  2E15               	decfsz	___aodiv@counter^0,f,c
  2705  0015FE  EFC4  F00A         	goto	l3672
  2706  001602                     l3684:
  2707  001602  5016               	movf	___aodiv@sign^0,w,c
  2708  001604  B4D8               	btfsc	status,2,c
  2709  001606  EF07  F00B         	goto	u2221
  2710  00160A  EF09  F00B         	goto	u2220
  2711  00160E                     u2221:
  2712  00160E  EF19  F00B         	goto	l3688
  2713  001612                     u2220:
  2714  001612  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2715  001614  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2716  001616  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2717  001618  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2718  00161A  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2719  00161C  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2720  00161E  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2721  001620  6C17               	negf	___aodiv@quotient^0,c
  2722  001622  0E00               	movlw	0
  2723  001624  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2724  001626  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2725  001628  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2726  00162A  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2727  00162C  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2728  00162E  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2729  001630  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2730  001632                     l3688:
  2731  001632  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2732  001636  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2733  00163A  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2734  00163E  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2735  001642  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2736  001646  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2737  00164A  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2738  00164E  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2739  001652  0012               	return		;funcret
  2740  001654                     __end_of___aodiv:
  2741                           	callstack 0
  2742                           
  2743 ;; *************** function _SYSTEM_Initialize *****************
  2744 ;; Defined at:
  2745 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;Total ram usage:        0 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    6
  2766 ;; This function calls:
  2767 ;;		_EUSART_Initialize
  2768 ;;		_I2C_Initialize
  2769 ;;		_INTERRUPT_Initialize
  2770 ;;		_OSCILLATOR_Initialize
  2771 ;;		_PIN_MANAGER_Initialize
  2772 ;; This function is called by:
  2773 ;;		_main
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text14
  2778  002418                     __ptext14:
  2779                           	callstack 0
  2780  002418                     _SYSTEM_Initialize:
  2781                           	callstack 24
  2782  002418                     
  2783                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2784  002418  ECA8  F012         	call	_INTERRUPT_Initialize	;wreg free
  2785  00241C                     
  2786                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  2787  00241C  EC17  F012         	call	_I2C_Initialize	;wreg free
  2788  002420                     
  2789                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  2790  002420  EC03  F011         	call	_PIN_MANAGER_Initialize	;wreg free
  2791  002424                     
  2792                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  2793  002424  EC5A  F012         	call	_OSCILLATOR_Initialize	;wreg free
  2794  002428                     
  2795                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2796  002428  EC08  F00F         	call	_EUSART_Initialize	;wreg free
  2797  00242C  0012               	return		;funcret
  2798  00242E                     __end_of_SYSTEM_Initialize:
  2799                           	callstack 0
  2800                           
  2801 ;; *************** function _PIN_MANAGER_Initialize *****************
  2802 ;; Defined at:
  2803 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;		None
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;Total ram usage:        0 bytes
  2822 ;; Hardware stack levels used:    1
  2823 ;; Hardware stack levels required when called:    4
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_SYSTEM_Initialize
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text15
  2832  002206                     __ptext15:
  2833                           	callstack 0
  2834  002206                     _PIN_MANAGER_Initialize:
  2835                           	callstack 25
  2836  002206                     
  2837                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2838  002206  0E00               	movlw	0
  2839  002208  6E8D               	movwf	141,c	;volatile
  2840                           
  2841                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2842  00220A  0E00               	movlw	0
  2843  00220C  6E8C               	movwf	140,c	;volatile
  2844                           
  2845                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2846  00220E  0E00               	movlw	0
  2847  002210  6E89               	movwf	137,c	;volatile
  2848                           
  2849                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2850  002212  0E00               	movlw	0
  2851  002214  6E8A               	movwf	138,c	;volatile
  2852                           
  2853                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2854  002216  0E00               	movlw	0
  2855  002218  6E8B               	movwf	139,c	;volatile
  2856                           
  2857                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  2858  00221A  0E07               	movlw	7
  2859  00221C  6E96               	movwf	150,c	;volatile
  2860  00221E                     
  2861                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  2862  00221E  6892               	setf	146,c	;volatile
  2863  002220                     
  2864                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  2865  002220  6893               	setf	147,c	;volatile
  2866                           
  2867                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  2868  002222  0EBF               	movlw	191
  2869  002224  6E94               	movwf	148,c	;volatile
  2870  002226                     
  2871                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  2872  002226  6895               	setf	149,c	;volatile
  2873  002228                     
  2874                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  2875  002228  687E               	setf	126,c	;volatile
  2876                           
  2877                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  2878  00222A  0E1F               	movlw	31
  2879  00222C  6E7F               	movwf	127,c	;volatile
  2880                           
  2881                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  2882  00222E  0E00               	movlw	0
  2883  002230  6E7C               	movwf	124,c	;volatile
  2884  002232                     
  2885                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  2886  002232  8EF1               	bsf	241,7,c	;volatile
  2887  002234  0012               	return		;funcret
  2888  002236                     __end_of_PIN_MANAGER_Initialize:
  2889                           	callstack 0
  2890                           
  2891 ;; *************** function _OSCILLATOR_Initialize *****************
  2892 ;; Defined at:
  2893 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;		None
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;Total ram usage:        0 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    4
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_SYSTEM_Initialize
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text16
  2922  0024B4                     __ptext16:
  2923                           	callstack 0
  2924  0024B4                     _OSCILLATOR_Initialize:
  2925                           	callstack 25
  2926  0024B4                     
  2927                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  2928  0024B4  0E60               	movlw	96
  2929  0024B6  6ED3               	movwf	211,c	;volatile
  2930                           
  2931                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  2932  0024B8  0E00               	movlw	0
  2933  0024BA  6E9B               	movwf	155,c	;volatile
  2934  0024BC  0012               	return		;funcret
  2935  0024BE                     __end_of_OSCILLATOR_Initialize:
  2936                           	callstack 0
  2937                           
  2938 ;; *************** function _INTERRUPT_Initialize *****************
  2939 ;; Defined at:
  2940 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		None
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;Total ram usage:        0 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    4
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_SYSTEM_Initialize
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text17
  2969  002550                     __ptext17:
  2970                           	callstack 0
  2971  002550                     _INTERRUPT_Initialize:
  2972                           	callstack 25
  2973  002550                     
  2974                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  2975  002550  9ED0               	bcf	208,7,c	;volatile
  2976  002552  0012               	return		;funcret
  2977  002554                     __end_of_INTERRUPT_Initialize:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _I2C_Initialize *****************
  2981 ;; Defined at:
  2982 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;		None
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;		None
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;Total ram usage:        0 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    4
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_SYSTEM_Initialize
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text18
  3011  00242E                     __ptext18:
  3012                           	callstack 0
  3013  00242E                     _I2C_Initialize:
  3014                           	callstack 25
  3015  00242E                     
  3016                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  3017  00242E  0E00               	movlw	0
  3018  002430  6EC7               	movwf	199,c	;volatile
  3019                           
  3020                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  3021  002432  0E08               	movlw	8
  3022  002434  6EC6               	movwf	198,c	;volatile
  3023                           
  3024                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  3025  002436  0E00               	movlw	0
  3026  002438  6EC5               	movwf	197,c	;volatile
  3027                           
  3028                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  3029  00243A  0E13               	movlw	19
  3030  00243C  6EC8               	movwf	200,c	;volatile
  3031  00243E                     
  3032                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  3033  00243E  9AC6               	bcf	198,5,c	;volatile
  3034  002440  0012               	return		;funcret
  3035  002442                     __end_of_I2C_Initialize:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function _EUSART_Initialize *****************
  3039 ;; Defined at:
  3040 ;;		line 88 in file "mcc_generated_files/eusart.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;Total ram usage:        0 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    5
  3061 ;; This function calls:
  3062 ;;		_EUSART_SetErrorHandler
  3063 ;;		_EUSART_SetFramingErrorHandler
  3064 ;;		_EUSART_SetOverrunErrorHandler
  3065 ;;		_EUSART_SetRxInterruptHandler
  3066 ;;		_EUSART_SetTxInterruptHandler
  3067 ;; This function is called by:
  3068 ;;		_SYSTEM_Initialize
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text19
  3073  001E10                     __ptext19:
  3074                           	callstack 0
  3075  001E10                     _EUSART_Initialize:
  3076                           	callstack 24
  3077  001E10                     
  3078                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  3079  001E10  9A9D               	bcf	157,5,c	;volatile
  3080  001E12                     
  3081                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3082  001E12  0E0E               	movlw	low _EUSART_Receive_ISR
  3083  001E14  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  3084  001E16  0E1A               	movlw	high _EUSART_Receive_ISR
  3085  001E18  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  3086  001E1A  EC64  F012         	call	_EUSART_SetRxInterruptHandler	;wreg free
  3087  001E1E                     
  3088                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  3089  001E1E  989D               	bcf	157,4,c	;volatile
  3090                           
  3091                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3092  001E20  0E0E               	movlw	low _EUSART_Transmit_ISR
  3093  001E22  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  3094  001E24  0E21               	movlw	high _EUSART_Transmit_ISR
  3095  001E26  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  3096  001E28  EC5F  F012         	call	_EUSART_SetTxInterruptHandler	;wreg free
  3097  001E2C                     
  3098                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  3099  001E2C  0E08               	movlw	8
  3100  001E2E  6EB8               	movwf	184,c	;volatile
  3101  001E30                     
  3102                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  3103  001E30  0E90               	movlw	144
  3104  001E32  6EAB               	movwf	171,c	;volatile
  3105  001E34                     
  3106                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  3107  001E34  0E24               	movlw	36
  3108  001E36  6EAC               	movwf	172,c	;volatile
  3109  001E38                     
  3110                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
  3111  001E38  0ECF               	movlw	207
  3112  001E3A  6EAF               	movwf	175,c	;volatile
  3113  001E3C                     
  3114                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  3115  001E3C  0E00               	movlw	0
  3116  001E3E  6EB0               	movwf	176,c	;volatile
  3117  001E40                     
  3118                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3119  001E40  0E80               	movlw	low _EUSART_DefaultFramingErrorHandler
  3120  001E42  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  3121  001E44  0E25               	movlw	high _EUSART_DefaultFramingErrorHandler
  3122  001E46  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  3123  001E48  EC6E  F012         	call	_EUSART_SetFramingErrorHandler	;wreg free
  3124  001E4C                     
  3125                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3126  001E4C  0E44               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3127  001E4E  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  3128  001E50  0E25               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3129  001E52  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3130  001E54  EC69  F012         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  3131  001E58                     
  3132                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3133  001E58  0E4A               	movlw	low _EUSART_DefaultErrorHandler
  3134  001E5A  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  3135  001E5C  0E25               	movlw	high _EUSART_DefaultErrorHandler
  3136  001E5E  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  3137  001E60  EC73  F012         	call	_EUSART_SetErrorHandler	;wreg free
  3138                           
  3139                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  3140  001E64  0E00               	movlw	0
  3141  001E66  0100               	movlb	0	; () banked
  3142  001E68  6FA4               	movwf	_eusartRxLastError& (0+255),b	;volatile
  3143                           
  3144                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  3145  001E6A  0E00               	movlw	0
  3146  001E6C  6E59               	movwf	_eusartTxHead^0,c	;volatile
  3147                           
  3148                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3149  001E6E  0E00               	movlw	0
  3150  001E70  6E58               	movwf	_eusartTxTail^0,c	;volatile
  3151                           
  3152                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3153  001E72  0E08               	movlw	8
  3154  001E74  6FE7               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  3155                           
  3156                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  3157  001E76  0E00               	movlw	0
  3158  001E78  6E57               	movwf	_eusartRxHead^0,c	;volatile
  3159                           
  3160                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  3161  001E7A  0E00               	movlw	0
  3162  001E7C  6E56               	movwf	_eusartRxTail^0,c	;volatile
  3163                           
  3164                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  3165  001E7E  0E00               	movlw	0
  3166  001E80  6FA5               	movwf	_eusartRxCount& (0+255),b	;volatile
  3167  001E82                     
  3168                           ; BSR set to: 0
  3169                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  3170  001E82  8A9D               	bsf	157,5,c	;volatile
  3171  001E84                     
  3172                           ; BSR set to: 0
  3173  001E84  0012               	return		;funcret
  3174  001E86                     __end_of_EUSART_Initialize:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3178 ;; Defined at:
  3179 ;;		line 285 in file "mcc_generated_files/eusart.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3182 ;;		 -> EUSART_Transmit_ISR(1), 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;		None
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      void 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;Total ram usage:        2 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    4
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		_EUSART_Initialize
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           	psect	text20
  3209  0024BE                     __ptext20:
  3210                           	callstack 0
  3211  0024BE                     _EUSART_SetTxInterruptHandler:
  3212                           	callstack 24
  3213  0024BE                     
  3214                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3215  0024BE  C005  F0E5         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  3216  0024C2  C006  F0E6         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  3217  0024C6  0012               	return		;funcret
  3218  0024C8                     __end_of_EUSART_SetTxInterruptHandler:
  3219                           	callstack 0
  3220                           
  3221 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3222 ;; Defined at:
  3223 ;;		line 289 in file "mcc_generated_files/eusart.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3226 ;;		 -> EUSART_Receive_ISR(1), 
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  1    wreg      void 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;Total ram usage:        2 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    4
  3245 ;; This function calls:
  3246 ;;		Nothing
  3247 ;; This function is called by:
  3248 ;;		_EUSART_Initialize
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text21
  3253  0024C8                     __ptext21:
  3254                           	callstack 0
  3255  0024C8                     _EUSART_SetRxInterruptHandler:
  3256                           	callstack 24
  3257  0024C8                     
  3258                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3259  0024C8  C005  F0E3         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  3260  0024CC  C006  F0E4         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  3261  0024D0  0012               	return		;funcret
  3262  0024D2                     __end_of_EUSART_SetRxInterruptHandler:
  3263                           	callstack 0
  3264                           
  3265 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3266 ;; Defined at:
  3267 ;;		line 277 in file "mcc_generated_files/eusart.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3270 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;Total ram usage:        2 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    4
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_EUSART_Initialize
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text22
  3297  0024D2                     __ptext22:
  3298                           	callstack 0
  3299  0024D2                     _EUSART_SetOverrunErrorHandler:
  3300                           	callstack 24
  3301  0024D2                     
  3302                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  3303  0024D2  C005  F0DF         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  3304  0024D6  C006  F0E0         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  3305  0024DA  0012               	return		;funcret
  3306  0024DC                     __end_of_EUSART_SetOverrunErrorHandler:
  3307                           	callstack 0
  3308                           
  3309 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3310 ;; Defined at:
  3311 ;;		line 273 in file "mcc_generated_files/eusart.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3314 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, status,0
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3329 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;Total ram usage:        2 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    4
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_EUSART_Initialize
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text23
  3341  0024DC                     __ptext23:
  3342                           	callstack 0
  3343  0024DC                     _EUSART_SetFramingErrorHandler:
  3344                           	callstack 24
  3345  0024DC                     
  3346                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  3347  0024DC  C005  F0E1         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  3348  0024E0  C006  F0E2         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  3349  0024E4  0012               	return		;funcret
  3350  0024E6                     __end_of_EUSART_SetFramingErrorHandler:
  3351                           	callstack 0
  3352                           
  3353 ;; *************** function _EUSART_SetErrorHandler *****************
  3354 ;; Defined at:
  3355 ;;		line 281 in file "mcc_generated_files/eusart.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3358 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      void 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;Total ram usage:        2 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:    4
  3377 ;; This function calls:
  3378 ;;		Nothing
  3379 ;; This function is called by:
  3380 ;;		_EUSART_Initialize
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text24
  3385  0024E6                     __ptext24:
  3386                           	callstack 0
  3387  0024E6                     _EUSART_SetErrorHandler:
  3388                           	callstack 24
  3389  0024E6                     
  3390                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  3391  0024E6  C005  F0DD         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  3392  0024EA  C006  F0DE         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  3393  0024EE  0012               	return		;funcret
  3394  0024F0                     __end_of_EUSART_SetErrorHandler:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function _I2C_Write2ByteRegister *****************
  3398 ;; Defined at:
  3399 ;;		line 101 in file "mcc_generated_files/examples/i2c_master_example.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  address         1    wreg     unsigned char 
  3402 ;;  reg             1   21[COMRAM] unsigned char 
  3403 ;;  data            2   22[COMRAM] unsigned short 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  address         1   24[COMRAM] unsigned char 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      void 
  3408 ;; Registers used:
  3409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3415 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;Total ram usage:        4 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:   12
  3422 ;; This function calls:
  3423 ;;		_I2C_Close
  3424 ;;		_I2C_MasterWrite
  3425 ;;		_I2C_Open
  3426 ;;		_I2C_SetAddressNackCallback
  3427 ;;		_I2C_SetBuffer
  3428 ;;		_I2C_SetDataCompleteCallback
  3429 ;; This function is called by:
  3430 ;;		_main
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text25
  3435  001EF6                     __ptext25:
  3436                           	callstack 0
  3437  001EF6                     _I2C_Write2ByteRegister:
  3438                           	callstack 18
  3439                           
  3440                           ;incstack = 0
  3441                           ;I2C_Write2ByteRegister@address stored from wreg
  3442  001EF6  6E19               	movwf	I2C_Write2ByteRegister@address^0,c
  3443  001EF8                     l3278:
  3444  001EF8  5019               	movf	I2C_Write2ByteRegister@address^0,w,c
  3445  001EFA  EC03  F00E         	call	_I2C_Open
  3446  001EFE  0900               	iorlw	0
  3447  001F00  B4D8               	btfsc	status,2,c
  3448  001F02  EF85  F00F         	goto	u1741
  3449  001F06  EF87  F00F         	goto	u1740
  3450  001F0A                     u1741:
  3451  001F0A  EF7C  F00F         	goto	l3278
  3452  001F0E                     u1740:
  3453  001F0E                     
  3454                           ;mcc_generated_files/examples/i2c_master_example.c: 104:     I2C_SetDataCompleteCallback
      +                          (wr2RegCompleteHandler,&data);
  3455  001F0E  0EBA               	movlw	low _wr2RegCompleteHandler
  3456  001F10  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  3457  001F12  0E22               	movlw	high _wr2RegCompleteHandler
  3458  001F14  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  3459  001F16  0E17               	movlw	low I2C_Write2ByteRegister@data
  3460  001F18  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  3461  001F1A  0E00               	movlw	high I2C_Write2ByteRegister@data
  3462  001F1C  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  3463  001F1E  EC00  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  3464  001F22                     
  3465                           ;mcc_generated_files/examples/i2c_master_example.c: 105:     I2C_SetBuffer(&reg,1);
  3466  001F22  0E16               	movlw	low I2C_Write2ByteRegister@reg
  3467  001F24  6E05               	movwf	I2C_SetBuffer@buffer^0,c
  3468  001F26  0E00               	movlw	high I2C_Write2ByteRegister@reg
  3469  001F28  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  3470  001F2A  0E00               	movlw	0
  3471  001F2C  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  3472  001F2E  0E01               	movlw	1
  3473  001F30  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  3474  001F32  ECB3  F011         	call	_I2C_SetBuffer	;wreg free
  3475  001F36                     
  3476                           ;mcc_generated_files/examples/i2c_master_example.c: 106:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  3477  001F36  0E00               	movlw	0
  3478  001F38  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  3479  001F3A  0E00               	movlw	0
  3480  001F3C  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  3481  001F3E  0E00               	movlw	0
  3482  001F40  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  3483  001F42  0E00               	movlw	0
  3484  001F44  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  3485  001F46  ECF4  F011         	call	_I2C_SetAddressNackCallback	;wreg free
  3486  001F4A                     
  3487                           ;mcc_generated_files/examples/i2c_master_example.c: 107:     I2C_MasterWrite();
  3488  001F4A  EC78  F012         	call	_I2C_MasterWrite	;wreg free
  3489  001F4E                     l3288:
  3490  001F4E  EC73  F011         	call	_I2C_Close	;wreg free
  3491  001F52  06E8               	decf	wreg,f,c
  3492  001F54  B4D8               	btfsc	status,2,c
  3493  001F56  EFAF  F00F         	goto	u1751
  3494  001F5A  EFB1  F00F         	goto	u1750
  3495  001F5E                     u1751:
  3496  001F5E  EFA7  F00F         	goto	l3288
  3497  001F62                     u1750:
  3498  001F62  0012               	return		;funcret
  3499  001F64                     __end_of_I2C_Write2ByteRegister:
  3500                           	callstack 0
  3501                           
  3502 ;; *************** function _I2C_Read2ByteRegister *****************
  3503 ;; Defined at:
  3504 ;;		line 77 in file "mcc_generated_files/examples/i2c_master_example.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  address         1    wreg     unsigned char 
  3507 ;;  reg             1   21[COMRAM] unsigned char 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  address         1   26[COMRAM] unsigned char 
  3510 ;;  returnValue     2   27[COMRAM] unsigned short 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  2   21[COMRAM] unsigned short 
  3513 ;; Registers used:
  3514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;Total ram usage:        8 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:   12
  3527 ;; This function calls:
  3528 ;;		_I2C_Close
  3529 ;;		_I2C_MasterWrite
  3530 ;;		_I2C_Open
  3531 ;;		_I2C_SetAddressNackCallback
  3532 ;;		_I2C_SetBuffer
  3533 ;;		_I2C_SetDataCompleteCallback
  3534 ;; This function is called by:
  3535 ;;		_main
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text26
  3540  001C94                     __ptext26:
  3541                           	callstack 0
  3542  001C94                     _I2C_Read2ByteRegister:
  3543                           	callstack 18
  3544                           
  3545                           ;incstack = 0
  3546                           ;I2C_Read2ByteRegister@address stored from wreg
  3547  001C94  6E1B               	movwf	I2C_Read2ByteRegister@address^0,c
  3548  001C96                     
  3549                           ;mcc_generated_files/examples/i2c_master_example.c: 77: uint16_t I2C_Read2ByteRegister(i
      +                          2c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 78
      +                          : {;mcc_generated_files/examples/i2c_master_example.c: 79:     uint16_t returnValue =0x0
      +                          0;
  3550  001C96  0E00               	movlw	0
  3551  001C98  6E1D               	movwf	(I2C_Read2ByteRegister@returnValue+1)^0,c
  3552  001C9A  0E00               	movlw	0
  3553  001C9C  6E1C               	movwf	I2C_Read2ByteRegister@returnValue^0,c
  3554  001C9E                     l3260:
  3555  001C9E  501B               	movf	I2C_Read2ByteRegister@address^0,w,c
  3556  001CA0  EC03  F00E         	call	_I2C_Open
  3557  001CA4  0900               	iorlw	0
  3558  001CA6  B4D8               	btfsc	status,2,c
  3559  001CA8  EF58  F00E         	goto	u1721
  3560  001CAC  EF5A  F00E         	goto	u1720
  3561  001CB0                     u1721:
  3562  001CB0  EF4F  F00E         	goto	l3260
  3563  001CB4                     u1720:
  3564  001CB4                     
  3565                           ;mcc_generated_files/examples/i2c_master_example.c: 82:     I2C_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&returnValue);
  3566  001CB4  0E62               	movlw	low _rd2RegCompleteHandler
  3567  001CB6  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  3568  001CB8  0E22               	movlw	high _rd2RegCompleteHandler
  3569  001CBA  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  3570  001CBC  0E1C               	movlw	low I2C_Read2ByteRegister@returnValue
  3571  001CBE  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  3572  001CC0  0E00               	movlw	high I2C_Read2ByteRegister@returnValue
  3573  001CC2  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  3574  001CC4  EC00  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  3575  001CC8                     
  3576                           ;mcc_generated_files/examples/i2c_master_example.c: 83:     I2C_SetBuffer(&reg,1);
  3577  001CC8  0E16               	movlw	low I2C_Read2ByteRegister@reg
  3578  001CCA  6E05               	movwf	I2C_SetBuffer@buffer^0,c
  3579  001CCC  0E00               	movlw	high I2C_Read2ByteRegister@reg
  3580  001CCE  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  3581  001CD0  0E00               	movlw	0
  3582  001CD2  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  3583  001CD4  0E01               	movlw	1
  3584  001CD6  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  3585  001CD8  ECB3  F011         	call	_I2C_SetBuffer	;wreg free
  3586  001CDC                     
  3587                           ;mcc_generated_files/examples/i2c_master_example.c: 84:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  3588  001CDC  0E00               	movlw	0
  3589  001CDE  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  3590  001CE0  0E00               	movlw	0
  3591  001CE2  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  3592  001CE4  0E00               	movlw	0
  3593  001CE6  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  3594  001CE8  0E00               	movlw	0
  3595  001CEA  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  3596  001CEC  ECF4  F011         	call	_I2C_SetAddressNackCallback	;wreg free
  3597  001CF0                     
  3598                           ;mcc_generated_files/examples/i2c_master_example.c: 85:     I2C_MasterWrite();
  3599  001CF0  EC78  F012         	call	_I2C_MasterWrite	;wreg free
  3600  001CF4                     l3270:
  3601  001CF4  EC73  F011         	call	_I2C_Close	;wreg free
  3602  001CF8  06E8               	decf	wreg,f,c
  3603  001CFA  B4D8               	btfsc	status,2,c
  3604  001CFC  EF82  F00E         	goto	u1731
  3605  001D00  EF84  F00E         	goto	u1730
  3606  001D04                     u1731:
  3607  001D04  EF7A  F00E         	goto	l3270
  3608  001D08                     u1730:
  3609  001D08                     
  3610                           ;mcc_generated_files/examples/i2c_master_example.c: 88:     return (returnValue << 8 | r
      +                          eturnValue >> 8);
  3611  001D08  C01D  F018         	movff	I2C_Read2ByteRegister@returnValue+1,??_I2C_Read2ByteRegister
  3612  001D0C  501C               	movf	I2C_Read2ByteRegister@returnValue^0,w,c
  3613  001D0E  6E19               	movwf	(??_I2C_Read2ByteRegister+1)^0,c
  3614  001D10  5018               	movf	??_I2C_Read2ByteRegister^0,w,c
  3615  001D12  6E16               	movwf	?_I2C_Read2ByteRegister^0,c
  3616  001D14  C019  F017         	movff	??_I2C_Read2ByteRegister+1,?_I2C_Read2ByteRegister+1
  3617  001D18  0012               	return		;funcret
  3618  001D1A                     __end_of_I2C_Read2ByteRegister:
  3619                           	callstack 0
  3620                           
  3621 ;; *************** function _I2C_SetAddressNackCallback *****************
  3622 ;; Defined at:
  3623 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  3626 ;;		 -> Absolute function(1), 
  3627 ;;  ptr             2   11[COMRAM] PTR void 
  3628 ;;		 -> NULL(0), 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;Total ram usage:        4 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    5
  3647 ;; This function calls:
  3648 ;;		_I2C_SetCallback
  3649 ;; This function is called by:
  3650 ;;		_I2C_Read2ByteRegister
  3651 ;;		_I2C_Write2ByteRegister
  3652 ;;		_I2C_Read1ByteRegister
  3653 ;;		_I2C_Write1ByteRegister
  3654 ;;		_I2C_WriteNBytes
  3655 ;;		_I2C_ReadDataBlock
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text27
  3660  0023E8                     __ptext27:
  3661                           	callstack 0
  3662  0023E8                     _I2C_SetAddressNackCallback:
  3663                           	callstack 24
  3664  0023E8                     
  3665                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  3666  0023E8  C00A  F005         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  3667  0023EC  C00B  F006         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  3668  0023F0  C00C  F007         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  3669  0023F4  C00D  F008         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  3670  0023F8  0E02               	movlw	2
  3671  0023FA  ECCB  F00E         	call	_I2C_SetCallback
  3672  0023FE  0012               	return		;funcret
  3673  002400                     __end_of_I2C_SetAddressNackCallback:
  3674                           	callstack 0
  3675                           
  3676 ;; *************** function _I2C_Open *****************
  3677 ;; Defined at:
  3678 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  address         1    wreg     unsigned char 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  address         1    4[COMRAM] unsigned char 
  3683 ;;  returnValue     1    5[COMRAM] enum E353
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      enum E353
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;Total ram usage:        2 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    5
  3700 ;; This function calls:
  3701 ;;		_I2C_MasterClearIrq
  3702 ;;		_I2C_MasterOpen
  3703 ;; This function is called by:
  3704 ;;		_I2C_Read2ByteRegister
  3705 ;;		_I2C_Write2ByteRegister
  3706 ;;		_I2C_Read1ByteRegister
  3707 ;;		_I2C_Write1ByteRegister
  3708 ;;		_I2C_WriteNBytes
  3709 ;;		_I2C_ReadNBytes
  3710 ;;		_I2C_ReadDataBlock
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text28
  3715  001C06                     __ptext28:
  3716                           	callstack 0
  3717  001C06                     _I2C_Open:
  3718                           	callstack 24
  3719                           
  3720                           ;incstack = 0
  3721                           ;I2C_Open@address stored from wreg
  3722  001C06  6E05               	movwf	I2C_Open@address^0,c
  3723  001C08                     
  3724                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  3725  001C08  0E01               	movlw	1
  3726  001C0A  6E06               	movwf	I2C_Open@returnValue^0,c
  3727  001C0C                     
  3728                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  3729  001C0C  0100               	movlb	0	; () banked
  3730  001C0E  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  3731  001C10  EF0C  F00E         	goto	u1691
  3732  001C14  EF0E  F00E         	goto	u1690
  3733  001C18                     u1691:
  3734  001C18  EF48  F00E         	goto	l3178
  3735  001C1C                     u1690:
  3736  001C1C                     
  3737                           ; BSR set to: 0
  3738                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  3739  001C1C  C005  F07C         	movff	I2C_Open@address,_I2C_Status+28
  3740  001C20                     
  3741                           ; BSR set to: 0
  3742                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  3743  001C20  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  3744  001C22                     
  3745                           ; BSR set to: 0
  3746                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  3747  001C22  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  3748  001C24                     
  3749                           ; BSR set to: 0
  3750                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  3751  001C24  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  3752  001C26                     
  3753                           ; BSR set to: 0
  3754                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  3755  001C26  0E0E               	movlw	14
  3756  001C28  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  3757  001C2A                     
  3758                           ; BSR set to: 0
  3759                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  3760  001C2A  0E01               	movlw	1
  3761  001C2C  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  3762  001C2E  0EF4               	movlw	244
  3763  001C30  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  3764  001C32                     
  3765                           ; BSR set to: 0
  3766                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  3767  001C32  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  3768  001C34                     
  3769                           ; BSR set to: 0
  3770                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  3771  001C34  0E64               	movlw	low _I2C_CallbackReturnStop
  3772  001C36  6F60               	movwf	_I2C_Status& (0+255),b
  3773  001C38  0E25               	movlw	high _I2C_CallbackReturnStop
  3774  001C3A  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  3775  001C3C                     
  3776                           ; BSR set to: 0
  3777                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  3778  001C3C  0E00               	movlw	0
  3779  001C3E  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  3780  001C40  0E00               	movlw	0
  3781  001C42  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  3782  001C44                     
  3783                           ; BSR set to: 0
  3784                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  3785  001C44  0E64               	movlw	low _I2C_CallbackReturnStop
  3786  001C46  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  3787  001C48  0E25               	movlw	high _I2C_CallbackReturnStop
  3788  001C4A  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  3789  001C4C                     
  3790                           ; BSR set to: 0
  3791                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  3792  001C4C  0E00               	movlw	0
  3793  001C4E  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  3794  001C50  0E00               	movlw	0
  3795  001C52  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  3796  001C54                     
  3797                           ; BSR set to: 0
  3798                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  3799  001C54  0E64               	movlw	low _I2C_CallbackReturnStop
  3800  001C56  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  3801  001C58  0E25               	movlw	high _I2C_CallbackReturnStop
  3802  001C5A  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  3803  001C5C                     
  3804                           ; BSR set to: 0
  3805                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  3806  001C5C  0E00               	movlw	0
  3807  001C5E  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  3808  001C60  0E00               	movlw	0
  3809  001C62  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  3810  001C64                     
  3811                           ; BSR set to: 0
  3812                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  3813  001C64  0E64               	movlw	low _I2C_CallbackReturnStop
  3814  001C66  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  3815  001C68  0E25               	movlw	high _I2C_CallbackReturnStop
  3816  001C6A  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  3817  001C6C                     
  3818                           ; BSR set to: 0
  3819                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  3820  001C6C  0E00               	movlw	0
  3821  001C6E  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  3822  001C70  0E00               	movlw	0
  3823  001C72  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  3824  001C74                     
  3825                           ; BSR set to: 0
  3826                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  3827  001C74  0E60               	movlw	low _I2C_CallbackReturnReset
  3828  001C76  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  3829  001C78  0E25               	movlw	high _I2C_CallbackReturnReset
  3830  001C7A  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  3831  001C7C                     
  3832                           ; BSR set to: 0
  3833                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  3834  001C7C  0E00               	movlw	0
  3835  001C7E  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  3836  001C80  0E00               	movlw	0
  3837  001C82  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  3838  001C84                     
  3839                           ; BSR set to: 0
  3840                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  3841  001C84  ECBE  F012         	call	_I2C_MasterClearIrq	;wreg free
  3842  001C88                     
  3843                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  3844  001C88  ECC5  F011         	call	_I2C_MasterOpen	;wreg free
  3845  001C8C                     
  3846                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  3847  001C8C  0E00               	movlw	0
  3848  001C8E  6E06               	movwf	I2C_Open@returnValue^0,c
  3849  001C90                     l3178:
  3850                           
  3851                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  3852  001C90  5006               	movf	I2C_Open@returnValue^0,w,c
  3853  001C92  0012               	return		;funcret
  3854  001C94                     __end_of_I2C_Open:
  3855                           	callstack 0
  3856                           
  3857 ;; *************** function _I2C_MasterOpen *****************
  3858 ;; Defined at:
  3859 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      _Bool 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;Total ram usage:        0 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    4
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_I2C_Open
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text29
  3888  00238A                     __ptext29:
  3889                           	callstack 0
  3890  00238A                     _I2C_MasterOpen:
  3891                           	callstack 24
  3892  00238A                     
  3893                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
  3894  00238A  BAC6               	btfsc	198,5,c	;volatile
  3895  00238C  EFCA  F011         	goto	u1611
  3896  002390  EFCC  F011         	goto	u1610
  3897  002394                     u1611:
  3898  002394  EFD5  F011         	goto	l378
  3899  002398                     u1610:
  3900  002398                     
  3901                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
  3902  002398  0E00               	movlw	0
  3903  00239A  6EC7               	movwf	199,c	;volatile
  3904                           
  3905                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
  3906  00239C  0E08               	movlw	8
  3907  00239E  6EC6               	movwf	198,c	;volatile
  3908                           
  3909                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
  3910  0023A0  0E00               	movlw	0
  3911  0023A2  6EC5               	movwf	197,c	;volatile
  3912                           
  3913                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
  3914  0023A4  0E13               	movlw	19
  3915  0023A6  6EC8               	movwf	200,c	;volatile
  3916  0023A8                     
  3917                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
  3918  0023A8  8AC6               	bsf	198,5,c	;volatile
  3919  0023AA                     l378:
  3920  0023AA  0012               	return		;funcret
  3921  0023AC                     __end_of_I2C_MasterOpen:
  3922                           	callstack 0
  3923                           
  3924 ;; *************** function _I2C_MasterWrite *****************
  3925 ;; Defined at:
  3926 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;		None
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      enum E353
  3933 ;; Registers used:
  3934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;Total ram usage:        0 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:   11
  3947 ;; This function calls:
  3948 ;;		_I2C_MasterOperation
  3949 ;; This function is called by:
  3950 ;;		_I2C_Read2ByteRegister
  3951 ;;		_I2C_Write2ByteRegister
  3952 ;;		_I2C_Read1ByteRegister
  3953 ;;		_I2C_Write1ByteRegister
  3954 ;;		_I2C_WriteNBytes
  3955 ;;		_I2C_ReadDataBlock
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text30
  3960  0024F0                     __ptext30:
  3961                           	callstack 0
  3962  0024F0                     _I2C_MasterWrite:
  3963                           	callstack 18
  3964  0024F0                     
  3965                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  3966  0024F0  0E00               	movlw	0
  3967  0024F2  EC65  F010         	call	_I2C_MasterOperation
  3968  0024F6  0012               	return		;funcret
  3969  0024F8                     __end_of_I2C_MasterWrite:
  3970                           	callstack 0
  3971                           
  3972 ;; *************** function _I2C_MasterOperation *****************
  3973 ;; Defined at:
  3974 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  read            1    wreg     _Bool 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  read            1   19[COMRAM] _Bool 
  3979 ;;  returnValue     1   20[COMRAM] enum E353
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      enum E353
  3982 ;; Registers used:
  3983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;Total ram usage:        2 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:   10
  3996 ;; This function calls:
  3997 ;;		_I2C_MasterStart
  3998 ;;		_I2C_Poller
  3999 ;; This function is called by:
  4000 ;;		_I2C_MasterWrite
  4001 ;;		_I2C_MasterRead
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text31
  4006  0020CA                     __ptext31:
  4007                           	callstack 0
  4008  0020CA                     _I2C_MasterOperation:
  4009                           	callstack 18
  4010                           
  4011                           ;incstack = 0
  4012                           ;I2C_MasterOperation@read stored from wreg
  4013  0020CA  6E14               	movwf	I2C_MasterOperation@read^0,c
  4014  0020CC                     
  4015                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4016  0020CC  0E01               	movlw	1
  4017  0020CE  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
  4018  0020D0                     
  4019                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  4020  0020D0  0100               	movlb	0	; () banked
  4021  0020D2  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  4022  0020D4  EF6E  F010         	goto	u1621
  4023  0020D8  EF70  F010         	goto	u1620
  4024  0020DC                     u1621:
  4025  0020DC  EF85  F010         	goto	l3068
  4026  0020E0                     u1620:
  4027  0020E0                     
  4028                           ; BSR set to: 0
  4029                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  4030  0020E0  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  4031  0020E2                     
  4032                           ; BSR set to: 0
  4033                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  4034  0020E2  0E00               	movlw	0
  4035  0020E4  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
  4036  0020E6                     
  4037                           ; BSR set to: 0
  4038                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  4039  0020E6  5014               	movf	I2C_MasterOperation@read^0,w,c
  4040  0020E8  B4D8               	btfsc	status,2,c
  4041  0020EA  EF79  F010         	goto	u1631
  4042  0020EE  EF7B  F010         	goto	u1630
  4043  0020F2                     u1631:
  4044  0020F2  EF7F  F010         	goto	l3062
  4045  0020F6                     u1630:
  4046  0020F6                     
  4047                           ; BSR set to: 0
  4048                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  4049  0020F6  0E01               	movlw	1
  4050  0020F8  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4051                           
  4052                           ;mcc_generated_files/i2c_master.c: 235:         }
  4053  0020FA  EF81  F010         	goto	l3064
  4054  0020FE                     l3062:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  4058  0020FE  0E02               	movlw	2
  4059  002100  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4060  002102                     l3064:
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  4064  002102  ECB8  F012         	call	_I2C_MasterStart	;wreg free
  4065  002106                     
  4066                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  4067  002106  ECE5  F011         	call	_I2C_Poller	;wreg free
  4068  00210A                     l3068:
  4069                           
  4070                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  4071  00210A  5015               	movf	I2C_MasterOperation@returnValue^0,w,c
  4072  00210C  0012               	return		;funcret
  4073  00210E                     __end_of_I2C_MasterOperation:
  4074                           	callstack 0
  4075                           
  4076 ;; *************** function _I2C_Poller *****************
  4077 ;; Defined at:
  4078 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;Total ram usage:        0 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    9
  4099 ;; This function calls:
  4100 ;;		_I2C_MasterFsm
  4101 ;;		_I2C_MasterWaitForEvent
  4102 ;; This function is called by:
  4103 ;;		_I2C_MasterOperation
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text32
  4108  0023CA                     __ptext32:
  4109                           	callstack 0
  4110  0023CA                     _I2C_Poller:
  4111                           	callstack 18
  4112  0023CA                     
  4113                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  4114  0023CA  EFEB  F011         	goto	l2974
  4115  0023CE                     l2970:
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  4119  0023CE  EC2B  F012         	call	_I2C_MasterWaitForEvent	;wreg free
  4120  0023D2                     
  4121                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  4122  0023D2  EC43  F00F         	call	_I2C_MasterFsm	;wreg free
  4123  0023D6                     l2974:
  4124                           
  4125                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  4126  0023D6  0100               	movlb	0	; () banked
  4127  0023D8  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  4128  0023DA  EFF1  F011         	goto	u1451
  4129  0023DE  EFF3  F011         	goto	u1450
  4130  0023E2                     u1451:
  4131  0023E2  EFE7  F011         	goto	l2970
  4132  0023E6                     u1450:
  4133  0023E6                     
  4134                           ; BSR set to: 0
  4135  0023E6  0012               	return		;funcret
  4136  0023E8                     __end_of_I2C_Poller:
  4137                           	callstack 0
  4138                           
  4139 ;; *************** function _I2C_MasterWaitForEvent *****************
  4140 ;; Defined at:
  4141 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;		None
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;		None
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      void 
  4148 ;; Registers used:
  4149 ;;		None
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;Total ram usage:        0 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    4
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_I2C_Poller
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text33
  4170  002456                     __ptext33:
  4171                           	callstack 0
  4172  002456                     _I2C_MasterWaitForEvent:
  4173                           	callstack 22
  4174  002456                     l435:
  4175                           
  4176                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
  4177  002456  A69E               	btfss	158,3,c	;volatile
  4178  002458  EF30  F012         	goto	u1231
  4179  00245C  EF32  F012         	goto	u1230
  4180  002460                     u1231:
  4181  002460  EF2B  F012         	goto	l435
  4182  002464                     u1230:
  4183  002464  0012               	return		;funcret
  4184  002466                     __end_of_I2C_MasterWaitForEvent:
  4185                           	callstack 0
  4186                           
  4187 ;; *************** function _I2C_MasterFsm *****************
  4188 ;; Defined at:
  4189 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;		None
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;		None
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;Total ram usage:        2 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    8
  4210 ;; This function calls:
  4211 ;;		_I2C_DO_ADDRESS_NACK
  4212 ;;		_I2C_DO_IDLE
  4213 ;;		_I2C_DO_RCEN
  4214 ;;		_I2C_DO_RESET
  4215 ;;		_I2C_DO_RX
  4216 ;;		_I2C_DO_RX_ACK
  4217 ;;		_I2C_DO_RX_NACK_RESTART
  4218 ;;		_I2C_DO_RX_NACK_STOP
  4219 ;;		_I2C_DO_SEND_ADR_READ
  4220 ;;		_I2C_DO_SEND_ADR_WRITE
  4221 ;;		_I2C_DO_SEND_RESTART
  4222 ;;		_I2C_DO_SEND_RESTART_READ
  4223 ;;		_I2C_DO_SEND_RESTART_WRITE
  4224 ;;		_I2C_DO_SEND_STOP
  4225 ;;		_I2C_DO_TX
  4226 ;;		_I2C_DO_TX_EMPTY
  4227 ;;		_I2C_MasterClearIrq
  4228 ;;		_I2C_MasterIsNack
  4229 ;; This function is called by:
  4230 ;;		_I2C_Poller
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text34
  4235  001E86                     __ptext34:
  4236                           	callstack 0
  4237  001E86                     _I2C_MasterFsm:
  4238                           	callstack 18
  4239  001E86                     
  4240                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  4241  001E86  ECBE  F012         	call	_I2C_MasterClearIrq	;wreg free
  4242  001E8A                     
  4243                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  4244  001E8A  0100               	movlb	0	; () banked
  4245  001E8C  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  4246  001E8E  EF4B  F00F         	goto	u1241
  4247  001E92  EF4D  F00F         	goto	u1240
  4248  001E96                     u1241:
  4249  001E96  EF5A  F00F         	goto	l2858
  4250  001E9A                     u1240:
  4251  001E9A                     
  4252                           ; BSR set to: 0
  4253  001E9A  EC21  F012         	call	_I2C_MasterIsNack	;wreg free
  4254  001E9E  0900               	iorlw	0
  4255  001EA0  B4D8               	btfsc	status,2,c
  4256  001EA2  EF55  F00F         	goto	u1251
  4257  001EA6  EF57  F00F         	goto	u1250
  4258  001EAA                     u1251:
  4259  001EAA  EF5A  F00F         	goto	l2858
  4260  001EAE                     u1250:
  4261  001EAE                     
  4262                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  4263  001EAE  0E0F               	movlw	15
  4264  001EB0  0100               	movlb	0	; () banked
  4265  001EB2  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4266  001EB4                     l2858:
  4267                           
  4268                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
  4269  001EB4  0100               	movlb	0	; () banked
  4270  001EB6  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  4271  001EB8  0D02               	mullw	2
  4272  001EBA  0E01               	movlw	low _fsmStateTable
  4273  001EBC  24F3               	addwf	243,w,c
  4274  001EBE  6EF6               	movwf	tblptrl,c
  4275  001EC0  0E10               	movlw	high _fsmStateTable
  4276  001EC2  20F4               	addwfc	244,w,c
  4277  001EC4  6EF7               	movwf	tblptrh,c
  4278  001EC6                     	if	1	;There are 3 active tblptr bytes
  4279  001EC6  6AF8               	clrf	tblptru,c
  4280  001EC8  0E00               	movlw	low (__mediumconst shr (0+16))
  4281  001ECA  22F8               	addwfc	tblptru,f,c
  4282  001ECC                     	endif
  4283  001ECC  0009               	tblrd		*+
  4284  001ECE  CFF5 F012          	movff	tablat,??_I2C_MasterFsm
  4285  001ED2  0009               	tblrd		*+
  4286  001ED4  CFF5 F013          	movff	tablat,??_I2C_MasterFsm+1
  4287  001ED8  D802               	call	u1268
  4288  001EDA  EF78  F00F         	goto	u1269
  4289  001EDE                     u1268:
  4290  001EDE  0005               	push	
  4291  001EE0  6EFA               	movwf	pclath,c
  4292  001EE2  5012               	movf	??_I2C_MasterFsm^0,w,c
  4293  001EE4  6EFD               	movwf	tosl,c
  4294  001EE6  5013               	movf	(??_I2C_MasterFsm+1)^0,w,c
  4295  001EE8  6EFE               	movwf	tosh,c
  4296  001EEA  6AFF               	clrf	tosu,c
  4297  001EEC  50FA               	movf	pclath,w,c
  4298  001EEE  0012               	return		;indir
  4299  001EF0                     u1269:
  4300  001EF0  0100               	movlb	0	; () banked
  4301  001EF2  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4302  001EF4                     
  4303                           ; BSR set to: 0
  4304  001EF4  0012               	return		;funcret
  4305  001EF6                     __end_of_I2C_MasterFsm:
  4306                           	callstack 0
  4307                           
  4308 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  4309 ;; Defined at:
  4310 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;		None
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;		None
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      enum E3101
  4317 ;; Registers used:
  4318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;Total ram usage:        2 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    7
  4331 ;; This function calls:
  4332 ;;		Absolute function
  4333 ;;		_I2C_CallbackReturnReset
  4334 ;;		_I2C_CallbackReturnStop
  4335 ;;		_I2C_DO_SEND_RESTART
  4336 ;;		_I2C_DO_SEND_STOP
  4337 ;;		_rd1RegCompleteHandler
  4338 ;;		_rd2RegCompleteHandler
  4339 ;;		_rdBlkRegCompleteHandler
  4340 ;;		_wr1RegCompleteHandler
  4341 ;;		_wr2RegCompleteHandler
  4342 ;; This function is called by:
  4343 ;;		_I2C_MasterFsm
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text35
  4348  001F64                     __ptext35:
  4349                           	callstack 0
  4350  001F64                     _I2C_DO_ADDRESS_NACK:
  4351                           	callstack 18
  4352  001F64                     
  4353                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  4354  001F64  0100               	movlb	0	; () banked
  4355  001F66  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  4356  001F68                     
  4357                           ; BSR set to: 0
  4358                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  4359  001F68  0E02               	movlw	2
  4360  001F6A  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  4361                           
  4362                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  4363  001F6C  EFC0  F00F         	goto	l2824
  4364  001F70                     l2814:
  4365                           
  4366                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  4367  001F70  EC8C  F012         	call	_I2C_DO_SEND_RESTART	;wreg free
  4368  001F74  EFE4  F00F         	goto	l357
  4369  001F78                     l2818:
  4370                           
  4371                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  4372  001F78  EC88  F012         	call	_I2C_DO_SEND_STOP	;wreg free
  4373  001F7C  EFE4  F00F         	goto	l357
  4374  001F80                     l2824:
  4375                           
  4376                           ; BSR set to: 0
  4377  001F80  C070  F00E         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  4378  001F84  C071  F00F         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  4379  001F88  D802               	call	u1208
  4380  001F8A  EFD0  F00F         	goto	u1209
  4381  001F8E                     u1208:
  4382  001F8E  0005               	push	
  4383  001F90  6EFA               	movwf	pclath,c
  4384  001F92  5164               	movf	(_I2C_Status+4)& (0+255),w,b
  4385  001F94  6EFD               	movwf	tosl,c
  4386  001F96  5165               	movf	(_I2C_Status+5)& (0+255),w,b
  4387  001F98  6EFE               	movwf	tosh,c
  4388  001F9A  6AFF               	clrf	tosu,c
  4389  001F9C  50FA               	movf	pclath,w,c
  4390  001F9E  0012               	return		;indir
  4391  001FA0                     u1209:
  4392  001FA0  6E10               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  4393  001FA2  6A11               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  4394                           
  4395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4396                           ; Switch size 1, requested type "simple"
  4397                           ; Number of cases is 1, Range of values is 0 to 0
  4398                           ; switch strategies available:
  4399                           ; Name         Instructions Cycles
  4400                           ; simple_byte            4     3 (average)
  4401                           ;	Chosen strategy is simple_byte
  4402  001FA4  5011               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  4403  001FA6  0A00               	xorlw	0	; case 0
  4404  001FA8  B4D8               	btfsc	status,2,c
  4405  001FAA  EFD9  F00F         	goto	l3978
  4406  001FAE  EFBC  F00F         	goto	l2818
  4407  001FB2                     l3978:
  4408                           
  4409                           ; Switch size 1, requested type "simple"
  4410                           ; Number of cases is 2, Range of values is 2 to 3
  4411                           ; switch strategies available:
  4412                           ; Name         Instructions Cycles
  4413                           ; simple_byte            7     4 (average)
  4414                           ;	Chosen strategy is simple_byte
  4415  001FB2  5010               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  4416  001FB4  0A02               	xorlw	2	; case 2
  4417  001FB6  B4D8               	btfsc	status,2,c
  4418  001FB8  EFB8  F00F         	goto	l2814
  4419  001FBC  0A01               	xorlw	1	; case 3
  4420  001FBE  B4D8               	btfsc	status,2,c
  4421  001FC0  EFB8  F00F         	goto	l2814
  4422  001FC4  EFBC  F00F         	goto	l2818
  4423  001FC8                     l357:
  4424  001FC8  0012               	return		;funcret
  4425  001FCA                     __end_of_I2C_DO_ADDRESS_NACK:
  4426                           	callstack 0
  4427                           
  4428 ;; *************** function _I2C_DO_RESET *****************
  4429 ;; Defined at:
  4430 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;		None
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;		None
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      enum E3101
  4437 ;; Registers used:
  4438 ;;		wreg, status,2
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;Total ram usage:        0 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    4
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_I2C_MasterFsm
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text36
  4459  002486                     __ptext36:
  4460                           	callstack 0
  4461  002486                     _I2C_DO_RESET:
  4462                           	callstack 21
  4463  002486                     
  4464                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  4465  002486  0100               	movlb	0	; () banked
  4466  002488  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  4467  00248A                     
  4468                           ; BSR set to: 0
  4469                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  4470  00248A  0E00               	movlw	0
  4471  00248C  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  4472  00248E                     
  4473                           ; BSR set to: 0
  4474                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  4475  00248E  0E0E               	movlw	14
  4476  002490                     
  4477                           ; BSR set to: 0
  4478  002490  0012               	return		;funcret
  4479  002492                     __end_of_I2C_DO_RESET:
  4480                           	callstack 0
  4481                           
  4482 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  4483 ;; Defined at:
  4484 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;		None
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;		None
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      enum E3101
  4491 ;; Registers used:
  4492 ;;		wreg, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;Total ram usage:        0 bytes
  4503 ;; Hardware stack levels used:    1
  4504 ;; Hardware stack levels required when called:    5
  4505 ;; This function calls:
  4506 ;;		_I2C_MasterSendNack
  4507 ;; This function is called by:
  4508 ;;		_I2C_DO_RX
  4509 ;;		_I2C_MasterFsm
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text37
  4514  0024F8                     __ptext37:
  4515                           	callstack 0
  4516  0024F8                     _I2C_DO_RX_NACK_RESTART:
  4517                           	callstack 20
  4518  0024F8                     
  4519                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  4520  0024F8  EC9F  F012         	call	_I2C_MasterSendNack	;wreg free
  4521  0024FC                     
  4522                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  4523  0024FC  0E09               	movlw	9
  4524  0024FE  0012               	return		;funcret
  4525  002500                     __end_of_I2C_DO_RX_NACK_RESTART:
  4526                           	callstack 0
  4527                           
  4528 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  4529 ;; Defined at:
  4530 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      enum E3101
  4537 ;; Registers used:
  4538 ;;		wreg, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;Total ram usage:        0 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    5
  4551 ;; This function calls:
  4552 ;;		_I2C_MasterSendNack
  4553 ;; This function is called by:
  4554 ;;		_I2C_DO_RX
  4555 ;;		_I2C_MasterFsm
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text38
  4560  002500                     __ptext38:
  4561                           	callstack 0
  4562  002500                     _I2C_DO_RX_NACK_STOP:
  4563                           	callstack 20
  4564  002500                     
  4565                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  4566  002500  EC9F  F012         	call	_I2C_MasterSendNack	;wreg free
  4567  002504                     
  4568                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  4569  002504  0E0A               	movlw	10
  4570  002506  0012               	return		;funcret
  4571  002508                     __end_of_I2C_DO_RX_NACK_STOP:
  4572                           	callstack 0
  4573                           
  4574 ;; *************** function _I2C_DO_RX_ACK *****************
  4575 ;; Defined at:
  4576 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      enum E3101
  4583 ;; Registers used:
  4584 ;;		wreg, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;Total ram usage:        0 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    5
  4597 ;; This function calls:
  4598 ;;		_I2C_MasterSendAck
  4599 ;; This function is called by:
  4600 ;;		_I2C_MasterFsm
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text39
  4605  002508                     __ptext39:
  4606                           	callstack 0
  4607  002508                     _I2C_DO_RX_ACK:
  4608                           	callstack 20
  4609  002508                     
  4610                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  4611  002508  EC9C  F012         	call	_I2C_MasterSendAck	;wreg free
  4612  00250C                     
  4613                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  4614  00250C  0E05               	movlw	5
  4615  00250E  0012               	return		;funcret
  4616  002510                     __end_of_I2C_DO_RX_ACK:
  4617                           	callstack 0
  4618                           
  4619 ;; *************** function _I2C_DO_SEND_STOP *****************
  4620 ;; Defined at:
  4621 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;		None
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      enum E3101
  4628 ;; Registers used:
  4629 ;;		wreg, cstack
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;Total ram usage:        0 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:    5
  4642 ;; This function calls:
  4643 ;;		_I2C_MasterStop
  4644 ;; This function is called by:
  4645 ;;		_I2C_DO_TX
  4646 ;;		_I2C_DO_TX_EMPTY
  4647 ;;		_I2C_DO_ADDRESS_NACK
  4648 ;;		_I2C_MasterFsm
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text40
  4653  002510                     __ptext40:
  4654                           	callstack 0
  4655  002510                     _I2C_DO_SEND_STOP:
  4656                           	callstack 19
  4657  002510                     
  4658                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  4659  002510  ECB4  F012         	call	_I2C_MasterStop	;wreg free
  4660  002514                     
  4661                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  4662  002514  0E00               	movlw	0
  4663  002516  0012               	return		;funcret
  4664  002518                     __end_of_I2C_DO_SEND_STOP:
  4665                           	callstack 0
  4666                           
  4667 ;; *************** function _I2C_DO_SEND_RESTART *****************
  4668 ;; Defined at:
  4669 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      enum E3101
  4676 ;; Registers used:
  4677 ;;		wreg, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;Total ram usage:        0 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    5
  4690 ;; This function calls:
  4691 ;;		_I2C_MasterEnableRestart
  4692 ;; This function is called by:
  4693 ;;		_I2C_DO_TX_EMPTY
  4694 ;;		_I2C_DO_ADDRESS_NACK
  4695 ;;		_I2C_MasterFsm
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text41
  4700  002518                     __ptext41:
  4701                           	callstack 0
  4702  002518                     _I2C_DO_SEND_RESTART:
  4703                           	callstack 19
  4704  002518                     
  4705                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  4706  002518  ECB6  F012         	call	_I2C_MasterEnableRestart	;wreg free
  4707  00251C                     
  4708                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  4709  00251C  0E01               	movlw	1
  4710  00251E  0012               	return		;funcret
  4711  002520                     __end_of_I2C_DO_SEND_RESTART:
  4712                           	callstack 0
  4713                           
  4714 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  4715 ;; Defined at:
  4716 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      enum E3101
  4723 ;; Registers used:
  4724 ;;		wreg, cstack
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;Total ram usage:        0 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:    5
  4737 ;; This function calls:
  4738 ;;		_I2C_MasterEnableRestart
  4739 ;; This function is called by:
  4740 ;;		_I2C_DO_TX
  4741 ;;		_I2C_MasterFsm
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text42
  4746  002520                     __ptext42:
  4747                           	callstack 0
  4748  002520                     _I2C_DO_SEND_RESTART_WRITE:
  4749                           	callstack 19
  4750  002520                     
  4751                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  4752  002520  ECB6  F012         	call	_I2C_MasterEnableRestart	;wreg free
  4753  002524                     
  4754                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  4755  002524  0E02               	movlw	2
  4756  002526  0012               	return		;funcret
  4757  002528                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  4758                           	callstack 0
  4759                           
  4760 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  4761 ;; Defined at:
  4762 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;		None
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;		None
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      enum E3101
  4769 ;; Registers used:
  4770 ;;		wreg, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;Total ram usage:        0 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    5
  4783 ;; This function calls:
  4784 ;;		_I2C_MasterEnableRestart
  4785 ;; This function is called by:
  4786 ;;		_I2C_DO_TX
  4787 ;;		_I2C_MasterFsm
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text43
  4792  002528                     __ptext43:
  4793                           	callstack 0
  4794  002528                     _I2C_DO_SEND_RESTART_READ:
  4795                           	callstack 19
  4796  002528                     
  4797                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  4798  002528  ECB6  F012         	call	_I2C_MasterEnableRestart	;wreg free
  4799  00252C                     
  4800                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  4801  00252C  0E01               	movlw	1
  4802  00252E  0012               	return		;funcret
  4803  002530                     __end_of_I2C_DO_SEND_RESTART_READ:
  4804                           	callstack 0
  4805                           
  4806 ;; *************** function _I2C_DO_RCEN *****************
  4807 ;; Defined at:
  4808 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  1    wreg      enum E3101
  4815 ;; Registers used:
  4816 ;;		wreg, cstack
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;Total ram usage:        0 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:    5
  4829 ;; This function calls:
  4830 ;;		_I2C_MasterStartRx
  4831 ;; This function is called by:
  4832 ;;		_I2C_MasterFsm
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text44
  4837  002492                     __ptext44:
  4838                           	callstack 0
  4839  002492                     _I2C_DO_RCEN:
  4840                           	callstack 20
  4841  002492                     
  4842                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  4843  002492  0100               	movlb	0	; () banked
  4844  002494  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  4845  002496                     
  4846                           ; BSR set to: 0
  4847                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  4848  002496  ECAE  F012         	call	_I2C_MasterStartRx	;wreg free
  4849  00249A                     
  4850                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  4851  00249A  0E04               	movlw	4
  4852  00249C  0012               	return		;funcret
  4853  00249E                     __end_of_I2C_DO_RCEN:
  4854                           	callstack 0
  4855                           
  4856 ;; *************** function _I2C_DO_RX *****************
  4857 ;; Defined at:
  4858 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;		None
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;		None
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  1    wreg      enum E3101
  4865 ;; Registers used:
  4866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4876 ;;Total ram usage:        2 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    7
  4879 ;; This function calls:
  4880 ;;		Absolute function
  4881 ;;		_I2C_CallbackReturnReset
  4882 ;;		_I2C_CallbackReturnStop
  4883 ;;		_I2C_DO_RX_NACK_RESTART
  4884 ;;		_I2C_DO_RX_NACK_STOP
  4885 ;;		_I2C_MasterGetRxData
  4886 ;;		_I2C_MasterSendAck
  4887 ;;		_rd1RegCompleteHandler
  4888 ;;		_rd2RegCompleteHandler
  4889 ;;		_rdBlkRegCompleteHandler
  4890 ;;		_wr1RegCompleteHandler
  4891 ;;		_wr2RegCompleteHandler
  4892 ;; This function is called by:
  4893 ;;		_I2C_MasterFsm
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text45
  4898  001ACA                     __ptext45:
  4899                           	callstack 0
  4900  001ACA                     _I2C_DO_RX:
  4901                           	callstack 18
  4902  001ACA                     
  4903                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  4904  001ACA  ECAC  F012         	call	_I2C_MasterGetRxData	;wreg free
  4905  001ACE  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  4906  001AD2  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  4907  001AD6  6EDF               	movwf	indf2,c
  4908  001AD8  0100               	movlb	0	; () banked
  4909  001ADA  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  4910  001ADC  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  4911  001ADE                     
  4912                           ; BSR set to: 0
  4913                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  4914  001ADE  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  4915  001AE0  A0D8               	btfss	status,0,c
  4916  001AE2  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  4917  001AE4  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  4918  001AE6  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  4919  001AE8  B4D8               	btfsc	status,2,c
  4920  001AEA  EF79  F00D         	goto	u1171
  4921  001AEE  EF7B  F00D         	goto	u1170
  4922  001AF2                     u1171:
  4923  001AF2  EF80  F00D         	goto	l294
  4924  001AF6                     u1170:
  4925  001AF6                     
  4926                           ; BSR set to: 0
  4927                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  4928  001AF6  EC9C  F012         	call	_I2C_MasterSendAck	;wreg free
  4929  001AFA                     
  4930                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  4931  001AFA  0E05               	movlw	5
  4932  001AFC  EFB7  F00D         	goto	l295
  4933  001B00                     l294:
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  4937  001B00  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  4938                           
  4939                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  4940  001B02  EF8B  F00D         	goto	l2758
  4941  001B06                     l2748:
  4942                           
  4943                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  4944  001B06  EC7C  F012         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  4945  001B0A  EFB7  F00D         	goto	l295
  4946  001B0E                     l2752:
  4947                           
  4948                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  4949  001B0E  EC80  F012         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  4950  001B12  EFB7  F00D         	goto	l295
  4951  001B16                     l2758:
  4952                           
  4953                           ; BSR set to: 0
  4954  001B16  C06C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  4955  001B1A  C06D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  4956  001B1E  D802               	call	u1188
  4957  001B20  EF9B  F00D         	goto	u1189
  4958  001B24                     u1188:
  4959  001B24  0005               	push	
  4960  001B26  6EFA               	movwf	pclath,c
  4961  001B28  5160               	movf	_I2C_Status& (0+255),w,b
  4962  001B2A  6EFD               	movwf	tosl,c
  4963  001B2C  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  4964  001B2E  6EFE               	movwf	tosh,c
  4965  001B30  6AFF               	clrf	tosu,c
  4966  001B32  50FA               	movf	pclath,w,c
  4967  001B34  0012               	return		;indir
  4968  001B36                     u1189:
  4969  001B36  6E10               	movwf	??_I2C_DO_RX^0,c
  4970  001B38  6A11               	clrf	(??_I2C_DO_RX+1)^0,c
  4971                           
  4972                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4973                           ; Switch size 1, requested type "simple"
  4974                           ; Number of cases is 1, Range of values is 0 to 0
  4975                           ; switch strategies available:
  4976                           ; Name         Instructions Cycles
  4977                           ; simple_byte            4     3 (average)
  4978                           ;	Chosen strategy is simple_byte
  4979  001B3A  5011               	movf	(??_I2C_DO_RX+1)^0,w,c
  4980  001B3C  0A00               	xorlw	0	; case 0
  4981  001B3E  B4D8               	btfsc	status,2,c
  4982  001B40  EFA4  F00D         	goto	l3980
  4983  001B44  EF87  F00D         	goto	l2752
  4984  001B48                     l3980:
  4985                           
  4986                           ; Switch size 1, requested type "simple"
  4987                           ; Number of cases is 4, Range of values is 1 to 4
  4988                           ; switch strategies available:
  4989                           ; Name         Instructions Cycles
  4990                           ; simple_byte           13     7 (average)
  4991                           ;	Chosen strategy is simple_byte
  4992  001B48  5010               	movf	??_I2C_DO_RX^0,w,c
  4993  001B4A  0A01               	xorlw	1	; case 1
  4994  001B4C  B4D8               	btfsc	status,2,c
  4995  001B4E  EF87  F00D         	goto	l2752
  4996  001B52  0A03               	xorlw	3	; case 2
  4997  001B54  B4D8               	btfsc	status,2,c
  4998  001B56  EF83  F00D         	goto	l2748
  4999  001B5A  0A01               	xorlw	1	; case 3
  5000  001B5C  B4D8               	btfsc	status,2,c
  5001  001B5E  EF83  F00D         	goto	l2748
  5002  001B62  0A07               	xorlw	7	; case 4
  5003  001B64  B4D8               	btfsc	status,2,c
  5004  001B66  EF87  F00D         	goto	l2752
  5005  001B6A  EF87  F00D         	goto	l2752
  5006  001B6E                     l295:
  5007  001B6E  0012               	return		;funcret
  5008  001B70                     __end_of_I2C_DO_RX:
  5009                           	callstack 0
  5010                           
  5011 ;; *************** function _I2C_DO_TX *****************
  5012 ;; Defined at:
  5013 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;		None
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      enum E3101
  5020 ;; Registers used:
  5021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;Total ram usage:        2 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    7
  5034 ;; This function calls:
  5035 ;;		Absolute function
  5036 ;;		_I2C_CallbackReturnReset
  5037 ;;		_I2C_CallbackReturnStop
  5038 ;;		_I2C_DO_SEND_RESTART_READ
  5039 ;;		_I2C_DO_SEND_RESTART_WRITE
  5040 ;;		_I2C_DO_SEND_STOP
  5041 ;;		_I2C_MasterIsNack
  5042 ;;		_I2C_MasterSendTxData
  5043 ;;		_rd1RegCompleteHandler
  5044 ;;		_rd2RegCompleteHandler
  5045 ;;		_rdBlkRegCompleteHandler
  5046 ;;		_wr1RegCompleteHandler
  5047 ;;		_wr2RegCompleteHandler
  5048 ;; This function is called by:
  5049 ;;		_I2C_MasterFsm
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text46
  5054  00194A                     __ptext46:
  5055                           	callstack 0
  5056  00194A                     _I2C_DO_TX:
  5057                           	callstack 18
  5058  00194A                     
  5059                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
  5060  00194A  EC21  F012         	call	_I2C_MasterIsNack	;wreg free
  5061  00194E  0900               	iorlw	0
  5062  001950  B4D8               	btfsc	status,2,c
  5063  001952  EFAD  F00C         	goto	u1141
  5064  001956  EFAF  F00C         	goto	u1140
  5065  00195A                     u1141:
  5066  00195A  EFEA  F00C         	goto	l278
  5067  00195E                     u1140:
  5068  00195E  EFBD  F00C         	goto	l2718
  5069  001962                     l2704:
  5070                           
  5071                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  5072  001962  EC94  F012         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  5073  001966  EF06  F00D         	goto	l281
  5074  00196A                     l2708:
  5075                           
  5076                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  5077  00196A  EC90  F012         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  5078  00196E  EF06  F00D         	goto	l281
  5079  001972                     l2712:
  5080                           
  5081                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
  5082  001972  EC88  F012         	call	_I2C_DO_SEND_STOP	;wreg free
  5083  001976  EF06  F00D         	goto	l281
  5084  00197A                     l2718:
  5085  00197A  C072  F00E         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
  5086  00197E  C073  F00F         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
  5087  001982  D802               	call	u1158
  5088  001984  EFCE  F00C         	goto	u1159
  5089  001988                     u1158:
  5090  001988  0005               	push	
  5091  00198A  6EFA               	movwf	pclath,c
  5092  00198C  0100               	movlb	0	; () banked
  5093  00198E  5166               	movf	(_I2C_Status+6)& (0+255),w,b
  5094  001990  6EFD               	movwf	tosl,c
  5095  001992  5167               	movf	(_I2C_Status+7)& (0+255),w,b
  5096  001994  6EFE               	movwf	tosh,c
  5097  001996  6AFF               	clrf	tosu,c
  5098  001998  50FA               	movf	pclath,w,c
  5099  00199A  0012               	return		;indir
  5100  00199C                     u1159:
  5101  00199C  6E10               	movwf	??_I2C_DO_TX^0,c
  5102  00199E  6A11               	clrf	(??_I2C_DO_TX+1)^0,c
  5103                           
  5104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5105                           ; Switch size 1, requested type "simple"
  5106                           ; Number of cases is 1, Range of values is 0 to 0
  5107                           ; switch strategies available:
  5108                           ; Name         Instructions Cycles
  5109                           ; simple_byte            4     3 (average)
  5110                           ;	Chosen strategy is simple_byte
  5111  0019A0  5011               	movf	(??_I2C_DO_TX+1)^0,w,c
  5112  0019A2  0A00               	xorlw	0	; case 0
  5113  0019A4  B4D8               	btfsc	status,2,c
  5114  0019A6  EFD7  F00C         	goto	l3982
  5115  0019AA  EFB9  F00C         	goto	l2712
  5116  0019AE                     l3982:
  5117                           
  5118                           ; Switch size 1, requested type "simple"
  5119                           ; Number of cases is 4, Range of values is 1 to 4
  5120                           ; switch strategies available:
  5121                           ; Name         Instructions Cycles
  5122                           ; simple_byte           13     7 (average)
  5123                           ;	Chosen strategy is simple_byte
  5124  0019AE  5010               	movf	??_I2C_DO_TX^0,w,c
  5125  0019B0  0A01               	xorlw	1	; case 1
  5126  0019B2  B4D8               	btfsc	status,2,c
  5127  0019B4  EFB9  F00C         	goto	l2712
  5128  0019B8  0A03               	xorlw	3	; case 2
  5129  0019BA  B4D8               	btfsc	status,2,c
  5130  0019BC  EFB1  F00C         	goto	l2704
  5131  0019C0  0A01               	xorlw	1	; case 3
  5132  0019C2  B4D8               	btfsc	status,2,c
  5133  0019C4  EFB5  F00C         	goto	l2708
  5134  0019C8  0A07               	xorlw	7	; case 4
  5135  0019CA  B4D8               	btfsc	status,2,c
  5136  0019CC  EFB9  F00C         	goto	l2712
  5137  0019D0  EFB9  F00C         	goto	l2712
  5138  0019D4                     l278:
  5139                           
  5140                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
  5141  0019D4  0100               	movlb	0	; () banked
  5142  0019D6  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5143  0019D8                     
  5144                           ; BSR set to: 0
  5145                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  5146  0019D8  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  5147  0019DC  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  5148  0019E0  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  5149  0019E2  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  5150  0019E4  50DF               	movf	indf2,w,c
  5151  0019E6  EC98  F012         	call	_I2C_MasterSendTxData
  5152  0019EA                     
  5153                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  5154  0019EA  0100               	movlb	0	; () banked
  5155  0019EC  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  5156  0019EE  A0D8               	btfss	status,0,c
  5157  0019F0  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  5158  0019F2  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  5159  0019F4  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  5160  0019F6  A4D8               	btfss	status,2,c
  5161  0019F8  EF00  F00D         	goto	u1161
  5162  0019FC  EF02  F00D         	goto	u1160
  5163  001A00                     u1161:
  5164  001A00  EF05  F00D         	goto	l2726
  5165  001A04                     u1160:
  5166  001A04                     
  5167                           ; BSR set to: 0
  5168  001A04  0E06               	movlw	6
  5169  001A06  EF06  F00D         	goto	l281
  5170  001A0A                     l2726:
  5171                           
  5172                           ; BSR set to: 0
  5173  001A0A  0E03               	movlw	3
  5174  001A0C                     l281:
  5175  001A0C  0012               	return		;funcret
  5176  001A0E                     __end_of_I2C_DO_TX:
  5177                           	callstack 0
  5178                           
  5179 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  5180 ;; Defined at:
  5181 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;		None
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      enum E3101
  5188 ;; Registers used:
  5189 ;;		wreg, status,2, status,0, cstack
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;Total ram usage:        0 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    5
  5202 ;; This function calls:
  5203 ;;		_I2C_MasterSendTxData
  5204 ;; This function is called by:
  5205 ;;		_I2C_MasterFsm
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text47
  5210  002466                     __ptext47:
  5211                           	callstack 0
  5212  002466                     _I2C_DO_SEND_ADR_WRITE:
  5213                           	callstack 20
  5214  002466                     
  5215                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
  5216  002466  0100               	movlb	0	; () banked
  5217  002468  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  5218  00246A                     
  5219                           ; BSR set to: 0
  5220                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
  5221  00246A  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  5222  00246C  257C               	addwf	(_I2C_Status+28)& (0+255),w,b
  5223  00246E  EC98  F012         	call	_I2C_MasterSendTxData
  5224  002472                     
  5225                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
  5226  002472  0E03               	movlw	3
  5227  002474  0012               	return		;funcret
  5228  002476                     __end_of_I2C_DO_SEND_ADR_WRITE:
  5229                           	callstack 0
  5230                           
  5231 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  5232 ;; Defined at:
  5233 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      enum E3101
  5240 ;; Registers used:
  5241 ;;		wreg, status,0, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;Total ram usage:        0 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:    5
  5254 ;; This function calls:
  5255 ;;		_I2C_MasterSendTxData
  5256 ;; This function is called by:
  5257 ;;		_I2C_MasterFsm
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           	psect	text48
  5262  002476                     __ptext48:
  5263                           	callstack 0
  5264  002476                     _I2C_DO_SEND_ADR_READ:
  5265                           	callstack 20
  5266  002476                     
  5267                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
  5268  002476  0100               	movlb	0	; () banked
  5269  002478  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  5270  00247A                     
  5271                           ; BSR set to: 0
  5272                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
  5273  00247A  80D8               	bsf	status,0,c
  5274  00247C  357C               	rlcf	(_I2C_Status+28)& (0+255),w,b
  5275  00247E  EC98  F012         	call	_I2C_MasterSendTxData
  5276  002482                     
  5277                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
  5278  002482  0E05               	movlw	5
  5279  002484  0012               	return		;funcret
  5280  002486                     __end_of_I2C_DO_SEND_ADR_READ:
  5281                           	callstack 0
  5282                           
  5283 ;; *************** function _I2C_DO_IDLE *****************
  5284 ;; Defined at:
  5285 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;		None
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;		None
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      enum E3101
  5292 ;; Registers used:
  5293 ;;		wreg, status,2
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;Total ram usage:        0 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    4
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_I2C_MasterFsm
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text49
  5314  00249E                     __ptext49:
  5315                           	callstack 0
  5316  00249E                     _I2C_DO_IDLE:
  5317                           	callstack 21
  5318  00249E                     
  5319                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
  5320  00249E  0100               	movlb	0	; () banked
  5321  0024A0  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  5322  0024A2                     
  5323                           ; BSR set to: 0
  5324                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
  5325  0024A2  0E00               	movlw	0
  5326  0024A4  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  5327  0024A6                     
  5328                           ; BSR set to: 0
  5329                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
  5330  0024A6  0E0E               	movlw	14
  5331  0024A8                     
  5332                           ; BSR set to: 0
  5333  0024A8  0012               	return		;funcret
  5334  0024AA                     __end_of_I2C_DO_IDLE:
  5335                           	callstack 0
  5336                           
  5337 ;; *************** function _I2C_DO_TX_EMPTY *****************
  5338 ;; Defined at:
  5339 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      enum E3101
  5346 ;; Registers used:
  5347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;Total ram usage:        2 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    7
  5360 ;; This function calls:
  5361 ;;		Absolute function
  5362 ;;		_I2C_CallbackReturnReset
  5363 ;;		_I2C_CallbackReturnStop
  5364 ;;		_I2C_DO_SEND_RESTART
  5365 ;;		_I2C_DO_SEND_STOP
  5366 ;;		_I2C_MasterSetIrq
  5367 ;;		_rd1RegCompleteHandler
  5368 ;;		_rd2RegCompleteHandler
  5369 ;;		_rdBlkRegCompleteHandler
  5370 ;;		_wr1RegCompleteHandler
  5371 ;;		_wr2RegCompleteHandler
  5372 ;; This function is called by:
  5373 ;;		_I2C_MasterFsm
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           	psect	text50
  5378  001D1A                     __ptext50:
  5379                           	callstack 0
  5380  001D1A                     _I2C_DO_TX_EMPTY:
  5381                           	callstack 18
  5382  001D1A                     
  5383                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
  5384  001D1A  0100               	movlb	0	; () banked
  5385  001D1C  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  5386                           
  5387                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5388  001D1E  EF9E  F00E         	goto	l2790
  5389  001D22                     l2774:
  5390                           
  5391                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
  5392  001D22  EC8C  F012         	call	_I2C_DO_SEND_RESTART	;wreg free
  5393  001D26  EFCA  F00E         	goto	l312
  5394  001D2A                     l2778:
  5395                           
  5396                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
  5397  001D2A  ECAA  F012         	call	_I2C_MasterSetIrq	;wreg free
  5398  001D2E                     
  5399                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
  5400  001D2E  0E03               	movlw	3
  5401  001D30  EFCA  F00E         	goto	l312
  5402  001D34                     l2784:
  5403                           
  5404                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
  5405  001D34  EC88  F012         	call	_I2C_DO_SEND_STOP	;wreg free
  5406  001D38  EFCA  F00E         	goto	l312
  5407  001D3C                     l2790:
  5408                           
  5409                           ; BSR set to: 0
  5410  001D3C  C06C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  5411  001D40  C06D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  5412  001D44  D802               	call	u1198
  5413  001D46  EFAE  F00E         	goto	u1199
  5414  001D4A                     u1198:
  5415  001D4A  0005               	push	
  5416  001D4C  6EFA               	movwf	pclath,c
  5417  001D4E  5160               	movf	_I2C_Status& (0+255),w,b
  5418  001D50  6EFD               	movwf	tosl,c
  5419  001D52  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  5420  001D54  6EFE               	movwf	tosh,c
  5421  001D56  6AFF               	clrf	tosu,c
  5422  001D58  50FA               	movf	pclath,w,c
  5423  001D5A  0012               	return		;indir
  5424  001D5C                     u1199:
  5425  001D5C  6E10               	movwf	??_I2C_DO_TX_EMPTY^0,c
  5426  001D5E  6A11               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
  5427                           
  5428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5429                           ; Switch size 1, requested type "simple"
  5430                           ; Number of cases is 1, Range of values is 0 to 0
  5431                           ; switch strategies available:
  5432                           ; Name         Instructions Cycles
  5433                           ; simple_byte            4     3 (average)
  5434                           ;	Chosen strategy is simple_byte
  5435  001D60  5011               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
  5436  001D62  0A00               	xorlw	0	; case 0
  5437  001D64  B4D8               	btfsc	status,2,c
  5438  001D66  EFB7  F00E         	goto	l3984
  5439  001D6A  EF9A  F00E         	goto	l2784
  5440  001D6E                     l3984:
  5441                           
  5442                           ; Switch size 1, requested type "simple"
  5443                           ; Number of cases is 4, Range of values is 1 to 4
  5444                           ; switch strategies available:
  5445                           ; Name         Instructions Cycles
  5446                           ; simple_byte           13     7 (average)
  5447                           ;	Chosen strategy is simple_byte
  5448  001D6E  5010               	movf	??_I2C_DO_TX_EMPTY^0,w,c
  5449  001D70  0A01               	xorlw	1	; case 1
  5450  001D72  B4D8               	btfsc	status,2,c
  5451  001D74  EF9A  F00E         	goto	l2784
  5452  001D78  0A03               	xorlw	3	; case 2
  5453  001D7A  B4D8               	btfsc	status,2,c
  5454  001D7C  EF91  F00E         	goto	l2774
  5455  001D80  0A01               	xorlw	1	; case 3
  5456  001D82  B4D8               	btfsc	status,2,c
  5457  001D84  EF91  F00E         	goto	l2774
  5458  001D88  0A07               	xorlw	7	; case 4
  5459  001D8A  B4D8               	btfsc	status,2,c
  5460  001D8C  EF95  F00E         	goto	l2778
  5461  001D90  EF9A  F00E         	goto	l2784
  5462  001D94                     l312:
  5463  001D94  0012               	return		;funcret
  5464  001D96                     __end_of_I2C_DO_TX_EMPTY:
  5465                           	callstack 0
  5466                           
  5467 ;; *************** function _I2C_MasterSetIrq *****************
  5468 ;; Defined at:
  5469 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;		None
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;		None
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      void 
  5476 ;; Registers used:
  5477 ;;		None
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;Total ram usage:        0 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    4
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_I2C_DO_TX_EMPTY
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text51
  5498  002554                     __ptext51:
  5499                           	callstack 0
  5500  002554                     _I2C_MasterSetIrq:
  5501                           	callstack 20
  5502  002554                     
  5503                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
  5504  002554  869E               	bsf	158,3,c	;volatile
  5505  002556  0012               	return		;funcret
  5506  002558                     __end_of_I2C_MasterSetIrq:
  5507                           	callstack 0
  5508                           
  5509 ;; *************** function _I2C_MasterIsNack *****************
  5510 ;; Defined at:
  5511 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      _Bool 
  5518 ;; Registers used:
  5519 ;;		wreg
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;Total ram usage:        0 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:    4
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_I2C_MasterFsm
  5536 ;;		_I2C_DO_TX
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           	psect	text52
  5541  002442                     __ptext52:
  5542                           	callstack 0
  5543  002442                     _I2C_MasterIsNack:
  5544                           	callstack 21
  5545  002442                     
  5546                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
  5547  002442  BCC5               	btfsc	197,6,c	;volatile
  5548  002444  EF26  F012         	goto	u1091
  5549  002448  EF29  F012         	goto	u1090
  5550  00244C                     u1091:
  5551  00244C  0E01               	movlw	1
  5552  00244E  EF2A  F012         	goto	u1096
  5553  002452                     u1090:
  5554  002452  0E00               	movlw	0
  5555  002454                     u1096:
  5556  002454  0012               	return		;funcret
  5557  002456                     __end_of_I2C_MasterIsNack:
  5558                           	callstack 0
  5559                           
  5560 ;; *************** function _I2C_MasterSendTxData *****************
  5561 ;; Defined at:
  5562 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  data            1    wreg     unsigned char 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  data            1    4[COMRAM] unsigned char 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      void 
  5569 ;; Registers used:
  5570 ;;		wreg
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5579 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5580 ;;Total ram usage:        1 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    4
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_I2C_DO_SEND_ADR_READ
  5587 ;;		_I2C_DO_SEND_ADR_WRITE
  5588 ;;		_I2C_DO_TX
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           	psect	text53
  5593  002530                     __ptext53:
  5594                           	callstack 0
  5595  002530                     _I2C_MasterSendTxData:
  5596                           	callstack 20
  5597                           
  5598                           ;incstack = 0
  5599                           ;I2C_MasterSendTxData@data stored from wreg
  5600  002530  6E05               	movwf	I2C_MasterSendTxData@data^0,c
  5601  002532                     
  5602                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
  5603  002532  C005  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
  5604  002536  0012               	return		;funcret
  5605  002538                     __end_of_I2C_MasterSendTxData:
  5606                           	callstack 0
  5607                           
  5608 ;; *************** function _I2C_MasterSendAck *****************
  5609 ;; Defined at:
  5610 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;		None
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;		None
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		None
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;Total ram usage:        0 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    4
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_I2C_DO_RX
  5635 ;;		_I2C_DO_RX_ACK
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text54
  5640  002538                     __ptext54:
  5641                           	callstack 0
  5642  002538                     _I2C_MasterSendAck:
  5643                           	callstack 20
  5644  002538                     
  5645                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
  5646  002538  9AC5               	bcf	197,5,c	;volatile
  5647                           
  5648                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
  5649  00253A  88C5               	bsf	197,4,c	;volatile
  5650  00253C  0012               	return		;funcret
  5651  00253E                     __end_of_I2C_MasterSendAck:
  5652                           	callstack 0
  5653                           
  5654 ;; *************** function _I2C_MasterGetRxData *****************
  5655 ;; Defined at:
  5656 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;		None
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;		None
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  1    wreg      unsigned char 
  5663 ;; Registers used:
  5664 ;;		wreg, status,2
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;Total ram usage:        0 bytes
  5675 ;; Hardware stack levels used:    1
  5676 ;; Hardware stack levels required when called:    4
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		_I2C_DO_RX
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           	psect	text55
  5685  002558                     __ptext55:
  5686                           	callstack 0
  5687  002558                     _I2C_MasterGetRxData:
  5688                           	callstack 20
  5689  002558                     
  5690                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
  5691  002558  50C9               	movf	201,w,c	;volatile
  5692  00255A  0012               	return		;funcret
  5693  00255C                     __end_of_I2C_MasterGetRxData:
  5694                           	callstack 0
  5695                           
  5696 ;; *************** function _I2C_MasterSendNack *****************
  5697 ;; Defined at:
  5698 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;		None
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;		None
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      void 
  5705 ;; Registers used:
  5706 ;;		None
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;Total ram usage:        0 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; Hardware stack levels required when called:    4
  5719 ;; This function calls:
  5720 ;;		Nothing
  5721 ;; This function is called by:
  5722 ;;		_I2C_DO_RX_NACK_STOP
  5723 ;;		_I2C_DO_RX_NACK_RESTART
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text56
  5728  00253E                     __ptext56:
  5729                           	callstack 0
  5730  00253E                     _I2C_MasterSendNack:
  5731                           	callstack 20
  5732  00253E                     
  5733                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
  5734  00253E  8AC5               	bsf	197,5,c	;volatile
  5735                           
  5736                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
  5737  002540  88C5               	bsf	197,4,c	;volatile
  5738  002542  0012               	return		;funcret
  5739  002544                     __end_of_I2C_MasterSendNack:
  5740                           	callstack 0
  5741                           
  5742 ;; *************** function _I2C_MasterStartRx *****************
  5743 ;; Defined at:
  5744 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;		None
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;		None
  5749 ;; Return value:  Size  Location     Type
  5750 ;;                  1    wreg      void 
  5751 ;; Registers used:
  5752 ;;		None
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;Total ram usage:        0 bytes
  5763 ;; Hardware stack levels used:    1
  5764 ;; Hardware stack levels required when called:    4
  5765 ;; This function calls:
  5766 ;;		Nothing
  5767 ;; This function is called by:
  5768 ;;		_I2C_DO_RCEN
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           	psect	text57
  5773  00255C                     __ptext57:
  5774                           	callstack 0
  5775  00255C                     _I2C_MasterStartRx:
  5776                           	callstack 20
  5777  00255C                     
  5778                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
  5779  00255C  86C5               	bsf	197,3,c	;volatile
  5780  00255E  0012               	return		;funcret
  5781  002560                     __end_of_I2C_MasterStartRx:
  5782                           	callstack 0
  5783                           
  5784 ;; *************** function _I2C_CallbackReturnReset *****************
  5785 ;; Defined at:
  5786 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  funPtr          2   13[COMRAM] PTR void 
  5789 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5790 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      enum E358
  5795 ;; Registers used:
  5796 ;;		wreg
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5802 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;Total ram usage:        2 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    4
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_I2C_Open
  5813 ;;		_I2C_DO_TX
  5814 ;;		_I2C_DO_RX
  5815 ;;		_I2C_DO_TX_EMPTY
  5816 ;;		_I2C_DO_ADDRESS_NACK
  5817 ;;		_I2C_DO_RX_EMPTY
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           	psect	text58
  5822  002560                     __ptext58:
  5823                           	callstack 0
  5824  002560                     _I2C_CallbackReturnReset:
  5825                           	callstack 20
  5826  002560                     
  5827                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
  5828  002560  0E05               	movlw	5
  5829  002562  0012               	return		;funcret
  5830  002564                     __end_of_I2C_CallbackReturnReset:
  5831                           	callstack 0
  5832                           
  5833 ;; *************** function _I2C_CallbackReturnStop *****************
  5834 ;; Defined at:
  5835 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  funPtr          2   13[COMRAM] PTR void 
  5838 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5839 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  1    wreg      enum E358
  5844 ;; Registers used:
  5845 ;;		wreg
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5855 ;;Total ram usage:        2 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    4
  5858 ;; This function calls:
  5859 ;;		Nothing
  5860 ;; This function is called by:
  5861 ;;		_I2C_Open
  5862 ;;		_I2C_SetCallback
  5863 ;;		_I2C_DO_TX
  5864 ;;		_I2C_DO_RX
  5865 ;;		_I2C_DO_TX_EMPTY
  5866 ;;		_I2C_DO_ADDRESS_NACK
  5867 ;;		_I2C_DO_RX_EMPTY
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text59
  5872  002564                     __ptext59:
  5873                           	callstack 0
  5874  002564                     _I2C_CallbackReturnStop:
  5875                           	callstack 20
  5876  002564                     
  5877                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
  5878  002564  0E01               	movlw	1
  5879  002566  0012               	return		;funcret
  5880  002568                     __end_of_I2C_CallbackReturnStop:
  5881                           	callstack 0
  5882                           
  5883 ;; *************** function _rdBlkRegCompleteHandler *****************
  5884 ;; Defined at:
  5885 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;  ptr             2   13[COMRAM] PTR void 
  5888 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5889 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;		None
  5892 ;; Return value:  Size  Location     Type
  5893 ;;                  1    wreg      enum E358
  5894 ;; Registers used:
  5895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;Total ram usage:        2 bytes
  5906 ;; Hardware stack levels used:    1
  5907 ;; Hardware stack levels required when called:    6
  5908 ;; This function calls:
  5909 ;;		_I2C_SetBuffer
  5910 ;;		_I2C_SetDataCompleteCallback
  5911 ;; This function is called by:
  5912 ;;		_I2C_ReadDataBlock
  5913 ;;		_I2C_DO_TX
  5914 ;;		_I2C_DO_RX
  5915 ;;		_I2C_DO_TX_EMPTY
  5916 ;;		_I2C_DO_ADDRESS_NACK
  5917 ;;		_I2C_DO_RX_EMPTY
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text60
  5922  002190                     __ptext60:
  5923                           	callstack 0
  5924  002190                     _rdBlkRegCompleteHandler:
  5925                           	callstack 18
  5926  002190                     
  5927                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  5928  002190  EE20 F002          	lfsr	2,2
  5929  002194  500E               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
  5930  002196  26D9               	addwf	fsr2l,f,c
  5931  002198  500F               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
  5932  00219A  22DA               	addwfc	fsr2h,f,c
  5933  00219C  CFDE F005          	movff	postinc2,I2C_SetBuffer@buffer
  5934  0021A0  CFDD F006          	movff	postdec2,I2C_SetBuffer@buffer+1
  5935  0021A4  C00E  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
  5936  0021A8  C00F  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
  5937  0021AC  CFDE F007          	movff	postinc2,I2C_SetBuffer@bufferSize
  5938  0021B0  CFDD F008          	movff	postdec2,I2C_SetBuffer@bufferSize+1
  5939  0021B4  ECB3  F011         	call	_I2C_SetBuffer	;wreg free
  5940  0021B8                     
  5941                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  5942  0021B8  0E00               	movlw	0
  5943  0021BA  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  5944  0021BC  0E00               	movlw	0
  5945  0021BE  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  5946  0021C0  0E00               	movlw	0
  5947  0021C2  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  5948  0021C4  0E00               	movlw	0
  5949  0021C6  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  5950  0021C8  EC00  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  5951  0021CC                     
  5952                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  5953  0021CC  0E02               	movlw	2
  5954  0021CE  0012               	return		;funcret
  5955  0021D0                     __end_of_rdBlkRegCompleteHandler:
  5956                           	callstack 0
  5957                           
  5958 ;; *************** function _wr1RegCompleteHandler *****************
  5959 ;; Defined at:
  5960 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  ptr             2   13[COMRAM] PTR void 
  5963 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5964 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;		None
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  1    wreg      enum E358
  5969 ;; Registers used:
  5970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5979 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5980 ;;Total ram usage:        2 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:    6
  5983 ;; This function calls:
  5984 ;;		_I2C_SetBuffer
  5985 ;;		_I2C_SetDataCompleteCallback
  5986 ;; This function is called by:
  5987 ;;		_I2C_Write1ByteRegister
  5988 ;;		_I2C_DO_TX
  5989 ;;		_I2C_DO_RX
  5990 ;;		_I2C_DO_TX_EMPTY
  5991 ;;		_I2C_DO_ADDRESS_NACK
  5992 ;;		_I2C_DO_RX_EMPTY
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text61
  5997  002236                     __ptext61:
  5998                           	callstack 0
  5999  002236                     _wr1RegCompleteHandler:
  6000                           	callstack 18
  6001  002236                     
  6002                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  6003  002236  C00E  F005         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6004  00223A  C00F  F006         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6005  00223E  0E00               	movlw	0
  6006  002240  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6007  002242  0E01               	movlw	1
  6008  002244  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6009  002246  ECB3  F011         	call	_I2C_SetBuffer	;wreg free
  6010  00224A                     
  6011                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6012  00224A  0E00               	movlw	0
  6013  00224C  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6014  00224E  0E00               	movlw	0
  6015  002250  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6016  002252  0E00               	movlw	0
  6017  002254  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6018  002256  0E00               	movlw	0
  6019  002258  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6020  00225A  EC00  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  6021  00225E                     
  6022                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  6023  00225E  0E04               	movlw	4
  6024  002260  0012               	return		;funcret
  6025  002262                     __end_of_wr1RegCompleteHandler:
  6026                           	callstack 0
  6027                           
  6028 ;; *************** function _rd2RegCompleteHandler *****************
  6029 ;; Defined at:
  6030 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;  ptr             2   13[COMRAM] PTR void 
  6033 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6034 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;		None
  6037 ;; Return value:  Size  Location     Type
  6038 ;;                  1    wreg      enum E358
  6039 ;; Registers used:
  6040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6046 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6049 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6050 ;;Total ram usage:        2 bytes
  6051 ;; Hardware stack levels used:    1
  6052 ;; Hardware stack levels required when called:    6
  6053 ;; This function calls:
  6054 ;;		_I2C_SetBuffer
  6055 ;;		_I2C_SetDataCompleteCallback
  6056 ;; This function is called by:
  6057 ;;		_I2C_Read2ByteRegister
  6058 ;;		_I2C_DO_TX
  6059 ;;		_I2C_DO_RX
  6060 ;;		_I2C_DO_TX_EMPTY
  6061 ;;		_I2C_DO_ADDRESS_NACK
  6062 ;;		_I2C_DO_RX_EMPTY
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text62
  6067  002262                     __ptext62:
  6068                           	callstack 0
  6069  002262                     _rd2RegCompleteHandler:
  6070                           	callstack 18
  6071  002262                     
  6072                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  6073  002262  C00E  F005         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6074  002266  C00F  F006         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6075  00226A  0E00               	movlw	0
  6076  00226C  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6077  00226E  0E02               	movlw	2
  6078  002270  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6079  002272  ECB3  F011         	call	_I2C_SetBuffer	;wreg free
  6080  002276                     
  6081                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6082  002276  0E00               	movlw	0
  6083  002278  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6084  00227A  0E00               	movlw	0
  6085  00227C  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6086  00227E  0E00               	movlw	0
  6087  002280  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6088  002282  0E00               	movlw	0
  6089  002284  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6090  002286  EC00  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  6091  00228A                     
  6092                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  6093  00228A  0E02               	movlw	2
  6094  00228C  0012               	return		;funcret
  6095  00228E                     __end_of_rd2RegCompleteHandler:
  6096                           	callstack 0
  6097                           
  6098 ;; *************** function _rd1RegCompleteHandler *****************
  6099 ;; Defined at:
  6100 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  ptr             2   13[COMRAM] PTR void 
  6103 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6104 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;		None
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      enum E358
  6109 ;; Registers used:
  6110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;Total ram usage:        2 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    6
  6123 ;; This function calls:
  6124 ;;		_I2C_SetBuffer
  6125 ;;		_I2C_SetDataCompleteCallback
  6126 ;; This function is called by:
  6127 ;;		_I2C_Read1ByteRegister
  6128 ;;		_I2C_DO_TX
  6129 ;;		_I2C_DO_RX
  6130 ;;		_I2C_DO_TX_EMPTY
  6131 ;;		_I2C_DO_ADDRESS_NACK
  6132 ;;		_I2C_DO_RX_EMPTY
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           	psect	text63
  6137  00228E                     __ptext63:
  6138                           	callstack 0
  6139  00228E                     _rd1RegCompleteHandler:
  6140                           	callstack 18
  6141  00228E                     
  6142                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  6143  00228E  C00E  F005         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6144  002292  C00F  F006         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6145  002296  0E00               	movlw	0
  6146  002298  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6147  00229A  0E01               	movlw	1
  6148  00229C  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6149  00229E  ECB3  F011         	call	_I2C_SetBuffer	;wreg free
  6150  0022A2                     
  6151                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6152  0022A2  0E00               	movlw	0
  6153  0022A4  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6154  0022A6  0E00               	movlw	0
  6155  0022A8  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6156  0022AA  0E00               	movlw	0
  6157  0022AC  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6158  0022AE  0E00               	movlw	0
  6159  0022B0  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6160  0022B2  EC00  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  6161  0022B6                     
  6162                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  6163  0022B6  0E02               	movlw	2
  6164  0022B8  0012               	return		;funcret
  6165  0022BA                     __end_of_rd1RegCompleteHandler:
  6166                           	callstack 0
  6167                           
  6168 ;; *************** function _wr2RegCompleteHandler *****************
  6169 ;; Defined at:
  6170 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;  ptr             2   13[COMRAM] PTR void 
  6173 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6174 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;		None
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  1    wreg      enum E358
  6179 ;; Registers used:
  6180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;Total ram usage:        2 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; Hardware stack levels required when called:    6
  6193 ;; This function calls:
  6194 ;;		_I2C_SetBuffer
  6195 ;;		_I2C_SetDataCompleteCallback
  6196 ;; This function is called by:
  6197 ;;		_I2C_Write2ByteRegister
  6198 ;;		_I2C_DO_TX
  6199 ;;		_I2C_DO_RX
  6200 ;;		_I2C_DO_TX_EMPTY
  6201 ;;		_I2C_DO_ADDRESS_NACK
  6202 ;;		_I2C_DO_RX_EMPTY
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           	psect	text64
  6207  0022BA                     __ptext64:
  6208                           	callstack 0
  6209  0022BA                     _wr2RegCompleteHandler:
  6210                           	callstack 18
  6211  0022BA                     
  6212                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  6213  0022BA  C00E  F005         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6214  0022BE  C00F  F006         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6215  0022C2  0E00               	movlw	0
  6216  0022C4  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6217  0022C6  0E02               	movlw	2
  6218  0022C8  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6219  0022CA  ECB3  F011         	call	_I2C_SetBuffer	;wreg free
  6220  0022CE                     
  6221                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6222  0022CE  0E00               	movlw	0
  6223  0022D0  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6224  0022D2  0E00               	movlw	0
  6225  0022D4  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6226  0022D6  0E00               	movlw	0
  6227  0022D8  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6228  0022DA  0E00               	movlw	0
  6229  0022DC  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6230  0022DE  EC00  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  6231  0022E2                     
  6232                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  6233  0022E2  0E04               	movlw	4
  6234  0022E4  0012               	return		;funcret
  6235  0022E6                     __end_of_wr2RegCompleteHandler:
  6236                           	callstack 0
  6237                           
  6238 ;; *************** function _I2C_SetDataCompleteCallback *****************
  6239 ;; Defined at:
  6240 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  6243 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6244 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6245 ;;  ptr             2   11[COMRAM] PTR void 
  6246 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6247 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;		None
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  1    wreg      void 
  6252 ;; Registers used:
  6253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;Total ram usage:        4 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; Hardware stack levels required when called:    5
  6266 ;; This function calls:
  6267 ;;		_I2C_SetCallback
  6268 ;; This function is called by:
  6269 ;;		_I2C_Read2ByteRegister
  6270 ;;		_I2C_Write2ByteRegister
  6271 ;;		_rd1RegCompleteHandler
  6272 ;;		_rd2RegCompleteHandler
  6273 ;;		_wr1RegCompleteHandler
  6274 ;;		_wr2RegCompleteHandler
  6275 ;;		_rdBlkRegCompleteHandler
  6276 ;;		_I2C_Read1ByteRegister
  6277 ;;		_I2C_Write1ByteRegister
  6278 ;;		_I2C_ReadDataBlock
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text65
  6283  002400                     __ptext65:
  6284                           	callstack 0
  6285  002400                     _I2C_SetDataCompleteCallback:
  6286                           	callstack 24
  6287  002400                     
  6288                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  6289  002400  C00A  F005         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  6290  002404  C00B  F006         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  6291  002408  C00C  F007         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  6292  00240C  C00D  F008         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  6293  002410  0E00               	movlw	0
  6294  002412  ECCB  F00E         	call	_I2C_SetCallback
  6295  002416  0012               	return		;funcret
  6296  002418                     __end_of_I2C_SetDataCompleteCallback:
  6297                           	callstack 0
  6298                           
  6299 ;; *************** function _I2C_SetCallback *****************
  6300 ;; Defined at:
  6301 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  idx             1    wreg     enum E3119
  6304 ;;  cb              2    4[COMRAM] PTR FTN(PTR void ,)enum 
  6305 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6306 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6307 ;;  ptr             2    6[COMRAM] PTR void 
  6308 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6309 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;  idx             1    8[COMRAM] enum E3119
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      void 
  6314 ;; Registers used:
  6315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6321 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;Total ram usage:        5 bytes
  6326 ;; Hardware stack levels used:    1
  6327 ;; Hardware stack levels required when called:    4
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_I2C_SetDataCompleteCallback
  6332 ;;		_I2C_SetAddressNackCallback
  6333 ;;		_I2C_SetWriteCollisionCallback
  6334 ;;		_I2C_SetDataNackCallback
  6335 ;;		_I2C_SetTimeoutCallback
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           	psect	text66
  6340  001D96                     __ptext66:
  6341                           	callstack 0
  6342  001D96                     _I2C_SetCallback:
  6343                           	callstack 24
  6344                           
  6345                           ;incstack = 0
  6346                           ;I2C_SetCallback@idx stored from wreg
  6347  001D96  6E09               	movwf	I2C_SetCallback@idx^0,c
  6348  001D98                     
  6349                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
  6350  001D98  5005               	movf	I2C_SetCallback@cb^0,w,c
  6351  001D9A  1006               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
  6352  001D9C  B4D8               	btfsc	status,2,c
  6353  001D9E  EFD3  F00E         	goto	u1041
  6354  001DA2  EFD5  F00E         	goto	u1040
  6355  001DA6                     u1041:
  6356  001DA6  EFEF  F00E         	goto	l2522
  6357  001DAA                     u1040:
  6358  001DAA                     
  6359                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
  6360  001DAA  5009               	movf	I2C_SetCallback@idx^0,w,c
  6361  001DAC  0D02               	mullw	2
  6362  001DAE  0E60               	movlw	low _I2C_Status
  6363  001DB0  24F3               	addwf	243,w,c
  6364  001DB2  6ED9               	movwf	fsr2l,c
  6365  001DB4  0E00               	movlw	high _I2C_Status
  6366  001DB6  20F4               	addwfc	prodh,w,c
  6367  001DB8  6EDA               	movwf	fsr2h,c
  6368  001DBA  C005  FFDE         	movff	I2C_SetCallback@cb,postinc2
  6369  001DBE  C006  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  6370                           
  6371                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
  6372  001DC2  5009               	movf	I2C_SetCallback@idx^0,w,c
  6373  001DC4  0D02               	mullw	2
  6374  001DC6  0E6C               	movlw	low (_I2C_Status+12)
  6375  001DC8  24F3               	addwf	243,w,c
  6376  001DCA  6ED9               	movwf	fsr2l,c
  6377  001DCC  0E00               	movlw	high (_I2C_Status+12)
  6378  001DCE  20F4               	addwfc	prodh,w,c
  6379  001DD0  6EDA               	movwf	fsr2h,c
  6380  001DD2  C007  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  6381  001DD6  C008  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  6382                           
  6383                           ;mcc_generated_files/i2c_master.c: 304:     }
  6384  001DDA  EF07  F00F         	goto	l256
  6385  001DDE                     l2522:
  6386                           
  6387                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  6388  001DDE  5009               	movf	I2C_SetCallback@idx^0,w,c
  6389  001DE0  0D02               	mullw	2
  6390  001DE2  0E60               	movlw	low _I2C_Status
  6391  001DE4  24F3               	addwf	243,w,c
  6392  001DE6  6ED9               	movwf	fsr2l,c
  6393  001DE8  0E00               	movlw	high _I2C_Status
  6394  001DEA  20F4               	addwfc	prodh,w,c
  6395  001DEC  6EDA               	movwf	fsr2h,c
  6396  001DEE  0E64               	movlw	low _I2C_CallbackReturnStop
  6397  001DF0  6EDE               	movwf	postinc2,c
  6398  001DF2  0E25               	movlw	high _I2C_CallbackReturnStop
  6399  001DF4  6EDD               	movwf	postdec2,c
  6400                           
  6401                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  6402  001DF6  5009               	movf	I2C_SetCallback@idx^0,w,c
  6403  001DF8  0D02               	mullw	2
  6404  001DFA  0E6C               	movlw	low (_I2C_Status+12)
  6405  001DFC  24F3               	addwf	243,w,c
  6406  001DFE  6ED9               	movwf	fsr2l,c
  6407  001E00  0E00               	movlw	high (_I2C_Status+12)
  6408  001E02  20F4               	addwfc	prodh,w,c
  6409  001E04  6EDA               	movwf	fsr2h,c
  6410  001E06  0E00               	movlw	0
  6411  001E08  6EDE               	movwf	postinc2,c
  6412  001E0A  0E00               	movlw	0
  6413  001E0C  6EDD               	movwf	postdec2,c
  6414  001E0E                     l256:
  6415  001E0E  0012               	return		;funcret
  6416  001E10                     __end_of_I2C_SetCallback:
  6417                           	callstack 0
  6418                           
  6419 ;; *************** function _I2C_SetBuffer *****************
  6420 ;; Defined at:
  6421 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  buffer          2    4[COMRAM] PTR void 
  6424 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  6425 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  6426 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  6427 ;;  bufferSize      2    6[COMRAM] unsigned int 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1    wreg      void 
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, status,0
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6439 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6442 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6443 ;;Total ram usage:        4 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:    4
  6446 ;; This function calls:
  6447 ;;		Nothing
  6448 ;; This function is called by:
  6449 ;;		_I2C_Read2ByteRegister
  6450 ;;		_I2C_Write2ByteRegister
  6451 ;;		_rd1RegCompleteHandler
  6452 ;;		_rd2RegCompleteHandler
  6453 ;;		_wr1RegCompleteHandler
  6454 ;;		_wr2RegCompleteHandler
  6455 ;;		_rdBlkRegCompleteHandler
  6456 ;;		_I2C_Read1ByteRegister
  6457 ;;		_I2C_Write1ByteRegister
  6458 ;;		_I2C_WriteNBytes
  6459 ;;		_I2C_ReadNBytes
  6460 ;;		_I2C_ReadDataBlock
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text67
  6465  002366                     __ptext67:
  6466                           	callstack 0
  6467  002366                     _I2C_SetBuffer:
  6468                           	callstack 25
  6469  002366                     
  6470                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
  6471  002366  0100               	movlb	0	; () banked
  6472  002368  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  6473  00236A  EFB9  F011         	goto	u1081
  6474  00236E  EFBB  F011         	goto	u1080
  6475  002372                     u1081:
  6476  002372  EFC4  F011         	goto	l236
  6477  002376                     u1080:
  6478  002376                     
  6479                           ; BSR set to: 0
  6480                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
  6481  002376  C005  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  6482  00237A  C006  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  6483  00237E                     
  6484                           ; BSR set to: 0
  6485                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
  6486  00237E  C007  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  6487  002382  C008  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  6488  002386                     
  6489                           ; BSR set to: 0
  6490                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
  6491  002386  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  6492  002388                     l236:
  6493                           
  6494                           ; BSR set to: 0
  6495  002388  0012               	return		;funcret
  6496  00238A                     __end_of_I2C_SetBuffer:
  6497                           	callstack 0
  6498                           
  6499 ;; *************** function _I2C_MasterStop *****************
  6500 ;; Defined at:
  6501 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		None
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;Total ram usage:        0 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    4
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_I2C_DO_SEND_STOP
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	text68
  6530  002568                     __ptext68:
  6531                           	callstack 0
  6532  002568                     _I2C_MasterStop:
  6533                           	callstack 19
  6534  002568                     
  6535                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
  6536  002568  84C5               	bsf	197,2,c	;volatile
  6537  00256A  0012               	return		;funcret
  6538  00256C                     __end_of_I2C_MasterStop:
  6539                           	callstack 0
  6540                           
  6541 ;; *************** function _I2C_MasterEnableRestart *****************
  6542 ;; Defined at:
  6543 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;		None
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;		None
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  1    wreg      void 
  6550 ;; Registers used:
  6551 ;;		None
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;Total ram usage:        0 bytes
  6562 ;; Hardware stack levels used:    1
  6563 ;; Hardware stack levels required when called:    4
  6564 ;; This function calls:
  6565 ;;		Nothing
  6566 ;; This function is called by:
  6567 ;;		_I2C_DO_SEND_RESTART_READ
  6568 ;;		_I2C_DO_SEND_RESTART_WRITE
  6569 ;;		_I2C_DO_SEND_RESTART
  6570 ;;		_I2C_DO_RX_EMPTY
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text69
  6575  00256C                     __ptext69:
  6576                           	callstack 0
  6577  00256C                     _I2C_MasterEnableRestart:
  6578                           	callstack 19
  6579  00256C                     
  6580                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
  6581  00256C  82C5               	bsf	197,1,c	;volatile
  6582  00256E  0012               	return		;funcret
  6583  002570                     __end_of_I2C_MasterEnableRestart:
  6584                           	callstack 0
  6585                           
  6586 ;; *************** function _I2C_MasterStart *****************
  6587 ;; Defined at:
  6588 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;		None
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      void 
  6595 ;; Registers used:
  6596 ;;		None
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;Total ram usage:        0 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; Hardware stack levels required when called:    4
  6609 ;; This function calls:
  6610 ;;		Nothing
  6611 ;; This function is called by:
  6612 ;;		_I2C_MasterOperation
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text70
  6617  002570                     __ptext70:
  6618                           	callstack 0
  6619  002570                     _I2C_MasterStart:
  6620                           	callstack 23
  6621  002570                     
  6622                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
  6623  002570  80C5               	bsf	197,0,c	;volatile
  6624  002572  0012               	return		;funcret
  6625  002574                     __end_of_I2C_MasterStart:
  6626                           	callstack 0
  6627                           
  6628 ;; *************** function _I2C_Close *****************
  6629 ;; Defined at:
  6630 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;		None
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;  returnValue     1    4[COMRAM] enum E353
  6635 ;; Return value:  Size  Location     Type
  6636 ;;                  1    wreg      enum E353
  6637 ;; Registers used:
  6638 ;;		wreg, status,2, cstack
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;Total ram usage:        1 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; Hardware stack levels required when called:    5
  6651 ;; This function calls:
  6652 ;;		_I2C_MasterClearIrq
  6653 ;;		_I2C_MasterClose
  6654 ;;		_I2C_MasterDisableIrq
  6655 ;; This function is called by:
  6656 ;;		_I2C_Read2ByteRegister
  6657 ;;		_I2C_Write2ByteRegister
  6658 ;;		_I2C_Read1ByteRegister
  6659 ;;		_I2C_Write1ByteRegister
  6660 ;;		_I2C_WriteNBytes
  6661 ;;		_I2C_ReadNBytes
  6662 ;;		_I2C_ReadDataBlock
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666                           	psect	text71
  6667  0022E6                     __ptext71:
  6668                           	callstack 0
  6669  0022E6                     _I2C_Close:
  6670                           	callstack 24
  6671  0022E6                     
  6672                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
  6673  0022E6  0E01               	movlw	1
  6674  0022E8  6E05               	movwf	I2C_Close@returnValue^0,c
  6675  0022EA                     
  6676                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
  6677  0022EA  0100               	movlb	0	; () banked
  6678  0022EC  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  6679  0022EE  EF7B  F011         	goto	u1701
  6680  0022F2  EF7D  F011         	goto	u1700
  6681  0022F6                     u1701:
  6682  0022F6  EF87  F011         	goto	l3198
  6683  0022FA                     u1700:
  6684  0022FA                     
  6685                           ; BSR set to: 0
  6686                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
  6687  0022FA  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  6688                           
  6689                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
  6690  0022FC  697C               	setf	(_I2C_Status+28)& (0+255),b
  6691  0022FE                     
  6692                           ; BSR set to: 0
  6693                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
  6694  0022FE  ECBE  F012         	call	_I2C_MasterClearIrq	;wreg free
  6695                           
  6696                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
  6697  002302  ECBA  F012         	call	_I2C_MasterDisableIrq	;wreg free
  6698                           
  6699                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
  6700  002306  ECBC  F012         	call	_I2C_MasterClose	;wreg free
  6701  00230A                     
  6702                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
  6703  00230A  C082  F005         	movff	_I2C_Status+34,I2C_Close@returnValue
  6704  00230E                     l3198:
  6705                           
  6706                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
  6707  00230E  5005               	movf	I2C_Close@returnValue^0,w,c
  6708  002310  0012               	return		;funcret
  6709  002312                     __end_of_I2C_Close:
  6710                           	callstack 0
  6711                           
  6712 ;; *************** function _I2C_MasterDisableIrq *****************
  6713 ;; Defined at:
  6714 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;		None
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		None
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;Total ram usage:        0 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:    4
  6735 ;; This function calls:
  6736 ;;		Nothing
  6737 ;; This function is called by:
  6738 ;;		_I2C_Close
  6739 ;;		_I2C_SetTimeOut
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text72
  6744  002574                     __ptext72:
  6745                           	callstack 0
  6746  002574                     _I2C_MasterDisableIrq:
  6747                           	callstack 24
  6748  002574                     
  6749                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
  6750  002574  969D               	bcf	157,3,c	;volatile
  6751  002576  0012               	return		;funcret
  6752  002578                     __end_of_I2C_MasterDisableIrq:
  6753                           	callstack 0
  6754                           
  6755 ;; *************** function _I2C_MasterClose *****************
  6756 ;; Defined at:
  6757 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;		None
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;		None
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  1    wreg      void 
  6764 ;; Registers used:
  6765 ;;		None
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6775 ;;Total ram usage:        0 bytes
  6776 ;; Hardware stack levels used:    1
  6777 ;; Hardware stack levels required when called:    4
  6778 ;; This function calls:
  6779 ;;		Nothing
  6780 ;; This function is called by:
  6781 ;;		_I2C_Close
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           	psect	text73
  6786  002578                     __ptext73:
  6787                           	callstack 0
  6788  002578                     _I2C_MasterClose:
  6789                           	callstack 24
  6790  002578                     
  6791                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
  6792  002578  9AC6               	bcf	198,5,c	;volatile
  6793  00257A  0012               	return		;funcret
  6794  00257C                     __end_of_I2C_MasterClose:
  6795                           	callstack 0
  6796                           
  6797 ;; *************** function _I2C_MasterClearIrq *****************
  6798 ;; Defined at:
  6799 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;		None
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;		None
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  1    wreg      void 
  6806 ;; Registers used:
  6807 ;;		None
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6817 ;;Total ram usage:        0 bytes
  6818 ;; Hardware stack levels used:    1
  6819 ;; Hardware stack levels required when called:    4
  6820 ;; This function calls:
  6821 ;;		Nothing
  6822 ;; This function is called by:
  6823 ;;		_I2C_Open
  6824 ;;		_I2C_Close
  6825 ;;		_I2C_MasterFsm
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text74
  6830  00257C                     __ptext74:
  6831                           	callstack 0
  6832  00257C                     _I2C_MasterClearIrq:
  6833                           	callstack 24
  6834  00257C                     
  6835                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
  6836  00257C  969E               	bcf	158,3,c	;volatile
  6837  00257E  0012               	return		;funcret
  6838  002580                     __end_of_I2C_MasterClearIrq:
  6839                           	callstack 0
  6840                           
  6841 ;; *************** function _INTERRUPT_InterruptManager *****************
  6842 ;; Defined at:
  6843 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;		None
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6859 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6860 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;Total ram usage:        4 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    3
  6864 ;; This function calls:
  6865 ;;		Absolute function
  6866 ;;		_EUSART_Receive_ISR
  6867 ;;		_EUSART_Transmit_ISR
  6868 ;; This function is called by:
  6869 ;;		Interrupt level 2
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873                           	psect	intcode
  6874  000008                     __pintcode:
  6875                           	callstack 0
  6876  000008                     _INTERRUPT_InterruptManager:
  6877                           	callstack 18
  6878                           
  6879                           ;incstack = 0
  6880  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6881  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  6882  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6883  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6884  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6885  00001A                     
  6886                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6887  00001A  ACF2               	btfss	242,6,c	;volatile
  6888  00001C  EF12  F000         	goto	i2u198_41
  6889  000020  EF14  F000         	goto	i2u198_40
  6890  000024                     i2u198_41:
  6891  000024  EF4E  F000         	goto	i2l671
  6892  000028                     i2u198_40:
  6893  000028                     
  6894                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  6895  000028  A89D               	btfss	157,4,c	;volatile
  6896  00002A  EF19  F000         	goto	i2u199_41
  6897  00002E  EF1B  F000         	goto	i2u199_40
  6898  000032                     i2u199_41:
  6899  000032  EF31  F000         	goto	i2l666
  6900  000036                     i2u199_40:
  6901  000036  A89E               	btfss	158,4,c	;volatile
  6902  000038  EF20  F000         	goto	i2u200_41
  6903  00003C  EF22  F000         	goto	i2u200_40
  6904  000040                     i2u200_41:
  6905  000040  EF31  F000         	goto	i2l666
  6906  000044                     i2u200_40:
  6907  000044                     
  6908                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_TxDefaultInterruptHandler();
  6909  000044  D802               	call	i2u201_48
  6910  000046  EF2F  F000         	goto	i2u201_49
  6911  00004A                     i2u201_48:
  6912  00004A  0005               	push	
  6913  00004C  6EFA               	movwf	pclath,c
  6914  00004E  0100               	movlb	0	; () banked
  6915  000050  51E5               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
  6916  000052  6EFD               	movwf	tosl,c
  6917  000054  51E6               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
  6918  000056  6EFE               	movwf	tosh,c
  6919  000058  6AFF               	clrf	tosu,c
  6920  00005A  50FA               	movf	pclath,w,c
  6921  00005C  0012               	return		;indir
  6922  00005E                     i2u201_49:
  6923                           
  6924                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  6925  00005E  EF4E  F000         	goto	i2l671
  6926  000062                     i2l666:
  6927  000062  AA9D               	btfss	157,5,c	;volatile
  6928  000064  EF36  F000         	goto	i2u202_41
  6929  000068  EF38  F000         	goto	i2u202_40
  6930  00006C                     i2u202_41:
  6931  00006C  EF4E  F000         	goto	i2l667
  6932  000070                     i2u202_40:
  6933  000070  AA9E               	btfss	158,5,c	;volatile
  6934  000072  EF3D  F000         	goto	i2u203_41
  6935  000076  EF3F  F000         	goto	i2u203_40
  6936  00007A                     i2u203_41:
  6937  00007A  EF4E  F000         	goto	i2l667
  6938  00007E                     i2u203_40:
  6939  00007E                     
  6940                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_RxDefaultInterruptHandler();
  6941  00007E  D802               	call	i2u204_48
  6942  000080  EF4C  F000         	goto	i2u204_49
  6943  000084                     i2u204_48:
  6944  000084  0005               	push	
  6945  000086  6EFA               	movwf	pclath,c
  6946  000088  0100               	movlb	0	; () banked
  6947  00008A  51E3               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
  6948  00008C  6EFD               	movwf	tosl,c
  6949  00008E  51E4               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
  6950  000090  6EFE               	movwf	tosh,c
  6951  000092  6AFF               	clrf	tosu,c
  6952  000094  50FA               	movf	pclath,w,c
  6953  000096  0012               	return		;indir
  6954  000098                     i2u204_49:
  6955                           
  6956                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  6957  000098  EF4E  F000         	goto	i2l671
  6958  00009C                     i2l667:
  6959  00009C                     i2l671:
  6960  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6961  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6962  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6963  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6964  0000AC  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6965  0000AE  0011               	retfie		f
  6966  0000B0                     __end_of_INTERRUPT_InterruptManager:
  6967                           	callstack 0
  6968                           
  6969 ;; *************** function _EUSART_Transmit_ISR *****************
  6970 ;; Defined at:
  6971 ;;		line 206 in file "mcc_generated_files/eusart.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;		None
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;		None
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      void 
  6978 ;; Registers used:
  6979 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;Total ram usage:        0 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; This function calls:
  6992 ;;		Nothing
  6993 ;; This function is called by:
  6994 ;;		_EUSART_Initialize
  6995 ;;		_INTERRUPT_InterruptManager
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	text76
  7000  00210E                     __ptext76:
  7001                           	callstack 0
  7002  00210E                     _EUSART_Transmit_ISR:
  7003                           	callstack 20
  7004  00210E                     
  7005                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  7006  00210E  0E08               	movlw	8
  7007  002110  0100               	movlb	0	; () banked
  7008  002112  61E7               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
  7009  002114  EF8E  F010         	goto	i2u178_41
  7010  002118  EF90  F010         	goto	i2u178_40
  7011  00211C                     i2u178_41:
  7012  00211C  EFA6  F010         	goto	i2l607
  7013  002120                     i2u178_40:
  7014  002120                     
  7015                           ; BSR set to: 0
  7016                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  7017  002120  0E94               	movlw	low _eusartTxBuffer
  7018  002122  2458               	addwf	_eusartTxTail^0,w,c	;volatile
  7019  002124  6ED9               	movwf	fsr2l,c
  7020  002126  6ADA               	clrf	fsr2h,c
  7021  002128  0E00               	movlw	high _eusartTxBuffer
  7022  00212A  22DA               	addwfc	fsr2h,f,c
  7023  00212C  50DF               	movf	indf2,w,c
  7024  00212E  6EAD               	movwf	173,c	;volatile
  7025  002130                     
  7026                           ; BSR set to: 0
  7027  002130  2A58               	incf	_eusartTxTail^0,f,c	;volatile
  7028  002132                     
  7029                           ; BSR set to: 0
  7030                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  7031  002132  0E07               	movlw	7
  7032  002134  6458               	cpfsgt	_eusartTxTail^0,c	;volatile
  7033  002136  EF9F  F010         	goto	i2u179_41
  7034  00213A  EFA1  F010         	goto	i2u179_40
  7035  00213E                     i2u179_41:
  7036  00213E  EFA3  F010         	goto	i2l3332
  7037  002142                     i2u179_40:
  7038  002142                     
  7039                           ; BSR set to: 0
  7040                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  7041  002142  0E00               	movlw	0
  7042  002144  6E58               	movwf	_eusartTxTail^0,c	;volatile
  7043  002146                     i2l3332:
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  7047  002146  2BE7               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  7048                           
  7049                           ;mcc_generated_files/eusart.c: 218:     }
  7050  002148  EFA7  F010         	goto	i2l610
  7051  00214C                     i2l607:
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TX1IE = 0;
  7055  00214C  989D               	bcf	157,4,c	;volatile
  7056  00214E                     i2l610:
  7057                           
  7058                           ; BSR set to: 0
  7059  00214E  0012               	return		;funcret
  7060  002150                     __end_of_EUSART_Transmit_ISR:
  7061                           	callstack 0
  7062                           
  7063 ;; *************** function _EUSART_Receive_ISR *****************
  7064 ;; Defined at:
  7065 ;;		line 225 in file "mcc_generated_files/eusart.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;		None
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      void 
  7072 ;; Registers used:
  7073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7083 ;;Total ram usage:        0 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; Hardware stack levels required when called:    2
  7086 ;; This function calls:
  7087 ;;		Absolute function
  7088 ;;		_EUSART_DefaultErrorHandler
  7089 ;;		_EUSART_DefaultFramingErrorHandler
  7090 ;;		_EUSART_DefaultOverrunErrorHandler
  7091 ;;		_EUSART_RxDataHandler
  7092 ;; This function is called by:
  7093 ;;		_EUSART_Initialize
  7094 ;;		_INTERRUPT_InterruptManager
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text77
  7099  001A0E                     __ptext77:
  7100                           	callstack 0
  7101  001A0E                     _EUSART_Receive_ISR:
  7102                           	callstack 18
  7103  001A0E                     
  7104                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7105  001A0E  0E84               	movlw	low _eusartRxStatusBuffer
  7106  001A10  2457               	addwf	_eusartRxHead^0,w,c	;volatile
  7107  001A12  6ED9               	movwf	fsr2l,c
  7108  001A14  6ADA               	clrf	fsr2h,c
  7109  001A16  0E00               	movlw	high _eusartRxStatusBuffer
  7110  001A18  22DA               	addwfc	fsr2h,f,c
  7111  001A1A  0E00               	movlw	0
  7112  001A1C  6EDF               	movwf	indf2,c
  7113  001A1E                     
  7114                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
  7115  001A1E  A4AB               	btfss	171,2,c	;volatile
  7116  001A20  EF14  F00D         	goto	i2u180_41
  7117  001A24  EF16  F00D         	goto	i2u180_40
  7118  001A28                     i2u180_41:
  7119  001A28  EF2A  F00D         	goto	i2l3342
  7120  001A2C                     i2u180_40:
  7121  001A2C                     
  7122                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7123  001A2C  0E84               	movlw	low _eusartRxStatusBuffer
  7124  001A2E  2457               	addwf	_eusartRxHead^0,w,c	;volatile
  7125  001A30  6ED9               	movwf	fsr2l,c
  7126  001A32  6ADA               	clrf	fsr2h,c
  7127  001A34  0E00               	movlw	high _eusartRxStatusBuffer
  7128  001A36  22DA               	addwfc	fsr2h,f,c
  7129  001A38  0100               	movlb	0	; () banked
  7130  001A3A  82DF               	bsf	indf2,1,c
  7131  001A3C                     
  7132                           ; BSR set to: 0
  7133                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  7134  001A3C  D802               	call	i2u181_48
  7135  001A3E  EF2A  F00D         	goto	i2u181_49
  7136  001A42                     i2u181_48:
  7137  001A42  0005               	push	
  7138  001A44  6EFA               	movwf	pclath,c
  7139  001A46  51E1               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
  7140  001A48  6EFD               	movwf	tosl,c
  7141  001A4A  51E2               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
  7142  001A4C  6EFE               	movwf	tosh,c
  7143  001A4E  6AFF               	clrf	tosu,c
  7144  001A50  50FA               	movf	pclath,w,c
  7145  001A52  0012               	return		;indir
  7146  001A54                     i2u181_49:
  7147  001A54                     i2l3342:
  7148                           
  7149                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
  7150  001A54  A2AB               	btfss	171,1,c	;volatile
  7151  001A56  EF2F  F00D         	goto	i2u182_41
  7152  001A5A  EF31  F00D         	goto	i2u182_40
  7153  001A5E                     i2u182_41:
  7154  001A5E  EF45  F00D         	goto	i2l3348
  7155  001A62                     i2u182_40:
  7156  001A62                     
  7157                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7158  001A62  0E84               	movlw	low _eusartRxStatusBuffer
  7159  001A64  2457               	addwf	_eusartRxHead^0,w,c	;volatile
  7160  001A66  6ED9               	movwf	fsr2l,c
  7161  001A68  6ADA               	clrf	fsr2h,c
  7162  001A6A  0E00               	movlw	high _eusartRxStatusBuffer
  7163  001A6C  22DA               	addwfc	fsr2h,f,c
  7164  001A6E  0100               	movlb	0	; () banked
  7165  001A70  84DF               	bsf	indf2,2,c
  7166  001A72                     
  7167                           ; BSR set to: 0
  7168                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  7169  001A72  D802               	call	i2u183_48
  7170  001A74  EF45  F00D         	goto	i2u183_49
  7171  001A78                     i2u183_48:
  7172  001A78  0005               	push	
  7173  001A7A  6EFA               	movwf	pclath,c
  7174  001A7C  51DF               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
  7175  001A7E  6EFD               	movwf	tosl,c
  7176  001A80  51E0               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
  7177  001A82  6EFE               	movwf	tosh,c
  7178  001A84  6AFF               	clrf	tosu,c
  7179  001A86  50FA               	movf	pclath,w,c
  7180  001A88  0012               	return		;indir
  7181  001A8A                     i2u183_49:
  7182  001A8A                     i2l3348:
  7183                           
  7184                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7185  001A8A  0E84               	movlw	low _eusartRxStatusBuffer
  7186  001A8C  2457               	addwf	_eusartRxHead^0,w,c	;volatile
  7187  001A8E  6ED9               	movwf	fsr2l,c
  7188  001A90  6ADA               	clrf	fsr2h,c
  7189  001A92  0E00               	movlw	high _eusartRxStatusBuffer
  7190  001A94  22DA               	addwfc	fsr2h,f,c
  7191  001A96  50DF               	movf	indf2,w,c
  7192  001A98  B4D8               	btfsc	status,2,c
  7193  001A9A  EF51  F00D         	goto	i2u184_41
  7194  001A9E  EF53  F00D         	goto	i2u184_40
  7195  001AA2                     i2u184_41:
  7196  001AA2  EF62  F00D         	goto	i2l3352
  7197  001AA6                     i2u184_40:
  7198  001AA6                     
  7199                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  7200  001AA6  D802               	call	i2u185_48
  7201  001AA8  EF60  F00D         	goto	i2u185_49
  7202  001AAC                     i2u185_48:
  7203  001AAC  0005               	push	
  7204  001AAE  6EFA               	movwf	pclath,c
  7205  001AB0  0100               	movlb	0	; () banked
  7206  001AB2  51DD               	movf	_EUSART_ErrorHandler& (0+255),w,b
  7207  001AB4  6EFD               	movwf	tosl,c
  7208  001AB6  51DE               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
  7209  001AB8  6EFE               	movwf	tosh,c
  7210  001ABA  6AFF               	clrf	tosu,c
  7211  001ABC  50FA               	movf	pclath,w,c
  7212  001ABE  0012               	return		;indir
  7213  001AC0                     i2u185_49:
  7214                           
  7215                           ;mcc_generated_files/eusart.c: 242:     } else {
  7216  001AC0  EF64  F00D         	goto	i2l617
  7217  001AC4                     i2l3352:
  7218                           
  7219                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  7220  001AC4  EC89  F011         	call	_EUSART_RxDataHandler	;wreg free
  7221  001AC8                     i2l617:
  7222  001AC8  0012               	return		;funcret
  7223  001ACA                     __end_of_EUSART_Receive_ISR:
  7224                           	callstack 0
  7225                           
  7226 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  7227 ;; Defined at:
  7228 ;;		line 261 in file "mcc_generated_files/eusart.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;		None
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;		None
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  1    wreg      void 
  7235 ;; Registers used:
  7236 ;;		None
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7246 ;;Total ram usage:        0 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; This function calls:
  7249 ;;		Nothing
  7250 ;; This function is called by:
  7251 ;;		_EUSART_Initialize
  7252 ;;		_EUSART_Receive_ISR
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text78
  7257  002544                     __ptext78:
  7258                           	callstack 0
  7259  002544                     _EUSART_DefaultOverrunErrorHandler:
  7260                           	callstack 19
  7261  002544                     
  7262                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
  7263  002544  98AB               	bcf	171,4,c	;volatile
  7264                           
  7265                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
  7266  002546  88AB               	bsf	171,4,c	;volatile
  7267  002548  0012               	return		;funcret
  7268  00254A                     __end_of_EUSART_DefaultOverrunErrorHandler:
  7269                           	callstack 0
  7270                           
  7271 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  7272 ;; Defined at:
  7273 ;;		line 259 in file "mcc_generated_files/eusart.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;		None
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;		None
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  1    wreg      void 
  7280 ;; Registers used:
  7281 ;;		None
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7291 ;;Total ram usage:        0 bytes
  7292 ;; Hardware stack levels used:    1
  7293 ;; This function calls:
  7294 ;;		Nothing
  7295 ;; This function is called by:
  7296 ;;		_EUSART_Initialize
  7297 ;;		_EUSART_Receive_ISR
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           	psect	text79
  7302  002580                     __ptext79:
  7303                           	callstack 0
  7304  002580                     _EUSART_DefaultFramingErrorHandler:
  7305                           	callstack 19
  7306  002580  0012               	return		;funcret
  7307  002582                     __end_of_EUSART_DefaultFramingErrorHandler:
  7308                           	callstack 0
  7309                           
  7310 ;; *************** function _EUSART_DefaultErrorHandler *****************
  7311 ;; Defined at:
  7312 ;;		line 269 in file "mcc_generated_files/eusart.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;		None
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;		None
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  1    wreg      void 
  7319 ;; Registers used:
  7320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;Total ram usage:        0 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; Hardware stack levels required when called:    1
  7333 ;; This function calls:
  7334 ;;		_EUSART_RxDataHandler
  7335 ;; This function is called by:
  7336 ;;		_EUSART_Initialize
  7337 ;;		_EUSART_Receive_ISR
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           	psect	text80
  7342  00254A                     __ptext80:
  7343                           	callstack 0
  7344  00254A                     _EUSART_DefaultErrorHandler:
  7345                           	callstack 18
  7346  00254A                     
  7347                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  7348  00254A  EC89  F011         	call	_EUSART_RxDataHandler	;wreg free
  7349  00254E  0012               	return		;funcret
  7350  002550                     __end_of_EUSART_DefaultErrorHandler:
  7351                           	callstack 0
  7352                           
  7353 ;; *************** function _EUSART_RxDataHandler *****************
  7354 ;; Defined at:
  7355 ;;		line 249 in file "mcc_generated_files/eusart.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;		None
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;		None
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      void 
  7362 ;; Registers used:
  7363 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7373 ;;Total ram usage:        0 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; This function calls:
  7376 ;;		Nothing
  7377 ;; This function is called by:
  7378 ;;		_EUSART_Receive_ISR
  7379 ;;		_EUSART_DefaultErrorHandler
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           	psect	text81
  7384  002312                     __ptext81:
  7385                           	callstack 0
  7386  002312                     _EUSART_RxDataHandler:
  7387                           	callstack 19
  7388  002312                     
  7389                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
  7390  002312  0E8C               	movlw	low _eusartRxBuffer
  7391  002314  2457               	addwf	_eusartRxHead^0,w,c	;volatile
  7392  002316  6ED9               	movwf	fsr2l,c
  7393  002318  6ADA               	clrf	fsr2h,c
  7394  00231A  0E00               	movlw	high _eusartRxBuffer
  7395  00231C  22DA               	addwfc	fsr2h,f,c
  7396  00231E  CFAE FFDF          	movff	4014,indf2	;volatile
  7397  002322  2A57               	incf	_eusartRxHead^0,f,c	;volatile
  7398  002324                     
  7399                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  7400  002324  0E07               	movlw	7
  7401  002326  6457               	cpfsgt	_eusartRxHead^0,c	;volatile
  7402  002328  EF98  F011         	goto	i2u164_41
  7403  00232C  EF9A  F011         	goto	i2u164_40
  7404  002330                     i2u164_41:
  7405  002330  EF9C  F011         	goto	i2l3090
  7406  002334                     i2u164_40:
  7407  002334                     
  7408                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  7409  002334  0E00               	movlw	0
  7410  002336  6E57               	movwf	_eusartRxHead^0,c	;volatile
  7411  002338                     i2l3090:
  7412                           
  7413                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  7414  002338  0100               	movlb	0	; () banked
  7415  00233A  2BA5               	incf	_eusartRxCount& (0+255),f,b	;volatile
  7416  00233C                     
  7417                           ; BSR set to: 0
  7418  00233C  0012               	return		;funcret
  7419  00233E                     __end_of_EUSART_RxDataHandler:
  7420                           	callstack 0
  7421                           
  7422                           	psect	text82
  7423  000000                     __ptext82:
  7424                           	callstack 0
  7425  000000                     
  7426                           	psect	rparam
  7427  0000                     
  7428                           	psect	temp
  7429  00005A                     btemp:
  7430                           	callstack 0
  7431  00005A                     	ds	1
  7432  0000                     int$flags	set	btemp
  7433  0000                     wtemp8	set	btemp+1
  7434  0000                     ttemp5	set	btemp+1
  7435  0000                     ttemp6	set	btemp+4
  7436  0000                     ttemp7	set	btemp+8
  7437                           
  7438                           	psect	idloc
  7439                           
  7440                           ;Config register IDLOC0 @ 0x200000
  7441                           ;	unspecified, using default values
  7442  200000                     	org	2097152
  7443  200000  FF                 	db	255
  7444                           
  7445                           ;Config register IDLOC1 @ 0x200001
  7446                           ;	unspecified, using default values
  7447  200001                     	org	2097153
  7448  200001  FF                 	db	255
  7449                           
  7450                           ;Config register IDLOC2 @ 0x200002
  7451                           ;	unspecified, using default values
  7452  200002                     	org	2097154
  7453  200002  FF                 	db	255
  7454                           
  7455                           ;Config register IDLOC3 @ 0x200003
  7456                           ;	unspecified, using default values
  7457  200003                     	org	2097155
  7458  200003  FF                 	db	255
  7459                           
  7460                           ;Config register IDLOC4 @ 0x200004
  7461                           ;	unspecified, using default values
  7462  200004                     	org	2097156
  7463  200004  FF                 	db	255
  7464                           
  7465                           ;Config register IDLOC5 @ 0x200005
  7466                           ;	unspecified, using default values
  7467  200005                     	org	2097157
  7468  200005  FF                 	db	255
  7469                           
  7470                           ;Config register IDLOC6 @ 0x200006
  7471                           ;	unspecified, using default values
  7472  200006                     	org	2097158
  7473  200006  FF                 	db	255
  7474                           
  7475                           ;Config register IDLOC7 @ 0x200007
  7476                           ;	unspecified, using default values
  7477  200007                     	org	2097159
  7478  200007  FF                 	db	255
  7479                           
  7480                           	psect	config
  7481                           
  7482                           ; Padding undefined space
  7483  300000                     	org	3145728
  7484  300000  FF                 	db	255
  7485                           
  7486                           ;Config register CONFIG1H @ 0x300001
  7487                           ;	Oscillator Selection bits
  7488                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  7489                           ;	Fail-Safe Clock Monitor Enable bit
  7490                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7491                           ;	Internal/External Oscillator Switchover bit
  7492                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7493  300001                     	org	3145729
  7494  300001  08                 	db	8
  7495                           
  7496                           ;Config register CONFIG2L @ 0x300002
  7497                           ;	Power-up Timer Enable bit
  7498                           ;	PWRT = OFF, PWRT disabled
  7499                           ;	Brown-out Reset Enable bits
  7500                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7501                           ;	Brown Out Reset Voltage bits
  7502                           ;	BORV = 18, VBOR set to 1.8 V nominal
  7503  300002                     	org	3145730
  7504  300002  1F                 	db	31
  7505                           
  7506                           ;Config register CONFIG2H @ 0x300003
  7507                           ;	Watchdog Timer Enable bit
  7508                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  7509                           ;	Watchdog Timer Postscale Select bits
  7510                           ;	WDTPS = 32768, 1:32768
  7511  300003                     	org	3145731
  7512  300003  1E                 	db	30
  7513                           
  7514                           ; Padding undefined space
  7515  300004                     	org	3145732
  7516  300004  FF                 	db	255
  7517                           
  7518                           ;Config register CONFIG3H @ 0x300005
  7519                           ;	CCP2 MUX bit
  7520                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7521                           ;	PORTB A/D Enable bit
  7522                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  7523                           ;	Low-Power Timer1 Oscillator Enable bit
  7524                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7525                           ;	HFINTOSC Fast Start-up
  7526                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  7527                           ;	MCLR Pin Enable bit
  7528                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  7529  300005                     	org	3145733
  7530  300005  0B                 	db	11
  7531                           
  7532                           ;Config register CONFIG4L @ 0x300006
  7533                           ;	Stack Full/Underflow Reset Enable bit
  7534                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7535                           ;	Single-Supply ICSP Enable bit
  7536                           ;	LVP = OFF, Single-Supply ICSP disabled
  7537                           ;	Extended Instruction Set Enable bit
  7538                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7539                           ;	Background Debugger Enable bit
  7540                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  7541  300006                     	org	3145734
  7542  300006  81                 	db	129
  7543                           
  7544                           ; Padding undefined space
  7545  300007                     	org	3145735
  7546  300007  FF                 	db	255
  7547                           
  7548                           ;Config register CONFIG5L @ 0x300008
  7549                           ;	Code Protection Block 0
  7550                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7551                           ;	Code Protection Block 1
  7552                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7553                           ;	Code Protection Block 2
  7554                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7555                           ;	Code Protection Block 3
  7556                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7557  300008                     	org	3145736
  7558  300008  0F                 	db	15
  7559                           
  7560                           ;Config register CONFIG5H @ 0x300009
  7561                           ;	Boot Block Code Protection bit
  7562                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7563                           ;	Data EEPROM Code Protection bit
  7564                           ;	CPD = OFF, Data EEPROM not code-protected
  7565  300009                     	org	3145737
  7566  300009  C0                 	db	192
  7567                           
  7568                           ;Config register CONFIG6L @ 0x30000A
  7569                           ;	Write Protection Block 0
  7570                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7571                           ;	Write Protection Block 1
  7572                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7573                           ;	Write Protection Block 2
  7574                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7575                           ;	Write Protection Block 3
  7576                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  7577  30000A                     	org	3145738
  7578  30000A  0F                 	db	15
  7579                           
  7580                           ;Config register CONFIG6H @ 0x30000B
  7581                           ;	Configuration Register Write Protection bit
  7582                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7583                           ;	Boot Block Write Protection bit
  7584                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7585                           ;	Data EEPROM Write Protection bit
  7586                           ;	WRTD = OFF, Data EEPROM not write-protected
  7587  30000B                     	org	3145739
  7588  30000B  E0                 	db	224
  7589                           
  7590                           ;Config register CONFIG7L @ 0x30000C
  7591                           ;	Table Read Protection Block 0
  7592                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7593                           ;	Table Read Protection Block 1
  7594                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7595                           ;	Table Read Protection Block 2
  7596                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7597                           ;	Table Read Protection Block 3
  7598                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7599  30000C                     	org	3145740
  7600  30000C  0F                 	db	15
  7601                           
  7602                           ;Config register CONFIG7H @ 0x30000D
  7603                           ;	Boot Block Table Read Protection bit
  7604                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7605  30000D                     	org	3145741
  7606  30000D  40                 	db	64
  7607                           tosu	equ	0xFFF
  7608                           tosh	equ	0xFFE
  7609                           tosl	equ	0xFFD
  7610                           stkptr	equ	0xFFC
  7611                           pclatu	equ	0xFFB
  7612                           pclath	equ	0xFFA
  7613                           pcl	equ	0xFF9
  7614                           tblptru	equ	0xFF8
  7615                           tblptrh	equ	0xFF7
  7616                           tblptrl	equ	0xFF6
  7617                           tablat	equ	0xFF5
  7618                           prodh	equ	0xFF4
  7619                           prodl	equ	0xFF3
  7620                           indf0	equ	0xFEF
  7621                           postinc0	equ	0xFEE
  7622                           postdec0	equ	0xFED
  7623                           preinc0	equ	0xFEC
  7624                           plusw0	equ	0xFEB
  7625                           fsr0h	equ	0xFEA
  7626                           fsr0l	equ	0xFE9
  7627                           wreg	equ	0xFE8
  7628                           indf1	equ	0xFE7
  7629                           postinc1	equ	0xFE6
  7630                           postdec1	equ	0xFE5
  7631                           preinc1	equ	0xFE4
  7632                           plusw1	equ	0xFE3
  7633                           fsr1h	equ	0xFE2
  7634                           fsr1l	equ	0xFE1
  7635                           bsr	equ	0xFE0
  7636                           indf2	equ	0xFDF
  7637                           postinc2	equ	0xFDE
  7638                           postdec2	equ	0xFDD
  7639                           preinc2	equ	0xFDC
  7640                           plusw2	equ	0xFDB
  7641                           fsr2h	equ	0xFDA
  7642                           fsr2l	equ	0xFD9
  7643                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    32
    Data        0
    BSS         106
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      89
    BANK0           160     23     136
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2331$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2337$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2343$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2349$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2348	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2343	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2342	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2337	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2336	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2331	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2330	const PTR FTN()enum E3101 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1961_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), STR_1(CODE[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), STR_1(CODE[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3101[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  199279
                                             16 BANK0      7     7      0
              _I2C_Read2ByteRegister
             _I2C_Write2ByteRegister
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    8192
                                              8 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             69 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Write2ByteRegister                               4     1      3   95284
                                             21 COMRAM     4     1      3
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _I2C_Read2ByteRegister                                8     6      2   95177
                                             21 COMRAM     8     6      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (2) _I2C_Open                                             2     2      0      46
                                              4 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterOperation                                  2     2      0   88620
                                             19 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (4) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterFsm                                        2     2      0   88574
                                             17 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_TX                                            2     2      0   22149
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendTxData                                 1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX                                            2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _wr2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _wr1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rdBlkRegCompleteHandler                              2     0      2    4390
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _I2C_SetDataCompleteCallback                          4     0      4    2478
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetCallback                                      5     1      4     914
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _I2C_SetBuffer                                        4     0      4    1868
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_CallbackReturnStop                               2     0      2       0
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _I2C_CallbackReturnReset                              2     0      2     265
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Close                                            1     1      0      24
                                              4 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Read2ByteRegister
     _I2C_Close
       _I2C_MasterClearIrq
       _I2C_MasterClose
       _I2C_MasterDisableIrq
     _I2C_MasterWrite
       _I2C_MasterOperation
         _I2C_MasterStart
         _I2C_Poller
           _I2C_MasterFsm
             _I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_IDLE *
             _I2C_DO_RCEN *
               _I2C_MasterStartRx
             _I2C_DO_RESET *
             _I2C_DO_RX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_MasterGetRxData *
               _I2C_MasterSendAck *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_RX_ACK *
               _I2C_MasterSendAck
             _I2C_DO_RX_NACK_RESTART *
               _I2C_MasterSendNack
             _I2C_DO_RX_NACK_STOP *
               _I2C_MasterSendNack
             _I2C_DO_SEND_ADR_READ *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_ADR_WRITE *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_RESTART *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_READ *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_WRITE *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_STOP *
               _I2C_MasterStop
             _I2C_DO_TX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_MasterIsNack *
               _I2C_MasterSendTxData *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_TX_EMPTY *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_MasterSetIrq *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_MasterClearIrq *
             _I2C_MasterIsNack *
           _I2C_MasterWaitForEvent
     _I2C_Open
       _I2C_MasterClearIrq
       _I2C_MasterOpen
     _I2C_SetAddressNackCallback
       _I2C_SetCallback
     _I2C_SetBuffer
     _I2C_SetDataCompleteCallback
       _I2C_SetCallback
   _I2C_Write2ByteRegister
     _I2C_Close
       _I2C_MasterClearIrq
       _I2C_MasterClose
       _I2C_MasterDisableIrq
     _I2C_MasterWrite
       _I2C_MasterOperation
         _I2C_MasterStart
         _I2C_Poller
           _I2C_MasterFsm
             _I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_IDLE *
             _I2C_DO_RCEN *
               _I2C_MasterStartRx
             _I2C_DO_RESET *
             _I2C_DO_RX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_MasterGetRxData *
               _I2C_MasterSendAck *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_RX_ACK *
               _I2C_MasterSendAck
             _I2C_DO_RX_NACK_RESTART *
               _I2C_MasterSendNack
             _I2C_DO_RX_NACK_STOP *
               _I2C_MasterSendNack
             _I2C_DO_SEND_ADR_READ *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_ADR_WRITE *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_RESTART *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_READ *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_WRITE *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_STOP *
               _I2C_MasterStop
             _I2C_DO_TX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_MasterIsNack *
               _I2C_MasterSendTxData *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_TX_EMPTY *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_MasterSetIrq *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_MasterClearIrq *
             _I2C_MasterIsNack *
           _I2C_MasterWaitForEvent
     _I2C_Open
       _I2C_MasterClearIrq
       _I2C_MasterOpen
     _I2C_SetAddressNackCallback
       _I2C_SetCallback
     _I2C_SetBuffer
     _I2C_SetDataCompleteCallback
       _I2C_SetCallback
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     17      88       5       85.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E1      32        0.0%
DATA                 0      0      E1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Aug 12 10:21:48 2020

                ?_EUSART_SetRxInterruptHandler 0005                         ??_I2C_DO_SEND_ADR_READ 0005  
                  __size_of_I2C_MasterSendNack 0006                             __size_of_I2C_Close 002C  
              __size_of_I2C_Write2ByteRegister 006E                        ??_I2C_DO_SEND_ADR_WRITE 0006  
                                  _SSPSTATbits 000FC7                                             l42 1D18  
                                           l60 1F62                                             l90 22B8  
                                           l93 228C                                             l96 2260  
                                           l99 22E4                            __size_of_I2C_Poller 001E  
                        ??_I2C_DO_SEND_RESTART 0005                   __size_of_I2C_MasterOperation 0044  
                                          l102 21CE                                            l213 1C92  
                                          l223 210C                                            l312 1D94  
                                          l217 2310                  __size_of_I2C_MasterSendTxData 0008  
                                          l209 2440                                            l402 256A  
                                          l306 249C                                            l330 252E  
                                          l411 2542                                            l236 2388  
                                          l405 2454                                            l333 2526  
                                          l229 24F6                                            l245 23FE  
                                          l342 250E                                            l262 23E6  
                                          l239 2416                                            l351 2490  
                                          l256 1E0E                                            l408 253C  
                                          l432 2556                                            l272 2484  
                                          l336 251E                                            l281 1A0C  
                                          l345 2506                                            l426 2576  
                                          l266 1EF4                                            l275 2474  
                                          l339 2516                                            l435 2456  
                                          l348 24FE                                            l604 24B2  
                                          l429 257E                                            l381 257A  
                                          l365 2566                                            l269 24A8  
                                          l357 1FC8                                            l390 256E  
                                          l278 19D4                                            l294 1B00  
                                          l295 1B6E                                            l439 2464  
                                          l368 2562                                            l384 255A  
                                          l456 242C                                            l633 24E4  
                                          l378 23AA                                            l642 24C6  
                                          l570 1E84                                            l387 2536  
                                          l459 24BC                                            l396 255E  
                                          l636 24DA                                            l660 2552  
                                          l492 2234                                            l645 24D0  
                                          l822 17B6                                            l399 2572  
                                          l639 24EE                                            l809 1652  
                                          l594 2042                                            l595 2058  
                                          l598 2084                                            _abs 2150  
                       ??_EUSART_RxDataHandler 0001                                            _pad 1884  
                       fp__I2C_DO_RX_NACK_STOP 0000                         _I2C_MasterWaitForEvent 2456  
               ?_EUSART_SetFramingErrorHandler 0005                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                   I2C_Write2ByteRegister@data 0017                   ??_I2C_SetAddressNackCallback 000E  
                     ??_I2C_CallbackReturnStop 0010                                   _I2C_DO_RESET 2486  
                                         ?_abs 0017                        ??_rd2RegCompleteHandler 0010  
                                         l1400 18CA                                           l1403 190C  
                                         l1411 10CC                                           l1405 1948  
                                         l1413 10D4                                           l1431 130C  
                                         l3040 2398                                           l3050 20CC  
                                         l3042 23A8                                           l3202 242E  
                                         l3210 221E                                           l3060 20F6  
                                         l3052 20D0                                           l3140 1C20  
                                         l3204 243E                                           l3220 24B4  
                                         l3212 2220                                           l1452 218E  
                                         l1444 2024                                           l1445 202C  
                                         l1373 2364                                           l3046 2574  
                                         l3062 20FE                                           l3054 20E0  
                                         l3038 238A                                           l3150 1C32  
                                         l3142 1C22                                           l3134 1C08  
                                         l3230 1E30                                           l3222 1E10  
                                         l3206 2550                                           l3214 2226  
                                         l1438 14CA                                           l3048 2578  
                                         l2520 1DAA                                           l2600 2442  
                                         l3064 2102                                           l3056 20E2  
                                         l3160 1C54                                           l3152 1C34  
                                         l3144 1C24                                           l3136 1C0C  
                                         l3080 24E6                                           l3072 24C8  
                                         l3240 1E4C                                           l3232 1E34  
                                         l3224 1E12                                           l3216 2228  
                                         l3208 2206                                           l1464 1C04  
                                         l1472 20C8                                           l1449 2186  
                                         l2522 1DDE                                           l3066 2106  
                                         l3058 20E6                                           l3170 1C7C  
                                         l3162 1C5C                                           l3154 1C3C  
                                         l3146 1C26                                           l3138 1C1C  
                                         l3074 24BE                                           l3242 1E58  
                                         l3234 1E38                                           l3226 1E1E  
                                         l3218 2232                                           l2604 2532  
                                         l2700 194A                                           l2612 2520  
                                         l2620 2514                                           l3068 210A  
                                         l3172 1C84                                           l3164 1C64  
                                         l3156 1C44                                           l3148 1C2A  
                                         l3260 1C9E                                           l3076 24DC  
                                         l3244 1E82                                           l3236 1E3C  
                                         l3228 1E2C                                           l3190 22EA  
                                         l2550 2386                                           l2518 1D98  
                                         l2542 2400                                           l2606 2528  
                                         l2614 2524                                           l2630 24F8  
                                         l3174 1C88                                           l3166 1C6C  
                                         l3158 1C4C                                           l3182 23E8  
                                         l3270 1CF4                                           l3262 1CB4  
                                         l3078 24D2                                           l3238 1E40  
                                         l1478 2204                                           l3192 22FA  
                                         l2552 256C                                           l2544 2366  
                                         l2560 228E                                           l2624 2558  
                                         l2720 19D8                                           l2712 1972  
                                         l2704 1962                                           l2608 252C  
                                         l2632 24FC                                           l3184 24F0  
                                         l3176 1C8C                                           l3168 1C74  
                                         l3272 1D08                                           l3264 1CC8  
                                         l3280 1F0E                                           l3600 2050  
                                         l3194 22FE                                           l2554 2568  
                                         l2546 2376                                           l2562 22A2  
                                         l2570 2276                                           l2642 255C  
                                         l2650 2554                                           l2722 19EA  
                                         l2618 2510                                           l2802 2486  
                                         l2810 1F64                                           l3178 1C90  
                                         l3266 1CDC                                           l3258 1C96  
                                         l3282 1F22                                           l3290 2418  
                                         l3610 2080                                           l3602 205A  
                                         l3196 230A                                           l3188 22E6  
                                         l2548 237E                                           l2564 22B6  
                                         l2572 228A                                           l2580 225E  
                                         l2652 2564                                           l2556 253E  
                                         l2628 2538                                           l2724 1A04  
                                         l2708 196A                                           l2740 1AF6  
                                         l2644 2518                                           l2636 2500  
                                         l2804 248A                                           l2812 1F68  
                                         l3268 1CF0                                           l3284 1F36  
                                         l3276 1EF8                                           l3292 241C  
                                         l3700 168A                                           l3604 206A  
                                         l3612 2082                                           l3620 1B94  
                                         l3198 230E                                           l2726 1A0A  
                                         l2718 197A                                           l2742 1AFA  
                                         l2734 1ACA                                           l2646 251C  
                                         l2638 2504                                           l2806 248E  
                                         l2814 1F70                                           l3286 1F4A  
                                         l3278 1EF8                                           l3294 2420  
                                         l3710 16F2                                           l3702 1698  
                                         l3606 206C                                           l3614 24AC  
                                         l3622 1B9E                                           l3630 2086  
                                         l2584 22BA                                           l2568 2262  
                                         l2576 2236                                           l2592 2190  
                                         l2656 2560                                           l2680 24A6  
                                         l2752 1B0E                                           l2736 1AD8  
                                         l2824 1F80                                           l3288 1F4E  
                                         l3296 2424                                           l3712 1700  
                                         l3720 1766                                           l3704 16B8  
                                         l3608 207C                                           l3624 1BBC  
                                         l3616 1B70                                           l3632 2092  
                                         l3640 21DC                                           l3800 1298  
                                         l2674 257C                                           l2586 22CE  
                                         l2578 224A                                           l2594 21B8  
                                         l2738 1ADE                                           l2818 1F78  
                                         l2850 1E86                                           l3298 2428  
                                         l3650 14D0                                           l3722 1776  
                                         l3714 172E                                           l3706 16D6  
                                         l3626 1BF2                                           l3618 1B82  
                                         l3634 20A4                                           l3642 21E0  
                                         l3730 1894                                           l3810 12D4  
                                         l3802 12A8                                           l2588 22E2  
                                         l2596 21CC                                           l2780 1D2E  
                                         l2772 1D1A                                           l2676 249E  
                                         l2684 2476                                           l2692 2466  
                                         l2748 1B06                                           l2764 2492  
                                         l2852 1E8A                                           l3660 1530  
                                         l3652 14DE                                           l3724 1796  
                                         l3716 174E                                           l3708 16DE  
                                         l3636 20A8                                           l3644 21F8  
                                         l3740 18EA                                           l3732 18A8  
                                         l3804 12AE                                           l3812 12E4  
                                         l3820 1342                                           l2774 1D22  
                                         l2790 1D3C                                           l2678 24A2  
                                         l2686 247A                                           l2694 246A  
                                         l2758 1B16                                           l2766 2496  
                                         l2854 1E9A                                           l3670 157A  
                                         l3662 1534                                           l3654 14FE  
                                         l3718 1760                                           l3750 2150  
                                         l3638 21D0                                           l3742 18EE  
                                         l3734 18B6                                           l3806 12C0  
                                         l3830 13EC                                           l3822 1354  
                                         ?_pad 0017                                           l2784 1D34  
                                         l2688 2482                                           l2696 2472  
                                         l2768 249A                                           l2856 1EAE  
                                         l3680 15EA                                           l3672 1588  
                                         l3664 1540                                           l3656 1502  
                                         l3648 14CC                                           l3752 216A  
                                         l3744 191C                                           l3736 18C2  
                                         l3728 1884                                           l3808 12CC  
                                         l3760 1094                                           l3840 146C  
                                         l3824 1358                                           l3816 130E  
                                         l2778 1D2A                                           l2858 1EB4  
                                         l2970 23CE                                           l3682 15FC  
                                         l3674 159A                                           l3666 155E  
                                         l3658 1510                                           l3746 1930  
                                         l3738 18D6                                           l3770 10EE  
                                         l3762 10A4                                           l3754 102C  
                                         l3834 1424                                           l3826 137E  
                                         l3818 1334                                           l3850 1492  
                                         l2796 2508                                           l2972 23D2  
                                         l3676 15C8                                           l3668 1566  
                                         l3684 1602                                           l3692 1654  
                                         l3596 2030                                           l3780 1118  
                                         l3772 10FC                                           l3764 10A6  
                                         l3756 104C                                           l3852 14B8  
                                         l3836 144A                                           l3844 1478  
                                         l3828 13A4                                           l3860 1FD2  
                                         l2966 2570                                           l2798 250C  
                                         l2974 23D6                                           l3686 1612  
                                         l3678 15E8                                           l3694 1658  
                                         l3598 2030                                           l3790 1224  
                                         l3782 119A                                           l3774 1102  
                                         l3766 10C0                                           l3758 1074  
                                         l3846 1486                                           l3838 1458  
                                         l3862 1FE0                                           l2968 23CA  
                                         l3688 1632                                           l3696 1666  
                                         l3792 1242                                           l3784 11A0  
                                         l3776 110A                                           l3768 10DC  
                                         l3864 2006                                           l3880 17D2  
                                         l3872 17B8                                           l3698 1686  
                                         l3794 125C                                           l3786 11A6  
                                         l3778 1112                                           l3858 1FCA  
                                         l3866 233E                                           l3890 182E  
                                         l3882 17DC                                           l3874 17BC  
                                         l3980 1B48                                           l3796 1276  
                                         l3788 120A                                           l3868 2348  
                                         l3892 183E                                           l3884 17EE  
                                         l3876 17BE                                           l3982 19AE  
                                         l3798 1286                                           l3894 184A  
                                         l3886 1800                                           l3878 17C0  
                                         l3984 1D6E                                           l3896 1860  
                                         l3888 1820                                           l3978 1FB2  
                                         STR_1 1028                                           STR_2 1021  
                                         u1040 1DAA                                           u1041 1DA6  
                                         u1140 195E                                           u2100 1B82  
                                         u1141 195A                                           u2101 1B7E  
                                         u1230 2464                                           u2110 1B94  
                                         u1231 2460                                           u2111 1B90  
                                         u1080 2376                                           u1160 1A04  
                                         u1208 1F8E                                           u1240 1E9A  
                                         u2200 1588                                           u2120 1BBC  
                                         u1081 2372                                           u1161 1A00  
                                         u1209 1FA0                                           u1241 1E96  
                                         u2201 1584                                           u2121 1BB8  
                                         u1090 2452                                           u1170 1AF6  
                                         u1250 1EAE                                           u2210 15C8  
                                         u2130 1BF2                                           u1091 244C  
                                         u1171 1AF2                                           u1251 1EAA  
                                         u2211 15C4                                           u2131 1BEE  
                                         u2220 1612                                           u2140 20C8  
                                         u2300 18B6                                           u2221 160E  
                                         u2141 20C4                                           u2301 18B2  
                                         _LATA 000F89                                           u1158 1988  
                                         u2230 1666                                           u2070 2042  
                                         u2150 21F8                                           u2310 190C  
                                         _LATB 000F8A                                           u1159 199C  
                                         u2231 1662                                           u2071 203E  
                                         u2151 21F4                                           u2311 1908  
                                         _LATC 000F8B                                           u1096 2454  
                                         u2160 14DE                                           u2240 1698  
                                         u2080 2050                                           u2320 191C  
                                         u2400 10FC                                           _LATD 000F8C  
                                         u2161 14DA                                           u2241 1694  
                                         u2081 204C                                           u2321 1918  
                                         u2401 10F8                                           _LATE 000F8D  
                                         u1450 23E6                                           u1610 2398  
                                         u2170 1510                                           u2250 16D6  
                                         u2330 216A                                           u2090 207C  
                                         u2410 1224                                           u1451 23E2  
                                         u1611 2394                                           u2171 150C  
                                         u2251 16D2                                           u2331 2166  
                                         u2091 2078                                           u2411 1220  
                                         u1700 22FA                                           u1188 1B24  
                                         u1268 1EDE                                           u1620 20E0  
                                         u2260 1700                                           u2420 1242  
                                         u2340 105C                                           u2500 137E  
                                         u1701 22F6                                           u1189 1B36  
                                         u1269 1EF0                                           u1621 20DC  
                                         u2181 153A                                           u2261 16FC  
                                         u2421 123E                                           u2341 1056  
                                         u2501 137A                                           u1198 1D4A  
                                         u1630 20F6                                           u2190 155E  
                                         u2270 172E                                           u2430 125C  
                                         u2350 105E                                           u2510 13A4  
                                         u1199 1D5C                                           u1631 20F2  
                                         u2191 155A                                           u2271 172A  
                                         u2431 1258                                           u2511 13A0  
                                         u1720 1CB4                                           u2280 1776  
                                         u2440 1276                                           u2360 1074  
                                         u2520 144A                                           u1721 1CB0  
                                         u2281 1772                                           u2441 1272  
                                         u2361 1070                                           u2521 1446  
                                         u1730 1D08                                           u2290 1894  
                                         u2450 1286                                           u2370 10A4  
                                         u2530 2024                                           u1731 1D04  
                                         u2291 1890                                           u2451 1282  
                                         u2371 10A0                                           u2531 2020  
                                         u1740 1F0E                                           u2460 1298  
                                         u2380 10C0                                           u1741 1F0A  
                                         u2461 1294                                           u2381 10BC  
                                         u1750 1F62                                           u2470 12A8  
                                         u2390 10EE                                           u2550 182E  
                                         u1751 1F5E                                           u2471 12A4  
                                         u2391 10EA                                           u2551 182A  
                                         u2480 12C0                                           u2481 12BC  
                                         u2545 180E                                           u1690 1C1C  
                                         u2490 1334                                           u1691 1C18  
                                         u2491 1330                                           u2567 186C  
                                         _WPUB 000F7C                        ??_wr2RegCompleteHandler 0010  
                                         abs@a 0017                                           _dbuf 00A6  
                                         _main 17B8                                           _dtoa 102C  
                     ?_I2C_CallbackReturnReset 000E                                           _prec 00A0  
                                         _nout 009C                                           pad@i 001E  
                                         pad@p 001B                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf2 000FDF  
                                         fsr1l 000FE1                                           pad@w 0020  
                                         fsr2l 000FD9                               __end_of_I2C_Open 1C94  
                                         btemp 005A                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00B0  
                 fp__I2C_DO_SEND_RESTART_WRITE 0000                                   ___param_bank 000000  
             __size_of_rdBlkRegCompleteHandler 0040                                          ??_abs 0019  
                                        ??_pad 001D                               ?_I2C_MasterClose 0001  
                                ?_EUSART_Write 0001            __size_of_I2C_SetAddressNackCallback 0018  
               __size_of_OSCILLATOR_Initialize 000A                               ?_I2C_MasterStart 0001  
                                _I2C_DO_RX_ACK 2508                               ?_I2C_MasterWrite 0001  
                __end_of_OSCILLATOR_Initialize 24BE                                __end_of___aodiv 1654  
                                        ?_main 0001                                          ?_dtoa 0022  
                              __end_of___aomod 17B8                                          _ANSEL 000F7E  
                                        i2l610 214E                                          i2l621 233C  
                                        i2l630 254E                                          i2l607 214C  
                                        i2l624 2580                                          i2l617 1AC8  
                                        i2l627 2548                                          i2l671 009C  
                                        i2l666 0062                                          i2l667 009C  
                                        _RCREG 000FAE                   __size_of_I2C_DO_RX_NACK_STOP 0008  
                                        _RCSTA 000FAB                                   vfpfcnvrt@fmt 0048  
                                        _SPBRG 000FAF                              ??_I2C_DO_TX_EMPTY 0010  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TRISD 000F95  
                                        _TRISE 000F96                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                              __end_of_I2C_DO_RX 1B70  
                            __end_of_I2C_DO_TX 1A0E                                          _flags 00A2  
                       _I2C_Write2ByteRegister 1EF6                                   main@tempData 00D9  
                                        _fputc 1B70                              __end_of_I2C_Close 2312  
                                        _fputs 2086                         __size_of_I2C_MasterFsm 0070  
               I2C_MasterOperation@returnValue 0015                                          pad@fp 0017  
                                        _width 009E                                          _putch 24AA  
                                        dtoa@d 0024                                          dtoa@i 0044  
                                        dtoa@n 003C                                          dtoa@p 0036  
                                        dtoa@s 003A                                          dtoa@w 0038  
                      _I2C_MasterEnableRestart 256C                                          pclath 000FFA  
                                        tablat 000FF5                               ?_I2C_SetCallback 0005  
                 I2C_SetAddressNackCallback@cb 000A                                          ttemp5 005B  
                                        ttemp6 005E                                          ttemp7 0062  
                                        status 000FD8                                          wtemp8 005B  
                            ?_I2C_DO_SEND_STOP 0001                         __size_of_I2C_SetBuffer 0024  
                           ??_I2C_DO_SEND_STOP 0005                                  _fsmStateTable 1001  
                     fp__rd1RegCompleteHandler 0000                                __initialization 23AC  
                                 __end_of_main 1884                                   __end_of_dtoa 130E  
                     fp__wr1RegCompleteHandler 0000              __size_of_I2C_DO_SEND_RESTART_READ 0008  
                    ?_I2C_DO_SEND_RESTART_READ 0001                                 ??_EUSART_Write 0005  
                               ?_I2C_DO_RX_ACK 0001                    ?_INTERRUPT_InterruptManager 0001  
               ??_EUSART_SetRxInterruptHandler 0007                                         ??_main 00D6  
                                       ??_dtoa 002C                              ?_I2C_MasterIsNack 0001  
                                __activetblptr 000003                          _I2C_Read2ByteRegister 1C94  
                            ?_I2C_MasterSetIrq 0001               I2C_Read2ByteRegister@returnValue 001C  
                           ??_I2C_MasterIsNack 0005                             ??_I2C_MasterSetIrq 0005  
         fp__EUSART_DefaultFramingErrorHandler 0000      __end_of_EUSART_DefaultFramingErrorHandler 2582  
   __size_of_EUSART_DefaultFramingErrorHandler 0002            ??_EUSART_DefaultFramingErrorHandler 0001  
           ?_EUSART_DefaultFramingErrorHandler 0001              _EUSART_DefaultFramingErrorHandler 2580  
                   _EUSART_OverrunErrorHandler 00DF                __end_of_I2C_CallbackReturnReset 2564  
                                       ?_fputc 0007                                         ?_fputs 0010  
              __size_of_I2C_CallbackReturnStop 0004                  I2C_SetDataCompleteCallback@cb 000A  
                                       ?_putch 0001                                         _ANSELH 000F7F  
                                 ??_I2C_Poller 0014                                         i2l3090 2338  
                                       i2l3082 2312                                         i2l3330 2142  
                                       i2l3322 210E                                         i2l3084 2322  
                                       i2l3340 1A3C                                         i2l3332 2146  
                                       i2l3324 2120                                         i2l3086 2324  
                                       i2l3246 2544                                         i2l3350 1AA6  
                                       i2l3342 1A54                                         i2l3334 1A0E  
                                       i2l3326 2130                                         i2l3088 2334  
                                       i2l3248 254A                                         i2l3352 1AC4  
                                       i2l3344 1A62                                         i2l3336 1A1E  
                                       i2l3328 2132                                         i2l3346 1A72  
                                       i2l3338 1A2C                                         i2l3348 1A8A  
                                       i2l3480 0028                                         i2l3482 0036  
                                       i2l3484 0044                                         i2l3486 0070  
                                       i2l3478 001A                                         i2l3488 007E  
                                       _OSCCON 000FD3                                         _SPBRGH 000FB0  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                          _I2C_MasterGetRxData 2558                                   vfprintf@cfmt 00CC  
                                    ??___aodiv 0015                                      ??___aomod 0015  
                                _I2C_MasterFsm 1E86                            _EUSART_Transmit_ISR 210E  
                                       clear_0 23B2                              I2C_SetCallback@cb 0005  
                      fp__I2C_DO_SEND_ADR_READ 0000                        __size_of_I2C_MasterOpen 0022  
                      __size_of_I2C_MasterStop 0004                        __size_of_I2C_Initialize 0014  
                                       _printf 233E                                         pad@buf 0019  
                                _I2C_SetBuffer 2366                                         dtoa@fp 0022  
                           __end_of_I2C_Poller 23E8                                         _strlen 21D0  
                 __end_of_I2C_MasterDisableIrq 2578                                         fputc@c 0007  
                                       fputs@c 0014                            _I2C_DO_ADDRESS_NACK 1F64  
                                       fputs@i 0015                                         fputs@s 0010  
                         ?_I2C_MasterGetRxData 0001                                      ?_I2C_Open 0001  
           __end_of_I2C_SetAddressNackCallback 2400                     _I2C_SetAddressNackCallback 23E8  
                                 __mediumconst 0000                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                    ??_I2C_MasterEnableRestart 0005                               __end_of_vfprintf 202E  
                         ?_EUSART_Transmit_ISR 0001                  __size_of_INTERRUPT_Initialize 0004  
                            _SYSTEM_Initialize 2418                                     __accesstop 0060  
                      __end_of__initialization 23C0                            _I2C_MasterOperation 20CA  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                         ?_I2C_DO_ADDRESS_NACK 0001           __end_of_EUSART_SetTxInterruptHandler 24C8  
        __size_of_EUSART_SetTxInterruptHandler 000A                   _EUSART_SetTxInterruptHandler 24BE  
                      _rdBlkRegCompleteHandler 2190                     fp__rdBlkRegCompleteHandler 0000  
                               __pcstackCOMRAM 0001                                 ?_I2C_MasterFsm 0001  
                              ??_I2C_DO_RX_ACK 0005                         _I2C_CallbackReturnStop 2564  
                          ??_SYSTEM_Initialize 0007                                  __end_of_fputc 1C06  
                                __end_of_fputs 20CA                                  __end_of_putch 24B4  
                               ?_I2C_SetBuffer 0005                        ?_I2C_MasterWaitForEvent 0001  
               __size_of_I2C_DO_SEND_ADR_WRITE 0010             __size_of_I2C_DO_SEND_RESTART_WRITE 0008  
                       ?_I2C_Read2ByteRegister 0016                  __end_of_I2C_DO_SEND_ADR_WRITE 2476  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                        ??_I2C_MasterGetRxData 0005                                     ??_I2C_Open 0005  
                         _eusartRxStatusBuffer 0084                     __end_of_I2C_MasterClearIrq 2580  
              ??_EUSART_SetOverrunErrorHandler 0007                                        ??_fputc 000B  
                    __end_of_SYSTEM_Initialize 242E                                        ??_fputs 0014  
                        ??_EUSART_Transmit_ISR 0001                                        ??_putch 0006  
                            _I2C_MasterSendAck 2538                                     __pbssBANK0 0060  
                         __end_of_EUSART_Write 2086                                  ??_I2C_DO_IDLE 0005  
               __size_of_rd2RegCompleteHandler 002C                                  ??_I2C_DO_RCEN 0005  
                __end_of_rd2RegCompleteHandler 228E                   __end_of_I2C_MasterSendTxData 2538  
                           ?_I2C_MasterSendAck 0001                              _I2C_MasterStartRx 255C  
               __size_of_wr2RegCompleteHandler 002C                          ??_I2C_DO_ADDRESS_NACK 0010  
                __end_of_wr2RegCompleteHandler 22E6                    __size_of_EUSART_Receive_ISR 00BC  
                          _I2C_DO_RX_NACK_STOP 2500                          _rd1RegCompleteHandler 228E  
                           ?_I2C_MasterStartRx 0001                     __end_of_I2C_MasterSendNack 2544  
                        _wr1RegCompleteHandler 2236                            ??_I2C_MasterSendAck 0005  
                     rd1RegCompleteHandler@ptr 000E                  ?_EUSART_SetTxInterruptHandler 0005  
             _EUSART_TxDefaultInterruptHandler 00E5                    __end_of_I2C_DO_SEND_RESTART 2520  
                              _I2C_DO_TX_EMPTY 1D1A                            I2C_SetBuffer@buffer 0005  
               __end_of_I2C_MasterWaitForEvent 2466                            ??_I2C_MasterStartRx 0005  
                __size_of_I2C_DO_SEND_ADR_READ 0010                                        _BAUDCON 000FB8  
             __size_of_I2C_CallbackReturnReset 0004                   ??_EUSART_DefaultErrorHandler 0001  
                        ??_I2C_MasterOperation 0014                                        ?_printf 00CE  
               I2C_SetDataCompleteCallback@ptr 000C                                        ?_strlen 0005  
                     ??_I2C_DO_RX_NACK_RESTART 0005              __end_of_I2C_DO_SEND_RESTART_WRITE 2528  
                         ?_I2C_DO_RX_NACK_STOP 0001                                  _eusartRxCount 00A5  
                      ?_I2C_Write2ByteRegister 0016                             __size_of_vfpfcnvrt 01BE  
                __size_of_EUSART_RxDataHandler 002C                      __end_of_I2C_MasterSendAck 253E  
                                      _OSCTUNE 000F9B                       ??_EUSART_SetErrorHandler 0007  
                                      _SSPCON1 000FC6                                        _SSPCON2 000FC5  
                                      _SSPSTAT 000FC7                      __end_of_I2C_MasterStartRx 2560  
                         I2C_Close@returnValue 0005                   ?_I2C_SetDataCompleteCallback 000A  
                                    _I2C_DO_RX 1ACA                                      _I2C_DO_TX 194A  
             __end_of_I2C_DO_SEND_RESTART_READ 2530                                      _I2C_Close 22E6  
                    ??_rdBlkRegCompleteHandler 0010                           _I2C_MasterDisableIrq 2574  
                              ??_I2C_MasterFsm 0012                                        __Hparam 0000  
          __size_of_EUSART_DefaultErrorHandler 0006                                        __Lparam 0000  
                          __end_of_I2C_DO_IDLE 24AA                            __end_of_I2C_DO_RCEN 249E  
                                      ___aodiv 14CC                                        ___aomod 1654  
                              ??_I2C_SetBuffer 0009                                      ?_vfprintf 00C6  
                      I2C_SetBuffer@bufferSize 0007                                   __psmallconst 1000  
                               _I2C_MasterOpen 238A                                        __pcinit 23AC  
                               _I2C_MasterStop 2568                                 _I2C_Initialize 242E  
                                      __ramtop 1000                      __size_of_I2C_DO_SEND_STOP 0008  
                                      __ptext0 17B8                                        __ptext1 233E  
                                      __ptext2 1FCA                                        __ptext3 130E  
                                      __ptext4 102C                                        __ptext5 1884  
                                      __ptext6 21D0                                        __ptext7 2086  
                                      __ptext8 1B70                                        __ptext9 24AA  
               __end_of_I2C_Write2ByteRegister 1F64                                __size_of_printf 0028  
                        ??_I2C_DO_RX_NACK_STOP 0005                                __size_of_strlen 0036  
                        _OSCILLATOR_Initialize 24B4                                   __size_of_abs 0040  
                                 __size_of_pad 00C6                             I2C_SetCallback@idx 0009  
                     __size_of_I2C_MasterClose 0004                       ??_PIN_MANAGER_Initialize 0005  
                I2C_CallbackReturnReset@funPtr 000E                             I2C_SetCallback@ptr 0007  
                     wr1RegCompleteHandler@ptr 000E                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                     __size_of_I2C_MasterStart 0004                       __size_of_I2C_MasterWrite 0008  
                   __size_of_SYSTEM_Initialize 0016                           end_of_initialization 23C0  
                                   ?_I2C_DO_RX 0001                                     ?_I2C_DO_TX 0001  
        __end_of_EUSART_SetOverrunErrorHandler 24DC         __size_of_EUSART_SetOverrunErrorHandler 000A  
                _EUSART_SetOverrunErrorHandler 24D2                      __size_of_I2C_MasterIsNack 0014  
                                      fputc@fp 0009                                     ?_I2C_Close 0001  
                                      fputs@fp 0012                         ?_rd1RegCompleteHandler 000E  
                      __end_of_I2C_DO_TX_EMPTY 1D96                      __size_of_I2C_MasterSetIrq 0004  
                        ?_I2C_MasterDisableIrq 0001                              _EUSART_Initialize 1E10  
                       ?_wr1RegCompleteHandler 000E                       fp__rd2RegCompleteHandler 0000  
                           ?_EUSART_Initialize 0001                       __size_of_I2C_SetCallback 007A  
                            __end_of_vfpfcnvrt 14CC                                      _RCSTAbits 000FAB  
                                      postdec2 000FDD                         __end_of_I2C_MasterOpen 23AC  
                     fp__wr2RegCompleteHandler 0000                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                       __end_of_I2C_MasterStop 256C                         __end_of_I2C_Initialize 2442  
                                   ??_vfprintf 0056                      fp__I2C_CallbackReturnStop 0000  
                                      strlen@a 0007                                        strlen@s 0005  
                          ??_EUSART_Initialize 0007                 ??_EUSART_SetTxInterruptHandler 0007  
              __end_of_rdBlkRegCompleteHandler 21D0                           _I2C_MasterSendTxData 2530  
                              fp__I2C_DO_RESET 0000                __size_of_I2C_DO_RX_NACK_RESTART 0008  
                  ?_I2C_SetAddressNackCallback 000A                          __size_of_EUSART_Write 0058  
                   __size_of_I2C_MasterSendAck 0006                              __size_of_I2C_Open 008E  
              __size_of_EUSART_SetErrorHandler 000A                     __size_of_I2C_MasterStartRx 0004  
                    __end_of_EUSART_Initialize 1E86                      I2C_Write2ByteRegister@reg 0016  
                                  _I2C_DO_IDLE 249E                                    _I2C_DO_RCEN 2492  
                   rdBlkRegCompleteHandler@ptr 000E                                      _TXSTAbits 000FAC  
                      ?_I2C_CallbackReturnStop 000E                       _I2C_DO_SEND_RESTART_READ 2528  
                  fp__I2C_DO_SEND_RESTART_READ 0000                   I2C_CallbackReturnStop@funPtr 000E  
                      ??_I2C_Read2ByteRegister 0018                                ?_I2C_MasterOpen 0001  
                 __end_of_INTERRUPT_Initialize 2554                                ?_I2C_MasterStop 0001  
                              ?_I2C_Initialize 0001                        _I2C_CallbackReturnReset 2560  
                   fp__I2C_CallbackReturnReset 0000             __end_of_EUSART_DefaultErrorHandler 2550  
                   _EUSART_DefaultErrorHandler 254A                                    vfpfcnvrt@ap 004A  
                                  vfpfcnvrt@fp 0046                                    vfpfcnvrt@ll 004E  
         __size_of_I2C_SetDataCompleteCallback 0018                                   _EUSART_Write 202E  
                        ?_I2C_MasterSendTxData 0001                         ?_OSCILLATOR_Initialize 0001  
                  ??_I2C_DO_SEND_RESTART_WRITE 0005                                 __end_of_printf 2366  
                               __end_of_strlen 2206                            start_initialization 23AC  
              __size_of_PIN_MANAGER_Initialize 0030                                    __end_of_abs 2190  
                                  __end_of_pad 194A                                  ?_I2C_DO_RESET 0001  
 EUSART_SetRxInterruptHandler@interruptHandler 0005   EUSART_SetTxInterruptHandler@interruptHandler 0005  
                                  putch@txData 0006                                    ??_I2C_DO_RX 0010  
                                  ??_I2C_DO_TX 0010                              ??_I2C_MasterClose 0005  
                       ??_I2C_MasterDisableIrq 0005                                    ??_I2C_Close 0005  
                            ??_I2C_MasterStart 0005                              ??_I2C_MasterWrite 0016  
               __end_of_I2C_CallbackReturnStop 2568                         _I2C_DO_RX_NACK_RESTART 24F8  
                             ?_I2C_DO_TX_EMPTY 0001                             _I2C_MasterClearIrq 257C  
               ?_EUSART_SetOverrunErrorHandler 0005                                    vfprintf@fmt 00C8  
                   _EUSART_FramingErrorHandler 00E1                         _EUSART_SetErrorHandler 24E6  
                          ?_I2C_MasterClearIrq 0001                    __end_of_I2C_MasterGetRxData 255C  
                        __end_of_I2C_DO_RX_ACK 2510                               _I2C_DO_SEND_STOP 2510  
                            ??_I2C_SetCallback 0009                                       ??_printf 0056  
                          I2C_Open@returnValue 0006                             _I2C_MasterSendNack 253E  
                                     ??_strlen 0007                       ?_I2C_MasterEnableRestart 0001  
                       fp__I2C_DO_SEND_RESTART 0000                       I2C_Read2ByteRegister@reg 0016  
                  __end_of_EUSART_Transmit_ISR 2150                          _I2C_DO_SEND_ADR_WRITE 2466  
                                  __pbssCOMRAM 0056                                  __pcstackBANK0 00C6  
                               ??_I2C_DO_RESET 0005                               ___aodiv@dividend 0005  
                          ?_I2C_MasterSendNack 0001                   __end_of_I2C_DO_SEND_ADR_READ 2486  
                         ??_I2C_MasterClearIrq 0005                    __end_of_I2C_DO_ADDRESS_NACK 1FCA  
                   __end_of_EUSART_Receive_ISR 1ACA                               _I2C_MasterIsNack 2442  
                   __size_of_EUSART_Initialize 0076                      _I2C_DO_SEND_RESTART_WRITE 2520  
             _EUSART_RxDefaultInterruptHandler 00E3                               _I2C_MasterSetIrq 2554  
                                    __pnvBANK0 00DD                          _rd2RegCompleteHandler 2262  
                        __end_of_fsmStateTable 1021                   __end_of_EUSART_RxDataHandler 233E  
                       _PIN_MANAGER_Initialize 2206                                      _dtoa$2024 0034  
                        _wr2RegCompleteHandler 22BA                      ??_I2C_CallbackReturnReset 0010  
                  __end_of_I2C_MasterOperation 210E                           ??_I2C_MasterSendNack 0005  
                     rd2RegCompleteHandler@ptr 000E                                      __pintcode 0008  
                                     ?___aodiv 0005                                       ?___aomod 0005  
                             ___aodiv@quotient 0017                                   _eusartRxHead 0057  
                                 _eusartTxHead 0059                                   _eusartRxTail 0056  
                       ??_I2C_MasterSendTxData 0005                                   _eusartTxTail 0058  
                 ??_INTERRUPT_InterruptManager 0001                              __size_of_vfprintf 0064  
                                 fp__I2C_DO_RX 0000                                   fp__I2C_DO_TX 0000  
                      _eusartTxBufferRemaining 00E7                   __size_of_I2C_DO_SEND_RESTART 0008  
                                  __smallconst 1000                        I2C_MasterOperation@read 0014  
                                     _I2C_Open 1C06                                 __size_of_fputc 0096  
                               __size_of_fputs 0044                        ??_rd1RegCompleteHandler 0010  
                               __size_of_putch 000A                           _INTERRUPT_Initialize 2550  
                               _eusartRxBuffer 008C                        ??_wr1RegCompleteHandler 0010  
                 I2C_Read2ByteRegister@address 001B                                 _eusartTxBuffer 0094  
       EUSART_SetErrorHandler@interruptHandler 0005                                       _PIE1bits 000F9D  
                            _eusartRxLastError 00A4                                       i2u200_40 0044  
                                     i2u200_41 0040                                       i2u202_40 0070  
                                     i2u201_48 004A                                       i2u202_41 006C  
                                     i2u201_49 005E                                       i2u203_40 007E  
                                     i2u203_41 007A                                       i2u204_48 0084  
                                     i2u204_49 0098            __size_of_INTERRUPT_InterruptManager 00A8  
                                     i2u164_40 2334                                       i2u180_40 1A2C  
                                     i2u164_41 2330                                       i2u180_41 1A28  
                                     i2u182_40 1A62                                       i2u181_48 1A42  
                                     i2u182_41 1A5E                                       i2u181_49 1A54  
                                     i2u184_40 1AA6                                       i2u183_48 1A78  
                                     i2u184_41 1AA2                                       i2u183_49 1A8A  
                                     _PIR1bits 000F9E                                       i2u185_48 1AAC  
                                     i2u178_40 2120                                       i2u185_49 1AC0  
                                     i2u178_41 211C                ??_EUSART_SetFramingErrorHandler 0007  
                                     i2u179_40 2142                                       i2u179_41 213E  
                                     _PIR2bits 000FA1                                       i2u198_40 0028  
                                     i2u198_41 0024                                       i2u199_40 0036  
                                     i2u199_41 0032                          __end_of_I2C_MasterFsm 1EF6  
                                     _RCONbits 000FD0                    __end_of_I2C_DO_RX_NACK_STOP 2508  
         fp__EUSART_DefaultOverrunErrorHandler 0000      __end_of_EUSART_DefaultOverrunErrorHandler 254A  
   __size_of_EUSART_DefaultOverrunErrorHandler 0006            ??_EUSART_DefaultOverrunErrorHandler 0001  
           ?_EUSART_DefaultOverrunErrorHandler 0001              _EUSART_DefaultOverrunErrorHandler 2544  
              __end_of_I2C_MasterEnableRestart 2570                                 fp__I2C_DO_IDLE 0000  
                               fp__I2C_DO_RCEN 0000                                      _vfpfcnvrt 130E  
                        __end_of_I2C_SetBuffer 238A                         ?_I2C_DO_SEND_ADR_WRITE 0001  
                     I2C_MasterSendTxData@data 0005                       wr2RegCompleteHandler@ptr 000E  
                                  _INTCON2bits 000FF1                     ??_I2C_DO_SEND_RESTART_READ 0005  
                        ?_INTERRUPT_Initialize 0001                       ?_rdBlkRegCompleteHandler 000E  
                                   _I2C_Poller 23CA                                     _I2C_Status 0060  
                                 ?_I2C_DO_IDLE 0001                                   ?_I2C_DO_RCEN 0001  
                       ?_rd2RegCompleteHandler 000E                          fp__EUSART_Receive_ISR 0000  
                             ??_I2C_MasterOpen 0005                         ?_wr2RegCompleteHandler 000E  
                             ??_I2C_MasterStop 0005                       ??_I2C_MasterWaitForEvent 0005  
                             ??_I2C_Initialize 0005                      fp__I2C_DO_RX_NACK_RESTART 0000  
                                     __Hrparam 0000                                     vfprintf@ap 00CA  
                                     __Lrparam 0000                                     vfprintf@fp 00C6  
                         __end_of_I2C_DO_RESET 2492                        ??_OSCILLATOR_Initialize 0005  
                          _EUSART_ErrorHandler 00DD                               __size_of___aodiv 0188  
                             __size_of___aomod 0164                           _I2C_DO_SEND_ADR_READ 2476  
               __size_of_I2C_Read2ByteRegister 0086                    ?_EUSART_DefaultErrorHandler 0001  
                                   ?_vfpfcnvrt 0046                  __end_of_I2C_Read2ByteRegister 1D1A  
                              ___aodiv@divisor 000D                                ___aodiv@counter 0015  
                              _I2C_MasterClose 2578                  I2C_SetAddressNackCallback@ptr 000C  
                              I2C_Open@address 0005                            fp__I2C_DO_SEND_STOP 0000  
                              _I2C_MasterStart 2570                                _I2C_MasterWrite 24F0  
                         _EUSART_RxDataHandler 2312                                       __ptext10 202E  
                                     __ptext11 2150                                       __ptext20 24BE  
                                     __ptext12 1654                                       __ptext21 24C8  
                                     __ptext13 14CC                                       __ptext30 24F0  
                                     __ptext22 24D2                                       __ptext14 2418  
                                     __ptext31 20CA                                       __ptext23 24DC  
                                     __ptext15 2206                                       __ptext40 2510  
                                     __ptext32 23CA                                       __ptext24 24E6  
                                     __ptext16 24B4                                       __ptext41 2518  
                                     __ptext33 2456                                       __ptext25 1EF6  
                                     __ptext17 2550                                       __ptext50 1D1A  
                                     __ptext42 2520                                       __ptext34 1E86  
                                     __ptext26 1C94                                       __ptext18 242E  
                                     __ptext51 2554                                       __ptext43 2528  
                                     __ptext35 1F64                                       __ptext27 23E8  
                                     __ptext19 1E10                                       __ptext60 2190  
                                     __ptext52 2442                                       __ptext44 2492  
                                     __ptext36 2486                                       __ptext28 1C06  
                                     __ptext61 2236                                       __ptext53 2530  
                                     __ptext45 1ACA                                       __ptext37 24F8  
                                     __ptext29 238A                                       __ptext70 2570  
                                     __ptext62 2262                                       __ptext54 2538  
                                     __ptext46 194A                                       __ptext38 2500  
                                     __ptext71 22E6                                       __ptext63 228E  
                                     __ptext55 2558                                       __ptext47 2466  
                                     __ptext39 2508                                       __ptext80 254A  
                                     __ptext72 2574                                       __ptext64 22BA  
                                     __ptext56 253E                                       __ptext48 2476  
                                     __ptext81 2312                                       __ptext73 2578  
                                     __ptext65 2400                                       __ptext57 255C  
                                     __ptext49 249E                                       __ptext82 0000  
                                     __ptext74 257C                                       __ptext66 1D96  
                                     __ptext58 2560                                       __ptext67 2366  
                                     __ptext59 2564                                       __ptext76 210E  
                                     __ptext68 2568                                       __ptext77 1A0E  
                                     __ptext69 256C                                       __ptext78 2544  
                                     __ptext79 2580            __end_of_I2C_SetDataCompleteCallback 2418  
                  _I2C_SetDataCompleteCallback 2400                                main@tempDataAnz 00DB  
                      ?_I2C_DO_RX_NACK_RESTART 0001                       __end_of_I2C_DO_SEND_STOP 2518  
                                __size_of_main 00CC                                  __size_of_dtoa 02E2  
                I2C_Write2ByteRegister@address 0019                        ?_EUSART_SetErrorHandler 0005  
                              _I2C_SetCallback 1D96                  ??_I2C_SetDataCompleteCallback 000E  
EUSART_SetOverrunErrorHandler@interruptHandler 0005                       ??_I2C_Write2ByteRegister 0019  
                                     int$flags 005A                          ?_I2C_DO_SEND_ADR_READ 0001  
                                     _vfprintf 1FCA             __end_of_INTERRUPT_InterruptManager 00B0  
                   _INTERRUPT_InterruptManager 0008                                      printf@fmt 00CE  
        __end_of_EUSART_SetFramingErrorHandler 24E6         __size_of_EUSART_SetFramingErrorHandler 000A  
                _EUSART_SetFramingErrorHandler 24DC                       __end_of_I2C_MasterIsNack 2456  
                             ___aomod@dividend 0005                       __end_of_I2C_MasterSetIrq 2558  
                                   _INTCONbits 000FF2                          ?_EUSART_RxDataHandler 0001  
                       ??_INTERRUPT_Initialize 0005                 __end_of_I2C_DO_RX_NACK_RESTART 2500  
                                     intlevel2 0000                                    ?_I2C_Poller 0001  
                       fp__EUSART_Transmit_ISR 0000               __size_of_I2C_MasterEnableRestart 0004  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 24F0  
                          _I2C_DO_SEND_RESTART 2518                  __size_of_I2C_MasterDisableIrq 0004  
                       fp__I2C_DO_ADDRESS_NACK 0000           __end_of_EUSART_SetRxInterruptHandler 24D2  
        __size_of_EUSART_SetRxInterruptHandler 000A                   _EUSART_SetRxInterruptHandler 24C8  
              __size_of_I2C_MasterWaitForEvent 0010                                       printf@ap 00D4  
                           _EUSART_Receive_ISR 1A0E  EUSART_SetFramingErrorHandler@interruptHandler 0005  
                      __end_of_I2C_MasterClose 257C                       __size_of_I2C_DO_TX_EMPTY 007C  
                           fp__I2C_DO_TX_EMPTY 0000                                ___aomod@divisor 000D  
                                  ??_vfpfcnvrt 004C                        __end_of_I2C_MasterStart 2574  
                              ___aomod@counter 0015                        __end_of_I2C_MasterWrite 24F8  
                         ?_I2C_DO_SEND_RESTART 0001                            ?_EUSART_Receive_ISR 0001  
                fp__EUSART_DefaultErrorHandler 0000                   __size_of_I2C_MasterGetRxData 0004  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                  __size_of_I2C_MasterClearIrq 0004                             EUSART_Write@txData 0005  
                 __size_of_EUSART_Transmit_ISR 0042                                   ___aodiv@sign 0016  
                      __end_of_I2C_SetCallback 1E10                 __end_of_PIN_MANAGER_Initialize 2236  
               __size_of_rd1RegCompleteHandler 002C                  __end_of_rd1RegCompleteHandler 22BA  
                       __size_of_I2C_DO_RX_ACK 0008                               fp__I2C_DO_RX_ACK 0000  
               __size_of_wr1RegCompleteHandler 002C                           ??_EUSART_Receive_ISR 0001  
                        __size_of_I2C_DO_RESET 000C                  __end_of_wr1RegCompleteHandler 2262  
                 __size_of_I2C_DO_ADDRESS_NACK 0066                           __size_of_I2C_DO_IDLE 000C  
                         __size_of_I2C_DO_RCEN 000C                                   ___aomod@sign 0016  
                           __size_of_I2C_DO_RX 00A6                             __size_of_I2C_DO_TX 00C4  
